{
    "project": {},
    "files": {
        "attributes.js": {
            "name": "attributes.js",
            "modules": {
                "attributes": 1
            },
            "classes": {
                "Style": 1,
                "BorderStyle": 1,
                "Attributes": 1,
                "TableAttributes": 1,
                "TextStyle": 1,
                "LinkStyle": 1,
                "TableStyle": 1,
                "TableRowStyle": 1,
                "TableCellStyle": 1,
                "ImageStyle": 1,
                "ListStyle": 1,
                "ListItemStyle": 1,
                "Content": 1,
                "Cell": 1,
                "Row": 1,
                "Table": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "helpers.js": {
            "name": "helpers.js",
            "modules": {
                "helpers": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "jquery-1.10.2.js": {
            "name": "jquery-1.10.2.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "start.js": {
            "name": "start.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "attributes": {
            "name": "attributes",
            "submodules": {},
            "classes": {
                "Style": 1,
                "BorderStyle": 1,
                "Attributes": 1,
                "TableAttributes": 1,
                "TextStyle": 1,
                "LinkStyle": 1,
                "TableStyle": 1,
                "TableRowStyle": 1,
                "TableCellStyle": 1,
                "ImageStyle": 1,
                "ListStyle": 1,
                "ListItemStyle": 1,
                "Content": 1,
                "Cell": 1,
                "Row": 1,
                "Table": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "attributes.js",
            "line": 1280,
            "description": "Produces a string of properties in inline-style fashion\nThis function is supposed to be added to prototypes of different objects.\nIt takse into consideration only properties, methods are ignored.\nIf attribite value is a number, the measurement unit will be appended.",
            "params": [
                {
                    "name": "obj",
                    "description": "an object which string reperesentation should be generated.",
                    "type": "Object"
                },
                {
                    "name": "unit",
                    "description": "a mesurement unit to be added to the numerical attribute values. By default, it is set to 'px'.",
                    "type": "String|null"
                }
            ],
            "return": {
                "description": "a concatenation of substrings; each substring is of this format: \"attribute: value;\".",
                "type": "String"
            },
            "example": [
                " The return value is of the form: \"padding: 0px;margin: 10px;color: #ababab;\""
            ],
            "extends": "Style",
            "itemtype": "method"
        },
        "helpers": {
            "name": "helpers",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "helpers.js",
            "line": 22,
            "description": "transforms each element of the input array into a non-negative number.\nIf an element is negative, its absolute value is used.\nIf an element fails to be converted to a number, it is substituted by zero.",
            "example": [
                "   [1.1, 2.4, 2] -> [1.1, 2.4, 2],\n           [\"4\", -3, 3.2, \"a\"] -> [4, 3, 3.2, 0]"
            ],
            "params": [
                {
                    "name": "arr",
                    "description": "Array      array of numbers"
                }
            ],
            "return": {
                "description": "Array      array of numbers"
            },
            "itemtype": "method"
        }
    },
    "classes": {
        "Style": {
            "name": "Style",
            "shortname": "Style",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "attributes",
            "namespace": "",
            "file": "attributes.js",
            "line": 179,
            "description": "This class is supposed to characterize inline styles of html tags.",
            "params": [
                {
                    "name": "style",
                    "description": "string of label-value pairs or object.",
                    "type": "String|object"
                }
            ]
        },
        "BorderStyle": {
            "name": "BorderStyle",
            "shortname": "BorderStyle",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "attributes",
            "namespace": "",
            "file": "attributes.js",
            "line": 295,
            "description": "Styles specific for the table border.",
            "extends": "Style"
        },
        "Attributes": {
            "name": "Attributes",
            "shortname": "Attributes",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "attributes",
            "namespace": "",
            "file": "attributes.js",
            "line": 331,
            "description": "This class is supposed to define attributes of html tags",
            "params": [
                {
                    "name": "attr",
                    "description": "a string or object from which this object properties are to be created.",
                    "type": "String|object"
                }
            ]
        },
        "TableAttributes": {
            "name": "TableAttributes",
            "shortname": "TableAttributes",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "attributes",
            "namespace": "",
            "file": "attributes.js",
            "line": 405,
            "description": "Table-specific attributes.",
            "extends": "Attributes"
        },
        "TextStyle": {
            "name": "TextStyle",
            "shortname": "TextStyle",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "attributes",
            "namespace": "",
            "file": "attributes.js",
            "line": 429,
            "description": "Text specific style class.",
            "extends": "Style"
        },
        "LinkStyle": {
            "name": "LinkStyle",
            "shortname": "LinkStyle",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "attributes",
            "namespace": "",
            "file": "attributes.js",
            "line": 473,
            "description": "Represents hyperlink style."
        },
        "TableStyle": {
            "name": "TableStyle",
            "shortname": "TableStyle",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "attributes",
            "namespace": "",
            "file": "attributes.js",
            "line": 524,
            "description": "Represents table style."
        },
        "TableRowStyle": {
            "name": "TableRowStyle",
            "shortname": "TableRowStyle",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "attributes",
            "namespace": "",
            "file": "attributes.js",
            "line": 600,
            "description": "Represents table row style."
        },
        "TableCellStyle": {
            "name": "TableCellStyle",
            "shortname": "TableCellStyle",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "attributes",
            "namespace": "",
            "file": "attributes.js",
            "line": 662,
            "description": "Represents table cell styles."
        },
        "ImageStyle": {
            "name": "ImageStyle",
            "shortname": "ImageStyle",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "attributes",
            "namespace": "",
            "file": "attributes.js",
            "line": 736,
            "description": "Represents image styles."
        },
        "ListStyle": {
            "name": "ListStyle",
            "shortname": "ListStyle",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "attributes",
            "namespace": "",
            "file": "attributes.js",
            "line": 792,
            "description": "Represents image styles."
        },
        "ListItemStyle": {
            "name": "ListItemStyle",
            "shortname": "ListItemStyle",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "attributes",
            "namespace": "",
            "file": "attributes.js",
            "line": 818,
            "description": "Represents list item styles."
        },
        "Content": {
            "name": "Content",
            "shortname": "Content",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "attributes",
            "namespace": "",
            "file": "attributes.js",
            "line": 865,
            "description": "This class is used to encompass other objects."
        },
        "Cell": {
            "name": "Cell",
            "shortname": "Cell",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "attributes",
            "namespace": "",
            "file": "attributes.js",
            "line": 918,
            "description": "Represents a table cell. The argument is supposed to be passed to the \"content\" property.",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Mixed"
                }
            ]
        },
        "Row": {
            "name": "Row",
            "shortname": "Row",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "attributes",
            "namespace": "",
            "file": "attributes.js",
            "line": 1027,
            "description": "Represents a table row"
        },
        "Table": {
            "name": "Table",
            "shortname": "Table",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "attributes",
            "namespace": "",
            "file": "attributes.js",
            "line": 1280,
            "description": "Represents table."
        }
    },
    "classitems": [
        {
            "file": "attributes.js",
            "line": 61,
            "description": "Flatten the object. This function was written because Node::attributes returns attributes in format.\nExample {'1': {name: \"width\", value:\"100\", ...}, '2': {name: \"color\", value:\"black\", ...}, ...}\nreturns {\"width\":\"100\", \"color\":\"black\", ...}",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "Style",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 80,
            "description": "Sandwiches the midlle string with the left and the right ones. If the middle one is empty, empty string is returned.\nIf the right arguments is not given, the left one is used.",
            "params": [
                {
                    "name": "left",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "middle",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "right",
                    "description": "",
                    "type": "String"
                }
            ],
            "type": "String|Null",
            "return": {
                "description": "",
                "type": "String|Null"
            },
            "class": "Style",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 101,
            "description": "Glues all elements of the array, replace trailing spaces and repaces multiple spaces with a single one.",
            "params": [
                {
                    "name": "arr",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "glue",
                    "description": "glue string",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Style",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 118,
            "description": "Merge two objects. If non-object is given, an error is thrown.",
            "params": [
                {
                    "name": "obj1",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "obj2",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Style",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 192,
            "description": "Fill in the properties with the values from the argument if any",
            "class": "Style",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 224,
            "description": "Appends object. If non-object is given, error is thrown.",
            "itemtype": "method",
            "name": "appendStyle",
            "params": [
                {
                    "name": "stl",
                    "description": "style to be appended",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Style",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 242,
            "description": "Generates string representation of this object (as inline styles)",
            "itemtype": "method",
            "name": "toString",
            "type": "String",
            "return": {
                "description": "html-like string for this object",
                "type": "String"
            },
            "example": [
                " The return value might be one of this form: style=\"width: 100px; color: red;\""
            ],
            "class": "Style",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 251,
            "description": "Imposes the width, min-width and max-width",
            "itemtype": "method",
            "name": "setWidth",
            "type": "Void",
            "params": [
                {
                    "name": "w",
                    "description": "value of width",
                    "type": "Mixed"
                }
            ],
            "class": "Style",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 261,
            "description": "returns object with keys 'width', 'color', 'style' describing the border.\nIf the Style object has 'border-style' equal to 'none', then in the\nreturn object, the key 'width' is set to 0.\nIf 'border-style' is not 'none' and 'border-width' is present, then in the\nreturn object, the key 'width' the 'border-width' value.\nOtherwise, the 'width' key is not present.",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Style",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 307,
            "description": "border width in px",
            "itemtype": "property",
            "name": "border-width",
            "type": "String|Number",
            "default": "1px",
            "class": "BorderStyle",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 314,
            "description": "border style. Possible values: none, solid, dotted etc.",
            "itemtype": "property",
            "name": "border-style",
            "type": "String",
            "default": "'solid'",
            "class": "BorderStyle",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 321,
            "description": "border color. In case one wants black color, one should use a color maximally close to the black (e.g. #000001)\notherwise some web browsers (e.g. GMail) will remove it and substitute it with its own one.",
            "itemtype": "property",
            "name": "border-color",
            "type": "String",
            "default": "#000001",
            "class": "BorderStyle",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 343,
            "description": "Fill in the properties with the values from the argument if any",
            "class": "Attributes",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 375,
            "description": "Generates string representation of this object (as html attributes)",
            "itemtype": "method",
            "name": "toString",
            "type": "String",
            "return": {
                "description": "html-like string for this object",
                "type": "String"
            },
            "example": [
                " The return value might be one of this form: <b>class=\"example\" id=\"tag\"</b>"
            ],
            "class": "Attributes",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 385,
            "description": "Appends object. If non-object is given, error is thrown. This is a copy-paste of Styles::appendStyle",
            "itemtype": "method",
            "name": "appendAttribute",
            "params": [
                {
                    "name": "stl",
                    "description": "style to be appended",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Attributes",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 414,
            "description": "Cellpadding attribute of the table. It is supposed that measurement unit is \"px\".",
            "itemtype": "property",
            "name": "cellpadding",
            "type": "Number",
            "default": "0",
            "class": "TableAttributes",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 420,
            "description": "Cellspacing attribute of the table. It is supposed that measurement unit is \"px\".",
            "itemtype": "property",
            "name": "cellspacing",
            "type": "Number",
            "default": "0",
            "class": "TableAttributes",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 440,
            "description": "Font size, including unit of measurement.",
            "itemtype": "property",
            "name": "font-size",
            "type": "String",
            "default": "\"12px\"",
            "class": "TextStyle",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 446,
            "description": "Font color",
            "itemtype": "property",
            "name": "color \tFont color",
            "type": "String",
            "default": "\"#000001\". NB: Gmail removes color tags corresponding to the black color, so use #000001 instead of #000000.",
            "class": "TextStyle",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 452,
            "description": "Font weight. Some possible values: \"normal\", \"bold\", \"bolder\", 100, 200, ..., 900. See html manuals for more info.",
            "itemtype": "property",
            "name": "font-weight",
            "type": "String|Integer",
            "default": "\"normal\"",
            "class": "TextStyle",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 458,
            "description": "Padding value along with unit of measurement",
            "itemtype": "property",
            "name": "padding",
            "type": "String",
            "default": "\"0px\"",
            "class": "TextStyle",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 464,
            "description": "Margin value along with unit of measurement",
            "itemtype": "property",
            "name": "margin",
            "type": "String",
            "default": "\"0px\"",
            "class": "TextStyle",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 484,
            "description": "Text decoration attribute",
            "itemtype": "property",
            "name": "text-decoration",
            "type": "String",
            "default": "\"underline\"",
            "class": "LinkStyle",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 491,
            "description": "Font size",
            "itemtype": "property",
            "name": "font size",
            "type": "String|Integer",
            "default": "12",
            "class": "LinkStyle",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 497,
            "description": "Font color attribute",
            "itemtype": "property",
            "name": "font color",
            "type": "String",
            "default": "\"blue\"",
            "class": "LinkStyle",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 503,
            "description": "Font wieght attribute. See html manuals for possible values.",
            "itemtype": "property",
            "name": "font weight",
            "type": "String|Integer",
            "default": "\"normal\"",
            "class": "LinkStyle",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 509,
            "description": "Padding.",
            "itemtype": "property",
            "name": "padding",
            "type": "String|Number",
            "default": "0",
            "class": "LinkStyle",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 515,
            "description": "Margin.",
            "itemtype": "property",
            "name": "margin",
            "type": "String|Number",
            "default": "0",
            "class": "LinkStyle",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 535,
            "description": "Color of the border table",
            "itemtype": "property",
            "name": "border-color",
            "type": "String",
            "default": "\"#FFFFFF\"",
            "class": "TableStyle",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 541,
            "description": "Style of the border table. See html manuals for possible values.",
            "itemtype": "property",
            "name": "border-style",
            "type": "String",
            "default": "\"none\"",
            "class": "TableStyle",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 547,
            "description": "Width of the border table.",
            "itemtype": "property",
            "name": "border-width",
            "type": "String|Number",
            "default": "0",
            "class": "TableStyle",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 553,
            "description": "Margin of the table.",
            "itemtype": "property",
            "name": "margin",
            "type": "String|Number",
            "default": "0",
            "class": "TableStyle",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 559,
            "description": "Padding of the table.",
            "itemtype": "property",
            "name": "padding",
            "type": "String|Number",
            "default": "0",
            "class": "TableStyle",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 565,
            "description": "Table width.",
            "itemtype": "property",
            "name": "width",
            "type": "String|Number",
            "default": "0",
            "class": "TableStyle",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 571,
            "description": "Table maximal width. It is supposed to be equal to \"width\" property.",
            "itemtype": "property",
            "name": "max-width",
            "type": "String|Number",
            "default": "0",
            "class": "TableStyle",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 577,
            "description": "Table minimal width. It is supposed to be equal to \"width\" property.",
            "itemtype": "property",
            "name": "min-width",
            "type": "String|Number",
            "default": "0",
            "class": "TableStyle",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 584,
            "description": "Whether to collapse the table borders or not.",
            "deprecated": true,
            "deprecationMessage": "Do not use, because it causes problems in MS Outlook.",
            "itemtype": "property",
            "name": "border-collapse",
            "type": "String",
            "default": "0",
            "class": "TableStyle",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 591,
            "description": "Border spacing.",
            "itemtype": "property",
            "name": "border-spacing",
            "type": "String",
            "default": "'0px 0px'",
            "class": "TableStyle",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 611,
            "description": "Color of the border table",
            "itemtype": "property",
            "name": "border-color",
            "type": "String",
            "default": "\"#FFFFFF\"",
            "class": "TableRowStyle",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 617,
            "description": "Style of the border table. See html manuals for possible values.",
            "itemtype": "property",
            "name": "border-style",
            "type": "String",
            "default": "\"none\"",
            "class": "TableRowStyle",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 623,
            "description": "Width of the border table.",
            "itemtype": "property",
            "name": "border-width",
            "type": "String|Number",
            "default": "0",
            "class": "TableRowStyle",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 629,
            "description": "Margin of the table.",
            "itemtype": "property",
            "name": "margin",
            "type": "String|Number",
            "default": "0",
            "class": "TableRowStyle",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 635,
            "description": "Padding of the table.",
            "itemtype": "property",
            "name": "padding",
            "type": "String|Number",
            "default": "0",
            "class": "TableRowStyle",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 641,
            "description": "Table width.",
            "itemtype": "property",
            "name": "width",
            "type": "String|Number",
            "default": "0",
            "class": "TableRowStyle",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 647,
            "description": "Table maximal width. It is supposed to be equal to \"width\" property.",
            "itemtype": "property",
            "name": "max-width",
            "type": "String|Number",
            "default": "0",
            "class": "TableRowStyle",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 653,
            "description": "Table minimal width. It is supposed to be equal to \"width\" property.",
            "itemtype": "property",
            "name": "min-width",
            "type": "String|Number",
            "default": "0",
            "class": "TableRowStyle",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 673,
            "description": "Color of the border table",
            "itemtype": "property",
            "name": "border-color",
            "type": "String",
            "default": "\"#FFFFFF\"",
            "class": "TableCellStyle",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 679,
            "description": "Style of the border table. See html manuals for possible values.",
            "itemtype": "property",
            "name": "border-style",
            "type": "String",
            "default": "\"none\"",
            "class": "TableCellStyle",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 685,
            "description": "Width of the border table.",
            "itemtype": "property",
            "name": "border-width",
            "type": "String|Number",
            "default": "\"0px\"",
            "class": "TableCellStyle",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 691,
            "description": "Padding.",
            "itemtype": "property",
            "name": "padding",
            "type": "String|Number",
            "default": "0",
            "class": "TableCellStyle",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 697,
            "description": "Margin.",
            "itemtype": "property",
            "name": "margin",
            "type": "String|Number",
            "default": "0",
            "class": "TableCellStyle",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 703,
            "description": "Table width.",
            "itemtype": "property",
            "name": "width",
            "type": "String|Number",
            "default": "0",
            "class": "TableCellStyle",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 709,
            "description": "Table minimal width. It is supposed to be equal to \"width\" property.",
            "itemtype": "property",
            "name": "max-width",
            "type": "String|Number",
            "default": "0",
            "class": "TableCellStyle",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 715,
            "description": "Table minimal width. It is supposed to be equal to \"width\" property.",
            "itemtype": "property",
            "name": "min-width",
            "type": "String|Number",
            "default": "0",
            "class": "TableCellStyle",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 721,
            "description": "Vertical align of the cell content.",
            "itemtype": "property",
            "name": "vertical-align",
            "type": "String",
            "default": "0",
            "class": "TableCellStyle",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 727,
            "description": "Font color",
            "itemtype": "property",
            "name": "color",
            "type": "String",
            "default": "\"#000001\". NB: Gmail removes color tags corresponding to the black color, so use #000001 instead of #000000.",
            "class": "TableCellStyle",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 747,
            "description": "Width of the border around the image.",
            "itemtype": "property",
            "name": "border-width",
            "type": "String|Number",
            "default": "0",
            "class": "ImageStyle",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 753,
            "description": "Style of the border around the image. See html manuals for possible values.",
            "itemtype": "property",
            "name": "border-style",
            "type": "String",
            "default": "\"none\"",
            "class": "ImageStyle",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 759,
            "description": "Color of the border around the image.",
            "itemtype": "property",
            "name": "border-color",
            "type": "String",
            "default": "\"#FFFFFF\"",
            "class": "ImageStyle",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 765,
            "description": "Padding.",
            "itemtype": "property",
            "name": "padding",
            "type": "String|Number",
            "default": "0",
            "class": "ImageStyle",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 771,
            "description": "Margin.",
            "itemtype": "property",
            "name": "margin",
            "type": "String|Number",
            "default": "0",
            "class": "ImageStyle",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 777,
            "description": "Image width.",
            "itemtype": "property",
            "name": "width",
            "type": "String|Number",
            "default": "0",
            "class": "ImageStyle",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 783,
            "description": "Image height.",
            "itemtype": "property",
            "name": "height",
            "type": "String|Number",
            "default": "0",
            "class": "ImageStyle",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 803,
            "description": "Padding.",
            "itemtype": "property",
            "name": "padding",
            "type": "String|Number",
            "default": "0",
            "class": "ListStyle",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 809,
            "description": "Margin.",
            "itemtype": "property",
            "name": "margin",
            "type": "String|Number",
            "default": "0",
            "class": "ListStyle",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 829,
            "description": "Font size of the  text in the list.",
            "itemtype": "property",
            "name": "font-size",
            "type": "String|Number",
            "default": "12",
            "class": "ListItemStyle",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 835,
            "description": "Text color of the list item content.",
            "itemtype": "property",
            "name": "color",
            "type": "{String}",
            "default": "\"#000001\". NB: Gmail removes color tags corresponding to the black color, so use #000001 instead of #000000.",
            "class": "ListItemStyle",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 843,
            "description": "Font weight. Some possible values: \"normal\", \"bold\", \"bolder\", 100, 200, ..., 900. See html manuals for more info.",
            "itemtype": "property",
            "name": "font-weight",
            "type": "String|Integer",
            "default": "\"normal\"",
            "class": "ListItemStyle",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 849,
            "description": "Padding.",
            "itemtype": "property",
            "name": "padding",
            "type": "String|Number",
            "default": "0",
            "class": "ListItemStyle",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 855,
            "description": "Margin.",
            "itemtype": "property",
            "name": "margin",
            "type": "String|Number",
            "default": "0",
            "class": "ListItemStyle",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 876,
            "description": "Container of items. If an item has a method \"toHtml\", it will be applied when transforming the whole Content object into a string.",
            "itemtype": "property",
            "name": "elements",
            "type": "Array",
            "default": "[str]",
            "class": "Content",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 883,
            "description": "The number of items in the \"elements\" property",
            "itemtype": "method",
            "name": "length",
            "return": {
                "description": "",
                "type": "Integer"
            },
            "class": "Content",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 891,
            "description": "Transforms the object into html form.  If item of the \"elements\" property is of Object type, then it should have \"toHtml\" method which is to be applied to the item.",
            "itemtype": "method",
            "name": "toHtml",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Content",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 929,
            "description": "Type of the object. Set to value \"Cell\" for the objects of this type.",
            "itemtype": "method",
            "name": "getType",
            "type": "String",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Cell",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 937,
            "description": "Attributes of the cell.",
            "itemtype": "property",
            "name": "attr",
            "type": "{Attributes}",
            "default": "Attributes",
            "class": "Cell",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 944,
            "description": "Styles of the cell",
            "itemtype": "property",
            "name": "style",
            "type": "{TableCellStyle}",
            "default": "TableCellStyle",
            "class": "Cell",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 951,
            "description": "Content of the cell",
            "itemtype": "property",
            "name": "content",
            "type": "{Content}",
            "default": "Content",
            "class": "Cell",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 958,
            "description": "Retrieves the value of property from the \"style\"",
            "itemtype": "method",
            "name": "styleProperty",
            "params": [
                {
                    "name": "prop",
                    "description": "property name which value should be retrieved",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String|Number"
            },
            "class": "Cell",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 967,
            "description": "Imposes the value of the width of the \"attr\" and \"style\" properties. In the latter, \"min-width\" and \"max-width\" are imposed as well.\nIt is better to use with an integer argument.",
            "itemtype": "method",
            "name": "setWidth",
            "params": [
                {
                    "name": "w",
                    "description": "value of the width. Supposed to be either a string (i.e. \"10px\", \"14.1em\" etc) or a number (i.e. 200, 10).",
                    "type": "String|Number"
                }
            ],
            "class": "Cell",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 978,
            "description": "Gets the width of the cell as it is present in the style property. It tends to return a number:\nif it is measured in \"px\", then the measurment unit is removed and the number is returned.",
            "itemtype": "method",
            "name": "getWidth",
            "return": {
                "description": "",
                "type": "Number|String"
            },
            "class": "Cell",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 998,
            "description": "Insert the argument into the cell content",
            "itemtype": "method",
            "name": "insert",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Cell",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 1007,
            "description": "Generates cell-specific html code with corresponding attributes and styles",
            "itemtype": "method",
            "name": "toHtml",
            "return": {
                "description": "html representation of the cell",
                "type": "String"
            },
            "class": "Cell",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 1037,
            "description": "Type of the object. Return \"Row\" for the objects of this type.",
            "itemtype": "method",
            "name": "getType",
            "type": "String",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Row",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 1046,
            "description": "Attributes of the row.",
            "itemtype": "property",
            "name": "attr",
            "type": "{Attributes}",
            "default": "Attributes",
            "class": "Row",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 1054,
            "description": "Attribute setter.",
            "itemtype": "method",
            "name": "setAttr",
            "params": [
                {
                    "name": "attr",
                    "description": "",
                    "type": "String|Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Row",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 1065,
            "description": "Styles of the row.",
            "itemtype": "property",
            "name": "style",
            "type": "{TableCellStyle}",
            "default": "TableRowStyle",
            "class": "Row",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 1073,
            "description": "Style setter.",
            "itemtype": "method",
            "name": "setStyle",
            "params": [
                {
                    "name": "stl",
                    "description": "",
                    "type": "String|Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Row",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 1083,
            "description": "Array of cells belonging to the row.",
            "itemtype": "property",
            "name": "cells",
            "type": "{Array}",
            "default": "[]",
            "class": "Row",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 1091,
            "description": "Retrieves the value of property from the \"style\"",
            "itemtype": "method",
            "name": "styleProperty",
            "params": [
                {
                    "name": "prop",
                    "description": "property name which value should be retrieved",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String|Number"
            },
            "class": "Row",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 1101,
            "description": "Imposes the value of the width of the \"attr\" and \"style\" properties. In the latter, \"min-width\" and \"max-width\" are imposed as well.\nIt is better to use with an integer argument.",
            "itemtype": "method",
            "name": "setWidth",
            "params": [
                {
                    "name": "w",
                    "description": "value of the width. Supposed to be either a string (i.e. \"10px\", \"14.1em\" etc) or a number (i.e. 200, 10).",
                    "type": "String|Number"
                }
            ],
            "class": "Row",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 1112,
            "description": "Gets an array of the widths of the cells inside the row.",
            "itemtype": "method",
            "name": "getCellWidths",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "Row",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 1127,
            "description": "Sets widths of the cells inside the row.",
            "itemtype": "method",
            "name": "setCellWidths",
            "params": [
                {
                    "name": "profile",
                    "description": "each elements if this array is a width of the corresp. cell in the row.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Row",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 1143,
            "description": "Inserts a cell \"cell\" into position \"pos\" of the row.\nAfter insertion, the row length increases by 1. Therefore, \"pos\"\nis the index with which the cell is referenced in the row after insertion.",
            "itemtype": "method",
            "name": "insertCellAt",
            "params": [
                {
                    "name": "cell",
                    "description": "",
                    "type": "Cell"
                },
                {
                    "name": "pos",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Row",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 1168,
            "description": "Append a cell to the row cells. If one tries to append a non-Cell object, an exception is thrown.",
            "itemtype": "method",
            "name": "appendCell",
            "params": [
                {
                    "name": "cell",
                    "description": "a cell to be appended.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Row",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 1184,
            "description": "Drops the cell in the row. If the cell is utmost left, the freed space is then\nassigned to its right neighbour:\n|xxx| a | b   | c | -> |     a | b   | c |\n| a |xxx| b   | c | -> | a |     b   | c |\nIf there is no right neighbour, then it is assigned to the left one:\n| a | b | c | xxx | -> | a | b | c       |\nIf a cell to delete does not exist, nothing is performed.",
            "itemtype": "method",
            "name": "dropCell",
            "params": [
                {
                    "name": "cellNum",
                    "description": "cell number to delete. Numeration starts with 0.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Row",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 1217,
            "description": "Gives the number of cells in the row.",
            "itemtype": "method",
            "name": "cellNum",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Row",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 1226,
            "description": "Generates row-specific html code with corresponding attributes and styles. Creation of the cell-related html of each cell is delegated to Cell::toHtml()",
            "itemtype": "method",
            "name": "toHtml",
            "return": {
                "description": "html representation of the row",
                "type": "String"
            },
            "class": "Row",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 1248,
            "description": "Populates the attributes from a string that is an html repersentation of some row.\nIt takes a string that is an html representation of a row and update current object\nparameters such that it will correspond to the html representation.\nIn other words, (new Row()).loadFromHtml(htmlString).toHtml() should be similar to htmlString\n(eventually up to presence/absence of some parameters and attributes).",
            "itemtype": "method",
            "name": "loadFromHtml",
            "params": [
                {
                    "name": "htmlStr",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Row",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 1291,
            "description": "Type of the object. Returns \"Table\" for the objects of this type.",
            "itemtype": "method",
            "name": "getType",
            "type": "String",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Table",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 1300,
            "description": "Imposes attributes of the row",
            "itemtype": "method",
            "name": "setAttr",
            "params": [
                {
                    "name": "attr",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Table",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 1310,
            "description": "Attributes of the table.",
            "itemtype": "property",
            "name": "attr",
            "type": "{TableAttributes}",
            "default": "TableAttributes",
            "class": "Table",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 1318,
            "description": "Imposes style of the row",
            "itemtype": "method",
            "name": "setStyle",
            "params": [
                {
                    "name": "stl",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Table",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 1328,
            "description": "Styles of the row",
            "itemtype": "property",
            "name": "style",
            "type": "{TableStyle}",
            "default": "TableStyle",
            "class": "Table",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 1336,
            "description": "Array of rows constituting the table or empty array",
            "itemtype": "property",
            "name": "rows",
            "type": "{Array}",
            "default": "[]",
            "class": "Table",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 1349,
            "description": "Append a row to the exisiting rows.",
            "itemtype": "property",
            "name": "appendRow",
            "type": "Object",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Table",
            "module": "attributes",
            "subprops": [
                {
                    "name": "row",
                    "description": "a row to be appended",
                    "type": "Object"
                }
            ]
        },
        {
            "file": "attributes.js",
            "line": 1364,
            "description": "Retrieves the value of property from the \"style\"",
            "itemtype": "method",
            "name": "styleProperty",
            "params": [
                {
                    "name": "prop",
                    "description": "property name which value should be retrieved",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String|Number"
            },
            "class": "Table",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 1375,
            "description": "Gives a two-dimensional array [[w_11, w_12, ..., w_1n], ..., [w_m1, w_m2, ..., w_m3]]\nwhere w_ij is width of the cell located in the row i and column j.",
            "itemtype": "method",
            "name": "getMatrix",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "Table",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 1390,
            "description": "Returns array of widths of the cells in the table rows if all rows\nhave the same cell widths. Otherwise Null is returned.",
            "itemtype": "method",
            "name": "getProfile",
            "return": {
                "description": "",
                "type": "Array|Null"
            },
            "class": "Table",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 1400,
            "description": "Imposes the widths of all cell in all rows of the table. The operation is delegated to a row methods.",
            "itemtype": "method",
            "name": "setProfile",
            "params": [
                {
                    "name": "profile",
                    "description": "an array of cell widths that will be applied to each row.",
                    "type": "Array"
                }
            ],
            "class": "Table",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 1413,
            "description": "Inserts a cell \"cell\" into a given position \"pos\" of each row of the table.\nIf the table has 5 columns, then after insertion it will have 5+1=6 columns.\nPosition \"pos\" will correspond to the index of the inserted cell in the row after insertion.\n\"pos\" must be a valid cell number into the table after insertion. So, for the example above,\nthe valid values for \"pos\" are 0, 1, 2, 3, 4 and 5.",
            "itemtype": "method",
            "name": "insertColumnAt",
            "params": [
                {
                    "name": "cell",
                    "description": "",
                    "type": "Cell"
                },
                {
                    "name": "pos",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Table",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 1437,
            "description": "Drops specified column from the table. The operation is delegated to the Row::dropCell()",
            "itemtype": "method",
            "name": "dropColumn",
            "params": [
                {
                    "name": "colNum",
                    "description": "the number of the column to delete. Numeration starts with 0.",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Table",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 1451,
            "description": "Gives the number of columns in the table or null if not all rows have the same number of cells.\nThe operation is delegated to the Row::cellNum().",
            "itemtype": "method",
            "name": "colNum",
            "return": {
                "description": "",
                "type": "Number|null"
            },
            "class": "Table",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 1478,
            "description": "Whether all rows in the table have the same cell widths.",
            "itemtype": "method",
            "name": "sameWidth",
            "return": {
                "description": "true, if all rows have the same cells' widths, false otherwise.",
                "type": "Boolean"
            },
            "class": "Table",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 1514,
            "description": "Set the border of the table. It updates the properties 'attr' and 'style' of the instance:\n1. in 'style' property, sets up the following properties: 'border-width', 'border-color' and 'border-style'\n2. in 'attr' property, sets up 'border' property.\nNote that if after setting the border there is an assigment of 'style' or 'attr' property, then some info about the border might be overwritten.",
            "itemtype": "method",
            "name": "setBorder",
            "params": [
                {
                    "name": "borderInfo",
                    "description": "Object containing 'width', 'color' and 'style' fo the border to set.",
                    "type": "Object"
                }
            ],
            "default": "border-width is set to 1, border-color is set to #000000, border-style is set to solid.",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Table",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 1539,
            "description": "Removes the border of the table. It updates the properties 'attr' and 'style' of the instance:\n1. in 'style' property, deletes the properties: 'border-width', 'border-color' and sets up 'border-style' to 'none'\n2. in 'attr' property, deletes 'border' property.",
            "itemtype": "method",
            "name": "removeBorder",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Table",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 1560,
            "description": "Gives true if all table rows have border around (that is, each row is nothing but a table with border)\nfalse otherwise. It at least one of the properties, corresponding to the \"bogus\" elements is set, then\nthe table is considered as being framed and hence all its rows will be framed.",
            "itemtype": "method",
            "name": "isFramed",
            "return": {
                "description": "true if all table rows have border around",
                "type": "Boolean"
            },
            "class": "Table",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 1577,
            "description": "Deletes properties that are responsable for the frames around the table rows.",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Table",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 1593,
            "description": "Generates table-specific html code with corresponding attributes and styles.\nCreation of the row-related html of each row is delegated to Row::toHtml()",
            "itemtype": "method",
            "name": "toHtml",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Table",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 1633,
            "description": "Style of the row containing a single cell. It is used to created to a table with framed lines.\nIt is supposed that all properties\nbogusRowStyle, bogusRowAttr, bogusCellStyle, bogusCellAttr, bogusTableStyle, bogusTableAttr\nare simultaneously null or set.",
            "itemtype": "property",
            "name": "bogusTableStyle",
            "type": "Style",
            "default": "null",
            "class": "Table",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 1643,
            "description": "Attributes of the row containing a single cell. It is used to created to a table with framed lines.\nIt is supposed that all properties\nbogusRowStyle, bogusRowAttr, bogusCellStyle, bogusCellAttr, bogusTableStyle, bogusTableAttr\nare simultaneously null or set.",
            "itemtype": "property",
            "name": "bogusTableStyle",
            "type": "Attribute",
            "default": "null",
            "class": "Table",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 1653,
            "description": "Style of the  the cell which fills the whole row. It is used to created to a table with framed lines.\nIt is supposed that all properties\nbogusRowStyle, bogusRowAttr, bogusCellStyle, bogusCellAttr, bogusTableStyle, bogusTableAttr\nare simultaneously null or set.",
            "itemtype": "property",
            "name": "bogusTableStyle",
            "type": "TableCellStyle",
            "default": "null",
            "class": "Table",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 1663,
            "description": "Attributes of the  the cell which fills the whole row. It is used to created to a table with framed lines.\nIt is supposed that all properties\nbogusRowStyle, bogusRowAttr, bogusCellStyle, bogusCellAttr, bogusTableStyle, bogusTableAttr\nare simultaneously null or set.",
            "itemtype": "property",
            "name": "bogusTableStyle",
            "type": "Attribute",
            "default": "null",
            "class": "Table",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 1673,
            "description": "Style of the  the table that will be inserted into the single cell to create a table with framed lines.\nIt is supposed that all properties\nbogusRowStyle, bogusRowAttr, bogusCellStyle, bogusCellAttr, bogusTableStyle, bogusTableAttr\nare simultaneously null or set.",
            "itemtype": "property",
            "name": "bogusTableStyle",
            "type": "TableStyle",
            "default": "null",
            "class": "Table",
            "module": "attributes"
        },
        {
            "file": "attributes.js",
            "line": 1683,
            "description": "Attributes of the  the table that will be inserted into the single cell to create a table with framed lines.\nIt is supposed that all properties\nbogusRowStyle, bogusRowAttr, bogusCellStyle, bogusCellAttr, bogusTableStyle, bogusTableAttr\nare simultaneously null or set.",
            "itemtype": "property",
            "name": "bogusTableStyle",
            "type": "Attribute",
            "default": "null",
            "class": "Table",
            "module": "attributes"
        },
        {
            "file": "helpers.js",
            "line": 270,
            "description": "Replaces special characters present in the input string by their unicodes. It is supposed to replace symbols like à, ò, è, é\nand not a, b, c etc. For the moment it replaces any characters which unicode is outside the range [32, 125].",
            "params": [
                {
                    "name": "str",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "",
            "module": "helpers"
        },
        {
            "file": "helpers.js",
            "line": 293,
            "description": "Splits array element at position \"pos\" in two parts in such a way that the trace of the original array\nis equal to the trace of the output array. If it is the first element of the array to be splitted, then\nit is splitted in 1/2 and 1/2 (up to the truncation). If the element has a left neighbour, then the neighbour\nand the element are taken off 1/3 and these two parts are given to the newly created element that is inserted\nbetween the neighbour and the element: [a, b, ...] -> [2/3 a, 1/3 (a + b), 2/3 b, ...]",
            "params": [
                {
                    "name": "arr",
                    "description": "array of integers",
                    "type": "Array"
                },
                {
                    "name": "pos",
                    "description": "index of the element, before which an element will be inserted",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "array of integers",
                "type": "Array"
            },
            "class": "",
            "module": "helpers"
        },
        {
            "file": "jquery-1.10.2.js",
            "line": 1292,
            "description": "Create key-value caches of limited size",
            "return": {
                "description": "Returns the Object data after storing it on itself with\n\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n\tdeleting the oldest entry",
                "type": "Function(string, Object)"
            },
            "class": "",
            "module": "helpers"
        },
        {
            "file": "jquery-1.10.2.js",
            "line": 1312,
            "description": "Mark a function for special use by Sizzle",
            "params": [
                {
                    "name": "fn",
                    "description": "The function to mark",
                    "type": "Function"
                }
            ],
            "class": "",
            "module": "helpers"
        },
        {
            "file": "jquery-1.10.2.js",
            "line": 1321,
            "description": "Support testing using an element",
            "params": [
                {
                    "name": "fn",
                    "description": "Passed the created div and expects a boolean result",
                    "type": "Function"
                }
            ],
            "class": "",
            "module": "helpers"
        },
        {
            "file": "jquery-1.10.2.js",
            "line": 1342,
            "description": "Adds the same handler for all of the specified attrs",
            "params": [
                {
                    "name": "attrs",
                    "description": "Pipe-separated list of attributes",
                    "type": "String"
                },
                {
                    "name": "handler",
                    "description": "The method that will be applied",
                    "type": "Function"
                }
            ],
            "class": "",
            "module": "helpers"
        },
        {
            "file": "jquery-1.10.2.js",
            "line": 1356,
            "description": "Checks document order of two siblings",
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "Element"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "Element"
                }
            ],
            "return": {
                "description": "Returns less than 0 if a precedes b, greater than 0 if a follows b",
                "type": "Number"
            },
            "class": "",
            "module": "helpers"
        },
        {
            "file": "jquery-1.10.2.js",
            "line": 1385,
            "description": "Returns a function to use in pseudos for input types",
            "params": [
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "",
            "module": "helpers"
        },
        {
            "file": "jquery-1.10.2.js",
            "line": 1396,
            "description": "Returns a function to use in pseudos for buttons",
            "params": [
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "",
            "module": "helpers"
        },
        {
            "file": "jquery-1.10.2.js",
            "line": 1407,
            "description": "Returns a function to use in pseudos for positionals",
            "params": [
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "",
            "module": "helpers"
        },
        {
            "file": "jquery-1.10.2.js",
            "line": 1429,
            "description": "Detect xml",
            "params": [
                {
                    "name": "elem",
                    "description": "An element or a document",
                    "type": "Element|Object"
                }
            ],
            "class": "",
            "module": "helpers"
        },
        {
            "file": "jquery-1.10.2.js",
            "line": 1443,
            "description": "Sets document-related variables once based on the current document",
            "params": [
                {
                    "name": "doc",
                    "description": "An element or document object to use to set the document",
                    "type": "Element|Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the current document",
                "type": "Object"
            },
            "class": "",
            "module": "helpers"
        },
        {
            "file": "jquery-1.10.2.js",
            "line": 1853,
            "description": "Document sorting and removing duplicates",
            "params": [
                {
                    "name": "results",
                    "description": "",
                    "type": "ArrayLike"
                }
            ],
            "class": "",
            "module": "helpers"
        },
        {
            "file": "jquery-1.10.2.js",
            "line": 1882,
            "description": "Utility function for retrieving the text value of an array of DOM nodes",
            "params": [
                {
                    "name": "elem",
                    "description": "",
                    "type": "Array|Element"
                }
            ],
            "class": "",
            "module": "helpers"
        },
        {
            "file": "start.js",
            "line": 15,
            "description": "Drops inline attribute named attrName from DOM element",
            "params": [
                {
                    "name": "element",
                    "description": "an inline attribute of  this element will be dropped. The element should respond to jQuery \"attr\" method.",
                    "type": "Object"
                },
                {
                    "name": "attrName",
                    "description": "this attribute name will be dropped.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "",
            "module": "helpers"
        },
        {
            "file": "start.js",
            "line": 31,
            "description": "Inserts table and applies hover effect on it.\nIt is based on CKEDITOR.editor.insertElement() method.\nThis approach might be wrong but I wanted to avoid repetitions.",
            "params": [
                {
                    "name": "table",
                    "description": "",
                    "type": "CKEDITOR.dom.element"
                }
            ],
            "return": {
                "description": "[description]",
                "type": "[type]"
            },
            "class": "",
            "module": "helpers"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jquery-1.10.2.js:1292"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jquery-1.10.2.js:1356"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jquery-1.10.2.js:1443"
        },
        {
            "message": "Missing item type\nFlatten the object. This function was written because Node::attributes returns attributes in format.\nExample {'1': {name: \"width\", value:\"100\", ...}, '2': {name: \"color\", value:\"black\", ...}, ...}\nreturns {\"width\":\"100\", \"color\":\"black\", ...}",
            "line": " attributes.js:61"
        },
        {
            "message": "Missing item type\nSandwiches the midlle string with the left and the right ones. If the middle one is empty, empty string is returned.\nIf the right arguments is not given, the left one is used.",
            "line": " attributes.js:80"
        },
        {
            "message": "Missing item type\nGlues all elements of the array, replace trailing spaces and repaces multiple spaces with a single one.",
            "line": " attributes.js:101"
        },
        {
            "message": "Missing item type\nMerge two objects. If non-object is given, an error is thrown.",
            "line": " attributes.js:118"
        },
        {
            "message": "Missing item type\nFill in the properties with the values from the argument if any",
            "line": " attributes.js:192"
        },
        {
            "message": "Missing item type\nreturns object with keys 'width', 'color', 'style' describing the border.\nIf the Style object has 'border-style' equal to 'none', then in the\nreturn object, the key 'width' is set to 0.\nIf 'border-style' is not 'none' and 'border-width' is present, then in the\nreturn object, the key 'width' the 'border-width' value.\nOtherwise, the 'width' key is not present.",
            "line": " attributes.js:261"
        },
        {
            "message": "Missing item type\nFill in the properties with the values from the argument if any",
            "line": " attributes.js:343"
        },
        {
            "message": "Missing item type\nDeletes properties that are responsable for the frames around the table rows.",
            "line": " attributes.js:1577"
        },
        {
            "message": "Missing item type\nReplaces special characters present in the input string by their unicodes. It is supposed to replace symbols like à, ò, è, é\nand not a, b, c etc. For the moment it replaces any characters which unicode is outside the range [32, 125].",
            "line": " helpers.js:270"
        },
        {
            "message": "Missing item type\nSplits array element at position \"pos\" in two parts in such a way that the trace of the original array\nis equal to the trace of the output array. If it is the first element of the array to be splitted, then\nit is splitted in 1/2 and 1/2 (up to the truncation). If the element has a left neighbour, then the neighbour\nand the element are taken off 1/3 and these two parts are given to the newly created element that is inserted\nbetween the neighbour and the element: [a, b, ...] -> [2/3 a, 1/3 (a + b), 2/3 b, ...]",
            "line": " helpers.js:293"
        },
        {
            "message": "Missing item type\nCreate key-value caches of limited size",
            "line": " jquery-1.10.2.js:1292"
        },
        {
            "message": "Missing item type\nMark a function for special use by Sizzle",
            "line": " jquery-1.10.2.js:1312"
        },
        {
            "message": "Missing item type\nSupport testing using an element",
            "line": " jquery-1.10.2.js:1321"
        },
        {
            "message": "Missing item type\nAdds the same handler for all of the specified attrs",
            "line": " jquery-1.10.2.js:1342"
        },
        {
            "message": "Missing item type\nChecks document order of two siblings",
            "line": " jquery-1.10.2.js:1356"
        },
        {
            "message": "Missing item type\nReturns a function to use in pseudos for input types",
            "line": " jquery-1.10.2.js:1385"
        },
        {
            "message": "Missing item type\nReturns a function to use in pseudos for buttons",
            "line": " jquery-1.10.2.js:1396"
        },
        {
            "message": "Missing item type\nReturns a function to use in pseudos for positionals",
            "line": " jquery-1.10.2.js:1407"
        },
        {
            "message": "Missing item type\nDetect xml",
            "line": " jquery-1.10.2.js:1429"
        },
        {
            "message": "Missing item type\nSets document-related variables once based on the current document",
            "line": " jquery-1.10.2.js:1443"
        },
        {
            "message": "Missing item type\nDocument sorting and removing duplicates",
            "line": " jquery-1.10.2.js:1853"
        },
        {
            "message": "Missing item type\nUtility function for retrieving the text value of an array of DOM nodes",
            "line": " jquery-1.10.2.js:1882"
        },
        {
            "message": "Missing item type\nDrops inline attribute named attrName from DOM element",
            "line": " start.js:15"
        },
        {
            "message": "Missing item type\nInserts table and applies hover effect on it.\nIt is based on CKEDITOR.editor.insertElement() method.\nThis approach might be wrong but I wanted to avoid repetitions.",
            "line": " start.js:31"
        }
    ]
}