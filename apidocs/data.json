{
    "project": {
        "name": "Newsletter API",
        "description": "Javascript classes",
        "version": "0.0.2",
        "logo": "/logo.png"
    },
    "files": {
        "js\\classes\\CKHelper\\Selection.js": {
            "name": "js\\classes\\CKHelper\\Selection.js",
            "modules": {
                "CKHelper": 1
            },
            "classes": {
                "Selection": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js\\classes\\Helper\\String.js": {
            "name": "js\\classes\\Helper\\String.js",
            "modules": {},
            "classes": {
                "StringHelper": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js\\classes\\Helper\\Unit.js": {
            "name": "js\\classes\\Helper\\Unit.js",
            "modules": {},
            "classes": {
                "Unit": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js\\classes\\HtmlElements\\Tag\\Cell.js": {
            "name": "js\\classes\\HtmlElements\\Tag\\Cell.js",
            "modules": {
                "HtmlElements": 1
            },
            "classes": {
                "Cell": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js\\classes\\HtmlElements\\Tag\\Image.js": {
            "name": "js\\classes\\HtmlElements\\Tag\\Image.js",
            "modules": {},
            "classes": {
                "Image": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js\\classes\\HtmlElements\\Tag\\Link.js": {
            "name": "js\\classes\\HtmlElements\\Tag\\Link.js",
            "modules": {},
            "classes": {
                "Link": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js\\classes\\HtmlElements\\Tag\\List.js": {
            "name": "js\\classes\\HtmlElements\\Tag\\List.js",
            "modules": {},
            "classes": {
                "List": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js\\classes\\HtmlElements\\Tag\\ListItem.js": {
            "name": "js\\classes\\HtmlElements\\Tag\\ListItem.js",
            "modules": {},
            "classes": {
                "ListItem": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js\\classes\\HtmlElements\\Tag\\OList.js": {
            "name": "js\\classes\\HtmlElements\\Tag\\OList.js",
            "modules": {},
            "classes": {
                "OList": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js\\classes\\HtmlElements\\Tag\\Row.js": {
            "name": "js\\classes\\HtmlElements\\Tag\\Row.js",
            "modules": {},
            "classes": {
                "Row": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js\\classes\\HtmlElements\\Tag\\Table.js": {
            "name": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "modules": {},
            "classes": {
                "Table": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js\\classes\\HtmlElements\\Tag\\UList.js": {
            "name": "js\\classes\\HtmlElements\\Tag\\UList.js",
            "modules": {},
            "classes": {
                "UList": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js\\classes\\HtmlElements\\Content.js": {
            "name": "js\\classes\\HtmlElements\\Content.js",
            "modules": {},
            "classes": {
                "Content": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js\\classes\\HtmlElements\\Dom.js": {
            "name": "js\\classes\\HtmlElements\\Dom.js",
            "modules": {},
            "classes": {
                "Dom": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js\\classes\\HtmlElements\\Factory.js": {
            "name": "js\\classes\\HtmlElements\\Factory.js",
            "modules": {},
            "classes": {
                "Factory": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js\\classes\\HtmlElements\\Mapping.js": {
            "name": "js\\classes\\HtmlElements\\Mapping.js",
            "modules": {},
            "classes": {
                "Mapping": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js\\classes\\HtmlElements\\PlainText.js": {
            "name": "js\\classes\\HtmlElements\\PlainText.js",
            "modules": {},
            "classes": {
                "PlainText": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js\\classes\\HtmlElements\\Tag.js": {
            "name": "js\\classes\\HtmlElements\\Tag.js",
            "modules": {},
            "classes": {
                "Tag": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js\\classes\\Properties\\to_delete_Attributes\\to_delete_LinkAttributes.js": {
            "name": "js\\classes\\Properties\\to_delete_Attributes\\to_delete_LinkAttributes.js",
            "modules": {},
            "classes": {
                "LinkAttributes": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js\\classes\\Properties\\to_delete_Attributes\\to_delete_TableAttributes.js": {
            "name": "js\\classes\\Properties\\to_delete_Attributes\\to_delete_TableAttributes.js",
            "modules": {},
            "classes": {
                "TableAttributes": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js\\classes\\Properties\\to_delete_Styles\\to_delete_ImageStyles.js": {
            "name": "js\\classes\\Properties\\to_delete_Styles\\to_delete_ImageStyles.js",
            "modules": {},
            "classes": {
                "ImageStyle": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js\\classes\\Properties\\to_delete_Styles\\to_delete_LinkStyles.js": {
            "name": "js\\classes\\Properties\\to_delete_Styles\\to_delete_LinkStyles.js",
            "modules": {},
            "classes": {
                "LinkStyles": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js\\classes\\Properties\\to_delete_Styles\\to_delete_ListItemStyles.js": {
            "name": "js\\classes\\Properties\\to_delete_Styles\\to_delete_ListItemStyles.js",
            "modules": {},
            "classes": {
                "ListItemStyles": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js\\classes\\Properties\\to_delete_Styles\\to_delete_ListStyles.js": {
            "name": "js\\classes\\Properties\\to_delete_Styles\\to_delete_ListStyles.js",
            "modules": {},
            "classes": {
                "ListStyles": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js\\classes\\Properties\\to_delete_Styles\\to_delete_TableCellStyles.js": {
            "name": "js\\classes\\Properties\\to_delete_Styles\\to_delete_TableCellStyles.js",
            "modules": {},
            "classes": {
                "TableCellStyles": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js\\classes\\Properties\\to_delete_Styles\\to_delete_TableRowStyles.js": {
            "name": "js\\classes\\Properties\\to_delete_Styles\\to_delete_TableRowStyles.js",
            "modules": {},
            "classes": {
                "TableRowStyles": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js\\classes\\Properties\\to_delete_Styles\\to_delete_TableStyles.js": {
            "name": "js\\classes\\Properties\\to_delete_Styles\\to_delete_TableStyles.js",
            "modules": {},
            "classes": {
                "TableStyles": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js\\classes\\Properties\\Attributes.js": {
            "name": "js\\classes\\Properties\\Attributes.js",
            "modules": {},
            "classes": {
                "Attributes": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js\\classes\\Properties\\CellProperties.js": {
            "name": "js\\classes\\Properties\\CellProperties.js",
            "modules": {},
            "classes": {
                "CellProperties": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js\\classes\\Properties\\ImageProperties.js": {
            "name": "js\\classes\\Properties\\ImageProperties.js",
            "modules": {},
            "classes": {
                "ImageProperties": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js\\classes\\Properties\\LinkProperties.js": {
            "name": "js\\classes\\Properties\\LinkProperties.js",
            "modules": {},
            "classes": {
                "LinkProperties": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js\\classes\\Properties\\ListItemProperties.js": {
            "name": "js\\classes\\Properties\\ListItemProperties.js",
            "modules": {},
            "classes": {
                "ListItemProperties": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js\\classes\\Properties\\ListProperties.js": {
            "name": "js\\classes\\Properties\\ListProperties.js",
            "modules": {},
            "classes": {
                "ListProperties": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js\\classes\\Properties\\RowProperties.js": {
            "name": "js\\classes\\Properties\\RowProperties.js",
            "modules": {},
            "classes": {
                "RowProperties": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js\\classes\\Properties\\Styles.js": {
            "name": "js\\classes\\Properties\\Styles.js",
            "modules": {},
            "classes": {
                "Styles": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js\\classes\\Properties\\TableProperties.js": {
            "name": "js\\classes\\Properties\\TableProperties.js",
            "modules": {},
            "classes": {
                "TableProperties": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js\\classes\\CKHelper.js": {
            "name": "js\\classes\\CKHelper.js",
            "modules": {
                "Helper": 1
            },
            "classes": {
                "CKHelper": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js\\classes\\Helper.js": {
            "name": "js\\classes\\Helper.js",
            "modules": {},
            "classes": {
                "Helper": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js\\classes\\properties.js": {
            "name": "js\\classes\\properties.js",
            "modules": {
                "Properties": 1
            },
            "classes": {
                "Properties": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js\\controllers\\CLink.js": {
            "name": "js\\controllers\\CLink.js",
            "modules": {
                "Controllers": 1
            },
            "classes": {
                "CLink": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js\\controllers\\CTable.js": {
            "name": "js\\controllers\\CTable.js",
            "modules": {},
            "classes": {
                "CTable": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "CKHelper": {
            "name": "CKHelper",
            "submodules": {},
            "classes": {
                "Selection": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "js\\classes\\CKHelper\\Selection.js",
            "line": 4,
            "description": "Represents selected elements in the editor window. The argument `ed` is a\n[CKEditor editor](http://docs.ckeditor.com/#!/api/CKEDITOR.editor \"see official site\")  instance.",
            "params": [
                {
                    "name": "ed",
                    "description": "",
                    "type": "CKEDITOR.editor"
                }
            ]
        },
        "Helper": {
            "name": "Helper",
            "submodules": {},
            "classes": {
                "StringHelper": 1,
                "Unit": 1,
                "CKHelper": 1,
                "Helper": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "js\\classes\\Helper.js",
            "line": 4,
            "description": "Collection of functions used by various plugins of the CKEditor.",
            "since": "0.0.1",
            "author": "A.Shcherbakov",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "measure",
                    "description": "",
                    "type": "String|null"
                }
            ],
            "type": "{Object}"
        },
        "HtmlElements": {
            "name": "HtmlElements",
            "submodules": {},
            "classes": {
                "Cell": 1,
                "Image": 1,
                "Link": 1,
                "List": 1,
                "ListItem": 1,
                "OList": 1,
                "Row": 1,
                "Table": 1,
                "UList": 1,
                "Content": 1,
                "Dom": 1,
                "Factory": 1,
                "Mapping": 1,
                "PlainText": 1,
                "Tag": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "js\\classes\\HtmlElements\\Tag.js",
            "line": 5,
            "description": "Represents a table cell. The argument is supposed to be passed to the \"content\" property.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Mixed"
                }
            ],
            "extends": "Tag",
            "since": "0.0.2",
            "author": "A.Shcherbakov"
        },
        "Properties": {
            "name": "Properties",
            "submodules": {},
            "classes": {
                "LinkAttributes": 1,
                "TableAttributes": 1,
                "ImageStyle": 1,
                "LinkStyles": 1,
                "ListItemStyles": 1,
                "ListStyles": 1,
                "TableCellStyles": 1,
                "TableRowStyles": 1,
                "TableStyles": 1,
                "Attributes": 1,
                "CellProperties": 1,
                "ImageProperties": 1,
                "LinkProperties": 1,
                "ListItemProperties": 1,
                "ListProperties": 1,
                "RowProperties": 1,
                "Styles": 1,
                "TableProperties": 1,
                "Properties": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "js\\classes\\properties.js",
            "line": 5,
            "description": "A general Property class. If the argument is an object, then its properties are copied\ninto Property instance. If the argument is a string, then it will be splitted according to\nthe pattern \"key: value;\" to populate object properties.",
            "extends": "Attributes",
            "is_constructor": 1,
            "params": [
                {
                    "name": "obj",
                    "description": "Style class variable will be instantiated using this input",
                    "type": "String|Object"
                }
            ],
            "since": "0.0.5"
        },
        "Controllers": {
            "name": "Controllers",
            "submodules": {},
            "classes": {
                "CLink": 1,
                "CTable": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "js\\controllers\\CTable.js",
            "line": 4,
            "description": "Link Controller.",
            "type": "{Object}",
            "since": "0.0.5",
            "author": "A.Shcherbakov"
        }
    },
    "classes": {
        "Selection": {
            "name": "Selection",
            "shortname": "Selection",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CKHelper",
            "namespace": "",
            "file": "js\\classes\\CKHelper\\Selection.js",
            "line": 4,
            "description": "Represents selected elements in the editor window. The argument `ed` is a\n[CKEditor editor](http://docs.ckeditor.com/#!/api/CKEDITOR.editor \"see official site\")  instance."
        },
        "StringHelper": {
            "name": "StringHelper",
            "shortname": "StringHelper",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Helper",
            "namespace": "",
            "file": "js\\classes\\Helper\\String.js",
            "line": 7,
            "description": "These are methods to convert strings into different objects."
        },
        "Unit": {
            "name": "Unit",
            "shortname": "Unit",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Helper",
            "namespace": "",
            "file": "js\\classes\\Helper\\Unit.js",
            "line": 5,
            "description": "Represents a quantity divided in \"value\" and \"measure\"."
        },
        "Cell": {
            "name": "Cell",
            "shortname": "Cell",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "HtmlElements",
            "namespace": "",
            "file": "js\\classes\\HtmlElements\\Tag\\Cell.js",
            "line": 5,
            "description": "Represents a table cell. The argument is supposed to be passed to the \"content\" property."
        },
        "Image": {
            "name": "Image",
            "shortname": "Image",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "HtmlElements",
            "namespace": "",
            "file": "js\\classes\\HtmlElements\\Tag\\Image.js",
            "line": 5,
            "description": "Represents an image."
        },
        "Link": {
            "name": "Link",
            "shortname": "Link",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "HtmlElements",
            "namespace": "",
            "file": "js\\classes\\HtmlElements\\Tag\\Link.js",
            "line": 4,
            "description": "This class is represent an html link tag \"a\"."
        },
        "List": {
            "name": "List",
            "shortname": "List",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "HtmlElements",
            "namespace": "",
            "file": "js\\classes\\HtmlElements\\Tag\\List.js",
            "line": 5,
            "description": "This is a parent class for ordered and unordred lists. If argument is provided and is allowed one, it will be used\nto set the property \"tag\". Otherwise, \"tag\" property will be set to the first allowed value.",
            "params": [
                {
                    "name": "listType",
                    "description": "",
                    "type": "Sting"
                }
            ]
        },
        "ListItem": {
            "name": "ListItem",
            "shortname": "ListItem",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "HtmlElements",
            "namespace": "",
            "file": "js\\classes\\HtmlElements\\Tag\\ListItem.js",
            "line": 5,
            "description": "This class is used to represent a list item."
        },
        "OList": {
            "name": "OList",
            "shortname": "OList",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "HtmlElements",
            "namespace": "",
            "file": "js\\classes\\HtmlElements\\Tag\\OList.js",
            "line": 5,
            "description": "This class is used to represent ordered lists."
        },
        "Row": {
            "name": "Row",
            "shortname": "Row",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "HtmlElements",
            "namespace": "",
            "file": "js\\classes\\HtmlElements\\Tag\\Row.js",
            "line": 5,
            "description": "Represents a table row"
        },
        "Table": {
            "name": "Table",
            "shortname": "Table",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "HtmlElements",
            "namespace": "",
            "file": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "line": 5,
            "description": "Represents table.\n\nTable might be a plain one or a framed one. Table is called framed if each of its rows contains only one cell,\nand each of these cells contains another table. These three elements - row, cell and table - are called phantom ones.\nOnly {{#crossLink \"Tag/styles:property\"}}styles{{/crossLink}} and\n{{#crossLink \"Tag/attributes:property\"}}attributes{{/crossLink}} of the phantom elements are of interest\n\n\nBelow it is depicted a framed table. Dotted lines correspond to the phantom elements, solid - to \"normal\" ones.\n<span style=\"color: black\">Black color corresponds to table</span>,\n<span style=\"color: orange\">orange - to table row</span>,\n<span style=\"color: green\">green - to table cell</span>.\n<style>\n.phantom, .normal{\n\tborder-width: 2px;\n\tpadding: 4px;\n\tmargin: 4px;\n\tborder-collapse: separate;\n}\n\n.phantom {\n\tborder-style: dashed;\n}\n.normal {\n  border-style: solid;\n}\ntable.phantom, table.normal {\n\tborder-color: #2818B1;\n\tpadding: 10px;\n}\ntd.phantom, td.normal{\n\tborder-color: #00A779;\n}\ntr.phantom, tr.normal {\n\toutline-width: 2px;\n\toutline-color: #FF9C00;\n}\ntr.phantom{\n\toutline-style: dashed;\n}\ntr.normal {\n\toutline-style: solid;\n}\n\n</style>\n\n<table class=\"normal\">\n\t<tr class=\"phantom\">\n \t\t<td class=\"phantom\">\n \t\t\t<table class=\"phantom\">\n \t\t\t\t<tr class=\"normal\">\n \t\t\t\t\t<td class=\"normal\">\n \t\t\t\t\t\tfirst cell of the first line\n \t\t\t\t\t</td>\n \t\t\t\t\t<td class=\"normal\">\n \t\t\t\t\t\tsecond cell of the first line\n \t\t\t\t\t</td>\n \t\t\t\t</tr>\n \t\t\t</table>\n \t\t</td>\n  </tr>\n\t<tr class=\"phantom\">\n \t\t<td class=\"phantom\">\n \t\t\t<table class=\"phantom\">\n \t\t\t\t<tr class=\"normal\">\n \t\t\t\t\t<td class=\"normal\">\n \t\t\t\t\t\tfirst cell of the second line\n \t\t\t\t\t</td>\n \t\t\t\t\t<td class=\"normal\">\n \t\t\t\t\t\tsecond cell of the second line\n \t\t\t\t\t</td>\n \t\t\t\t</tr>\n \t\t\t</table>\n \t\t</td>\n  </tr>\n</table>"
        },
        "UList": {
            "name": "UList",
            "shortname": "UList",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "HtmlElements",
            "namespace": "",
            "file": "js\\classes\\HtmlElements\\Tag\\UList.js",
            "line": 5,
            "description": "This class is used to represent unordered lists."
        },
        "Content": {
            "name": "Content",
            "shortname": "Content",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "HtmlElements",
            "namespace": "",
            "file": "js\\classes\\HtmlElements\\Content.js",
            "line": 5,
            "description": "This class is used to encompass other objects."
        },
        "Dom": {
            "name": "Dom",
            "shortname": "Dom",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "HtmlElements",
            "namespace": "",
            "file": "js\\classes\\HtmlElements\\Dom.js",
            "line": 5,
            "description": "This class is sort of helper to deal with DOM elements."
        },
        "Factory": {
            "name": "Factory",
            "shortname": "Factory",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "HtmlElements",
            "namespace": "",
            "file": "js\\classes\\HtmlElements\\Factory.js",
            "line": 5,
            "description": "This class is to be used to create different objects. What type of object is to be created\nis decided based on functionality of {{#crossLink \"Mapping\"}}Mapping{{/crossLink}} class,\nan instance of which might be passed as an argument.\ninstance."
        },
        "Mapping": {
            "name": "Mapping",
            "shortname": "Mapping",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "HtmlElements",
            "namespace": "",
            "file": "js\\classes\\HtmlElements\\Mapping.js",
            "line": 5,
            "description": "This class associates different types of object. It is intended to be used along with\n{{#crossLink \"Factory\"}}Factory{{/crossLink}} class.\nThe idea is to have criteria on which decide what type of objects should be constructed.\nThis class is responsible for these criteria."
        },
        "PlainText": {
            "name": "PlainText",
            "shortname": "PlainText",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "HtmlElements",
            "namespace": "",
            "file": "js\\classes\\HtmlElements\\PlainText.js",
            "line": 5,
            "description": "Represents plain text. This class is intented to represent [text node](https://developer.mozilla.org/en-US/docs/Web/API/Text) elements.\nThough there is no `text` tag in HTML, it is introduced here in order to consider plain text on the same basis as other tags."
        },
        "Tag": {
            "name": "Tag",
            "shortname": "Tag",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "HtmlElements",
            "namespace": "",
            "file": "js\\classes\\HtmlElements\\Tag.js",
            "line": 5,
            "description": "This class is used to represent a general html tag."
        },
        "LinkAttributes": {
            "name": "LinkAttributes",
            "shortname": "LinkAttributes",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Properties",
            "namespace": "",
            "file": "js\\classes\\Properties\\to_delete_Attributes\\to_delete_LinkAttributes.js",
            "line": 4,
            "description": "Table-specific attributes.",
            "extends": "Attributes"
        },
        "TableAttributes": {
            "name": "TableAttributes",
            "shortname": "TableAttributes",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Properties",
            "namespace": "",
            "file": "js\\classes\\Properties\\to_delete_Attributes\\to_delete_TableAttributes.js",
            "line": 3,
            "description": "Table-specific attributes.",
            "extends": "Attributes"
        },
        "ImageStyle": {
            "name": "ImageStyle",
            "shortname": "ImageStyle",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Properties",
            "namespace": "",
            "file": "js\\classes\\Properties\\to_delete_Styles\\to_delete_ImageStyles.js",
            "line": 3,
            "description": "Represents image styles."
        },
        "LinkStyles": {
            "name": "LinkStyles",
            "shortname": "LinkStyles",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Properties",
            "namespace": "",
            "file": "js\\classes\\Properties\\to_delete_Styles\\to_delete_LinkStyles.js",
            "line": 4,
            "description": "Represents hyperlink style.",
            "params": [
                {
                    "name": "obj",
                    "description": "Style class variable will be instantiated using this input",
                    "type": "String|Object"
                }
            ]
        },
        "ListItemStyles": {
            "name": "ListItemStyles",
            "shortname": "ListItemStyles",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Properties",
            "namespace": "",
            "file": "js\\classes\\Properties\\to_delete_Styles\\to_delete_ListItemStyles.js",
            "line": 3,
            "description": "Represents list item styles."
        },
        "ListStyles": {
            "name": "ListStyles",
            "shortname": "ListStyles",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Properties",
            "namespace": "",
            "file": "js\\classes\\Properties\\to_delete_Styles\\to_delete_ListStyles.js",
            "line": 4,
            "description": "Represents image styles."
        },
        "TableCellStyles": {
            "name": "TableCellStyles",
            "shortname": "TableCellStyles",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Properties",
            "namespace": "",
            "file": "js\\classes\\Properties\\to_delete_Styles\\to_delete_TableCellStyles.js",
            "line": 4,
            "description": "Represents table cell styles."
        },
        "TableRowStyles": {
            "name": "TableRowStyles",
            "shortname": "TableRowStyles",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Properties",
            "namespace": "",
            "file": "js\\classes\\Properties\\to_delete_Styles\\to_delete_TableRowStyles.js",
            "line": 3,
            "description": "Represents table row style."
        },
        "TableStyles": {
            "name": "TableStyles",
            "shortname": "TableStyles",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Properties",
            "namespace": "",
            "file": "js\\classes\\Properties\\to_delete_Styles\\to_delete_TableStyles.js",
            "line": 4,
            "description": "Represents table style."
        },
        "Attributes": {
            "name": "Attributes",
            "shortname": "Attributes",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Properties",
            "namespace": "",
            "file": "js\\classes\\Properties\\Attributes.js",
            "line": 3,
            "description": "This class is supposed to define attributes of html tags",
            "params": [
                {
                    "name": "obj",
                    "description": "Attributes class variable will be instantiated using this input",
                    "type": "String|Object"
                }
            ]
        },
        "CellProperties": {
            "name": "CellProperties",
            "shortname": "CellProperties",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Properties",
            "namespace": "",
            "file": "js\\classes\\Properties\\CellProperties.js",
            "line": 3,
            "description": "Represents table cell properties."
        },
        "ImageProperties": {
            "name": "ImageProperties",
            "shortname": "ImageProperties",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Properties",
            "namespace": "",
            "file": "js\\classes\\Properties\\ImageProperties.js",
            "line": 3,
            "description": "Represents image properties."
        },
        "LinkProperties": {
            "name": "LinkProperties",
            "shortname": "LinkProperties",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Properties",
            "namespace": "",
            "file": "js\\classes\\Properties\\LinkProperties.js",
            "line": 3,
            "description": "Represents image properties."
        },
        "ListItemProperties": {
            "name": "ListItemProperties",
            "shortname": "ListItemProperties",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Properties",
            "namespace": "",
            "file": "js\\classes\\Properties\\ListItemProperties.js",
            "line": 3,
            "description": "Represents list item styles."
        },
        "ListProperties": {
            "name": "ListProperties",
            "shortname": "ListProperties",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Properties",
            "namespace": "",
            "file": "js\\classes\\Properties\\ListProperties.js",
            "line": 4,
            "description": "Represents image styles."
        },
        "RowProperties": {
            "name": "RowProperties",
            "shortname": "RowProperties",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Properties",
            "namespace": "",
            "file": "js\\classes\\Properties\\RowProperties.js",
            "line": 3,
            "description": "Represents image properties."
        },
        "Styles": {
            "name": "Styles",
            "shortname": "Styles",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Properties",
            "namespace": "",
            "file": "js\\classes\\Properties\\Styles.js",
            "line": 3,
            "description": "This class defines inline styles of html tags",
            "params": [
                {
                    "name": "obj",
                    "description": "Style class variable will be instantiated using this input",
                    "type": "String|Object"
                }
            ]
        },
        "TableProperties": {
            "name": "TableProperties",
            "shortname": "TableProperties",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Properties",
            "namespace": "",
            "file": "js\\classes\\Properties\\TableProperties.js",
            "line": 3,
            "description": "Represents image properties."
        },
        "CKHelper": {
            "name": "CKHelper",
            "shortname": "CKHelper",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Helper",
            "namespace": "",
            "file": "js\\classes\\CKHelper.js",
            "line": 5,
            "description": "Collection of functions used by various plugins of the CKEditor."
        },
        "Helper": {
            "name": "Helper",
            "shortname": "Helper",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Helper",
            "namespace": "",
            "file": "js\\classes\\Helper.js",
            "line": 4,
            "description": "Set of useful functions"
        },
        "Properties": {
            "name": "Properties",
            "shortname": "Properties",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Properties",
            "namespace": "",
            "file": "js\\classes\\properties.js",
            "line": 5,
            "description": "A general Property class. If the argument is an object, then its properties are copied\ninto Property instance. If the argument is a string, then it will be splitted according to\nthe pattern \"key: value;\" to populate object properties."
        },
        "CLink": {
            "name": "CLink",
            "shortname": "CLink",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Controllers",
            "namespace": "",
            "file": "js\\controllers\\CLink.js",
            "line": 4,
            "description": "Link Controller."
        },
        "CTable": {
            "name": "CTable",
            "shortname": "CTable",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Controllers",
            "namespace": "",
            "file": "js\\controllers\\CTable.js",
            "line": 4,
            "description": "Table Controller."
        }
    },
    "classitems": [
        {
            "file": "js\\classes\\CKHelper\\Selection.js",
            "line": 20,
            "description": "Editor instance containing the selection.",
            "itemtype": "property",
            "name": "editor",
            "type": "CKEDITOR.editor",
            "access": "private",
            "tagname": "",
            "class": "Selection",
            "module": "CKHelper"
        },
        {
            "file": "js\\classes\\CKHelper\\Selection.js",
            "line": 27,
            "description": "Selected elements.",
            "itemtype": "property",
            "name": "selected",
            "type": "CKEDITOR.dom.selection",
            "access": "private",
            "tagname": "",
            "class": "Selection",
            "module": "CKHelper"
        },
        {
            "file": "js\\classes\\CKHelper\\Selection.js",
            "line": 37,
            "description": "Array of [range instances](http://docs.ckeditor.com/#!/api/CKEDITOR.dom.range) corresponding to the selection.",
            "itemtype": "property",
            "name": "ranges",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "Selection",
            "module": "CKHelper"
        },
        {
            "file": "js\\classes\\CKHelper\\Selection.js",
            "line": 47,
            "description": "{{#crossLink \"Selection/ranges:property\"}}ranges{{/crossLink}} getter.",
            "itemtype": "method",
            "name": "getRanges",
            "return": {
                "description": "array of CKEDITOR.dom.range instances",
                "type": "Array"
            },
            "class": "Selection",
            "module": "CKHelper"
        },
        {
            "file": "js\\classes\\CKHelper\\Selection.js",
            "line": 56,
            "description": "{{#crossLink \"Selection/selected:property\"}}selected{{/crossLink}} setter. Sets as well\n{{#crossLink \"Selection/ranges:property\"}}ranges{{/crossLink}}.",
            "itemtype": "method",
            "name": "setSelected",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Selection",
            "module": "CKHelper"
        },
        {
            "file": "js\\classes\\CKHelper\\Selection.js",
            "line": 70,
            "description": "{{#crossLink \"Selection/selected:property\"}}selected{{/crossLink}} getter.",
            "itemtype": "method",
            "name": "getSelected",
            "return": {
                "description": "",
                "type": "CKEDITOR.dom.selection"
            },
            "access": "private",
            "tagname": "",
            "class": "Selection",
            "module": "CKHelper"
        },
        {
            "file": "js\\classes\\CKHelper\\Selection.js",
            "line": 81,
            "description": "{{#crossLink \"Selection/editor:property\"}}editor{{/crossLink}} getter.",
            "itemtype": "method",
            "name": "getEditor",
            "return": {
                "description": "",
                "type": "CKEDITOR.editor"
            },
            "class": "Selection",
            "module": "CKHelper"
        },
        {
            "file": "js\\classes\\CKHelper\\Selection.js",
            "line": 90,
            "description": "{{#crossLink \"Selection/editor:property\"}}editor{{/crossLink}} setter. Sets as well\n{{#crossLink \"Selection/selected:property\"}}selected{{/crossLink}} and\n{{#crossLink \"Selection/ranges:property\"}}ranges{{/crossLink}}.",
            "itemtype": "method",
            "name": "setEditor",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "CKEDITOR.editor"
                }
            ],
            "class": "Selection",
            "module": "CKHelper"
        },
        {
            "file": "js\\classes\\CKHelper\\Selection.js",
            "line": 106,
            "description": "If selection is empty, returns empty array. Otherwise returns two dimensional array of the form\n<pre>\n[[a<sub>00</sub>, a<sub>01</sub>, ...], [a<sub>10</sub>, a<sub>11</sub>, ...], ...].\n</pre>\nEach inner array corresponds to the elements inside the\n{{#crossLink \"Selection/ranges:property\"}}ranges{{/crossLink}} property of the selection.\nSince DOM is an ***ordered*** collection of the nodes, the the above mentioned array is\njust a collection of simply-connected sets of nodes corresponding to the selection.\n\nNB1: _Simply-connected_ set is a set such that there exists a path inside the set\nconnecting two arbitrary elements of the set.\n\nNB2: _Path_ consists of pieces connecting two neighbours (the set is ordered, so that\nthe concept of \"neighbour\" exists).",
            "itemtype": "method",
            "name": "selectedNodes",
            "params": [
                {
                    "name": "sel",
                    "description": "",
                    "type": "Selection"
                }
            ],
            "access": "private",
            "tagname": "",
            "return": {
                "description": "two dimensional array of\n                                      [CKEDITOR.dom.domObject](http://docs.ckeditor.com/#!/api/CKEDITOR.dom.domObject)\n                                      or empty array",
                "type": "Array"
            },
            "class": "Selection",
            "module": "CKHelper"
        },
        {
            "file": "js\\classes\\CKHelper\\Selection.js",
            "line": 239,
            "description": "Two-dimensional array of nodes in selection.\n\nThis property was created in order to assure that private method\n{{#crossLink \"Selection/selectedNodes:method\"}}selectedNodes{{/crossLink}} gets called\njust once because it seemingly modifies DOM in such\na way that if one calles it multiple times, a wrong array offset is requested, hence, an\nerror is generated.",
            "itemtype": "property",
            "name": "nodes",
            "type": "{Array}      array of [CKEDITOR.dom.domObject](http://docs.ckeditor.com/#!/api/CKEDITOR.dom.domObject)",
            "class": "Selection",
            "module": "CKHelper"
        },
        {
            "file": "js\\classes\\CKHelper\\Selection.js",
            "line": 252,
            "description": "Returns text representation of the selected nodes. Remember that they are located inside a two-dimensional array.",
            "itemtype": "method",
            "name": "toText",
            "params": [
                {
                    "name": "blockSeparator",
                    "description": "string to be used as a separator between arrays",
                    "type": "String"
                },
                {
                    "name": "elemSeparator",
                    "description": "string to be used as a separator between elements in array",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Selection",
            "module": "CKHelper"
        },
        {
            "file": "js\\classes\\CKHelper\\Selection.js",
            "line": 277,
            "description": "Returns the start element of selection if it exists.",
            "itemtype": "method",
            "name": "getStartElement",
            "return": {
                "description": "",
                "type": "CKEDITOR.dom.element"
            },
            "class": "Selection",
            "module": "CKHelper"
        },
        {
            "file": "js\\classes\\CKHelper\\Selection.js",
            "line": 289,
            "description": "Returns `true` if {{#crossLink \"Selection/selectedNodes:method\"}}selectedNodes{{/crossLink}} is empty,\n`false` otherwise.\n\n{{#crossLink \"Selection/selectedNodes:method\"}}selectedNodes{{/crossLink}} output is considered empty\nif it is either empty array `[]` or an array containing empty array: `[[]]`.",
            "itemtype": "method",
            "name": "isEmpty",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Selection",
            "module": "CKHelper"
        },
        {
            "file": "js\\classes\\CKHelper\\Selection.js",
            "line": 306,
            "description": "Returns `true` if selected text starts inside a link, `false` otherwise.\nIn case when the selection is empty, cursor position is considered as beginning\nof empty selection.",
            "itemtype": "method",
            "name": "startsInsideLink",
            "return": {
                "description": "whether the selection starts inside a link",
                "type": "Boolean"
            },
            "class": "Selection",
            "module": "CKHelper"
        },
        {
            "file": "js\\classes\\CKHelper\\Selection.js",
            "line": 323,
            "description": "Returns `true` if selection content is editable, `false` otherwise.\n\nSelection is editable if:\n<ol>\n<li>it is empty</li>\n<li>it contains a single element that has type `text`</li>\n<li>it contains a single element that is a link which child nodes are of type `text`</li>\n</ol>",
            "itemtype": "method",
            "name": "isEditable",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Selection",
            "module": "CKHelper"
        },
        {
            "file": "js\\classes\\CKHelper\\Selection.js",
            "line": 376,
            "description": "Removes duplicate DOM nodes form input array. Each element of the array must be an instance of\n[CKEDITOR.dom.domObject](http://docs.ckeditor.com/#!/api/CKEDITOR.dom.domObject).",
            "itemtype": "method",
            "name": "dropDuplicates",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "$arr",
                    "description": "one-dimensional array of\n                                             [CKEDITOR.dom.domObject](http://docs.ckeditor.com/#!/api/CKEDITOR.dom.domObject)\n                                             objects",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "array of distinct\n                                             [CKEDITOR.dom.domObject](http://docs.ckeditor.com/#!/api/CKEDITOR.dom.domObject)\n                                             elements",
                "type": "Array"
            },
            "class": "Selection",
            "module": "CKHelper"
        },
        {
            "file": "js\\classes\\CKHelper\\Selection.js",
            "line": 419,
            "description": "Replaces each element in {{#crossLink \"Selection/selected:property\"}}selected{{/crossLink}} by\na link in which this element is located. In case the element is not located inside any link, then it\nis leaved without changes. The output array mimics the structure of\n{{#crossLink \"Selection/selected:property\"}}selected{{/crossLink}} array: it should be a two-dimensional array\nwithout duplicates.",
            "itemtype": "method",
            "name": "absorbLink",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Selection",
            "module": "CKHelper"
        },
        {
            "file": "js\\classes\\CKHelper\\Selection.js",
            "line": 456,
            "description": "Propagate style property named `prop` with the value `val` to the last descendant of each node in the selection.\nRemember that the selection is in general a two-dimensional array (or one-dimensional if the selection is empty).",
            "itemtype": "method",
            "name": "switchDeepestChildStyle",
            "params": [
                {
                    "name": "String",
                    "description": "prop        name of the property to be imposed"
                },
                {
                    "name": "String",
                    "description": "val         on-value of the above property"
                },
                {
                    "name": "String",
                    "description": "altVal      off-value of the property"
                }
            ],
            "since": "0.0.4",
            "return": {
                "description": "void"
            },
            "class": "Selection",
            "module": "CKHelper"
        },
        {
            "file": "js\\classes\\Helper\\String.js",
            "line": 15,
            "description": "Transforms a cell-html string into Cell object. It is supposed that the string to process is of the\nfollowing form: `<td ... > ... </td>`. Inside the tag, there might be other nodes. If they are recognized\nas a \"supported\" ones, the corresponding functions will be called to transform them into objects.",
            "itemtype": "method",
            "name": "createCellFromHtml",
            "return": {
                "description": "",
                "type": "Cell|null"
            },
            "class": "StringHelper",
            "module": "Helper"
        },
        {
            "file": "js\\classes\\Helper\\String.js",
            "line": 55,
            "description": "Transforms a row-html string into a Row object. It is supposed that the string to process is of the\nfollowing form: <tr ... > ... </tr>. Inside the tag, there might be elements \"td\" that will be\nprocessed one by one by function String::createCellFromHtml().",
            "itemtype": "method",
            "name": "createRowFromHtml",
            "return": {
                "description": "Row",
                "type": "Object"
            },
            "class": "StringHelper",
            "module": "Helper"
        },
        {
            "file": "js\\classes\\Helper\\String.js",
            "line": 101,
            "description": "Creates an object representation from a string that is an html repersentation of a table.\nOnly one table is supposed to be processed at a time, so the string to be processed is to\nbe of the following form `<table ...> ... </table>`. Inside the tag, there should be tags \"tr\"\nthat will be processed one by one by function String::createRowFromHtml().",
            "itemtype": "method",
            "name": "createTableFromHtml",
            "return": {
                "description": "",
                "type": "Table|null"
            },
            "deprecated": true,
            "deprecationMessage": "Use Factory.mimic() method",
            "class": "StringHelper",
            "module": "Helper"
        },
        {
            "file": "js\\classes\\Helper\\String.js",
            "line": 155,
            "description": "Transforms a list string into a List object. The argument listType is used to initialize the\nproperty \"name\" of the returned instance. If it is not provided, that the node tag-name property is used.\nIt is supposed that the string to process is of the following form:\n`<ol ... > ... </ol>` or `<ul ... > ... </ul>`.\nInside the tag, there might be other nodes. If they are recognized as a \"supported\" ones, the\ncorresponding functions will be called to transform them into objects.",
            "itemtype": "method",
            "name": "createListFromHtml",
            "params": [
                {
                    "name": "listType:",
                    "description": "ul or li",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "List|null"
            },
            "class": "StringHelper",
            "module": "Helper"
        },
        {
            "file": "js\\classes\\Helper\\String.js",
            "line": 205,
            "description": "Calls String::createListFromHtml('ul') on the target string.",
            "itemtype": "method",
            "name": "createUlFromHtml",
            "return": {
                "description": "",
                "type": "List|null"
            },
            "class": "StringHelper",
            "module": "Helper"
        },
        {
            "file": "js\\classes\\Helper\\String.js",
            "line": 215,
            "description": "Calls String::createListFromHtml('ol') on the target string.",
            "itemtype": "method",
            "name": "createOlFromHtml",
            "return": {
                "description": "",
                "type": "List|null"
            },
            "class": "StringHelper",
            "module": "Helper"
        },
        {
            "file": "js\\classes\\Helper\\String.js",
            "line": 224,
            "description": "Transforms a list item string into a ListItem object. It is supposed that the string to process is of the\nfollowing form: `<li ... > ... </li>`. Inside the tag, there might be other nodes. If they are recognized\nas a \"supported\" ones, the corresponding functions will be called to transform them into objects.",
            "itemtype": "method",
            "name": "createListItemFromHtml",
            "return": {
                "description": "",
                "type": "ListItem|null"
            },
            "class": "StringHelper",
            "module": "Helper"
        },
        {
            "file": "js\\classes\\Helper\\String.js",
            "line": 280,
            "description": "Creates an instance of Tag class and fills in its property \"elements\" with\nthe elements recognized inside the string. It is supposed that the string is of the\nform `<tag [tag-attributes] [style=\"...\"]>....</tag>`.",
            "itemtype": "method",
            "name": "createTagFromHtml",
            "return": {
                "description": "",
                "type": "Content|null"
            },
            "class": "StringHelper",
            "module": "Helper"
        },
        {
            "file": "js\\classes\\Helper\\String.js",
            "line": 336,
            "description": "Creates an instance of Link class and fills in its property \"elements\" with\nthe elements recognized inside the string. It is supposed that the string is of the\nform `<tag [tag-attributes] [style=\"...\"]>....</tag>`.",
            "itemtype": "method",
            "name": "createLinkFromHtml",
            "return": {
                "description": "",
                "type": "Link|null"
            },
            "class": "StringHelper",
            "module": "Helper"
        },
        {
            "file": "js\\classes\\Helper\\String.js",
            "line": 391,
            "description": "Creates an instance of Content class and fills in its property \"elements\" with\nthe elements recognized inside the string.",
            "itemtype": "method",
            "name": "inflate",
            "return": {
                "description": "",
                "type": "Content"
            },
            "class": "StringHelper",
            "module": "Helper"
        },
        {
            "file": "js\\classes\\Helper\\Unit.js",
            "line": 21,
            "description": "Absolute value of the Unit instance.",
            "itemtype": "property",
            "name": "value",
            "type": "Number",
            "class": "Unit",
            "module": "Helper"
        },
        {
            "file": "js\\classes\\Helper\\Unit.js",
            "line": 27,
            "description": "Measurement unit of the Unit instance.",
            "itemtype": "property",
            "name": "measure",
            "type": "String|null",
            "default": "null",
            "class": "Unit",
            "module": "Helper"
        },
        {
            "file": "js\\classes\\Helper\\Unit.js",
            "line": 61,
            "description": "{{#crossLink \"Unit/value:property\"}}value{{/crossLink}} getter.",
            "itemtype": "method",
            "name": "getValue",
            "return": {
                "description": "",
                "type": "Number"
            },
            "since": "0.0.5",
            "class": "Unit",
            "module": "Helper"
        },
        {
            "file": "js\\classes\\Helper\\Unit.js",
            "line": 71,
            "description": "{{#crossLink \"Unit/value:property\"}}measure{{/crossLink}} getter.",
            "itemtype": "method",
            "name": "getMeasure",
            "return": {
                "description": "",
                "type": "String"
            },
            "since": "0.0.5",
            "class": "Unit",
            "module": "Helper"
        },
        {
            "file": "js\\classes\\Helper\\Unit.js",
            "line": 81,
            "description": "Compares the target with the argument. Returns true, if the argument can be cast to the target type\nwith the same \"measurement\" property. False otherwise.",
            "itemtype": "method",
            "name": "isLikeAs",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Obj"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Unit",
            "module": "Helper"
        },
        {
            "file": "js\\classes\\Helper\\Unit.js",
            "line": 99,
            "description": "Sums up the target and the argument. If they have different units of measurement, an error is thrown.",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "unit",
                    "description": "",
                    "type": "Unit"
                }
            ],
            "return": {
                "description": "the sum of the target and the argument.",
                "type": "Unit"
            },
            "class": "Unit",
            "module": "Helper"
        },
        {
            "file": "js\\classes\\Helper\\Unit.js",
            "line": 115,
            "description": "Subtracts the argument from the target. The argument is converted to a Unit object,\nthen its sign is changed and the method Unit::add() is called.",
            "itemtype": "method",
            "name": "sub",
            "params": [
                {
                    "name": "obj",
                    "description": "it will be first converted to a Unit instance.",
                    "type": "Unit"
                }
            ],
            "return": {
                "description": "the difference between target and the argument.",
                "type": "Unit"
            },
            "class": "Unit",
            "module": "Helper"
        },
        {
            "file": "js\\classes\\Helper\\Unit.js",
            "line": 129,
            "description": "Returns string representation of the instance: join absolute value and unit of measurement.\nIf parameter is provided, it is used as a separator between the abs.value and unit of\nmeasurement.",
            "itemtype": "method",
            "name": "toString",
            "params": [
                {
                    "name": "sep",
                    "description": "",
                    "type": "String|null"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "since": "0.0.5",
            "class": "Unit",
            "module": "Helper"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Cell.js",
            "line": 20,
            "description": "Re-set private properties defined in parent class {{#crossLink \"Tag\"}}Tag{{/crossLink}}:\n<ol><li>\n{{#crossLink \"Tag/tag:property\"}}tag{{/crossLink}} to be \"td\"\n</li><li>\n{{#crossLink \"Tag/className:property\"}}className{{/crossLink}} to be \"Cell\"\n</li><li>\n{{#crossLink \"Tag/styles:property\"}}styles{{/crossLink}} to be\n{{#crossLink \"TableCellStyles\"}}TableCellStyles{{/crossLink}}\n</li><li>\n{{#crossLink \"Tag/content:property\"}}content{{/crossLink}} accepts current class argument.\n</li></ol>",
            "itemtype": "method",
            "name": "constructor",
            "class": "Cell",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Image.js",
            "line": 21,
            "description": "Re-set private properties defined in parent class {{#crossLink \"Tag\"}}Tag{{/crossLink}}:\n<ol><li>\n{{#crossLink \"Tag/tag:property\"}}tag{{/crossLink}} to be \"img\"\n</li><li>\n{{#crossLink \"Tag/className:property\"}}className{{/crossLink}} to be \"Image\"\n</li><li>\n{{#crossLink \"Tag/styles:property\"}}styles{{/crossLink}} to be\n{{#crossLink \"ImageStyles\"}}ImageStyles{{/crossLink}}\n</li></ol>",
            "itemtype": "method",
            "name": "constructor",
            "class": "Image",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Image.js",
            "line": 37,
            "description": "Sets `src` property of image {{#crossLink \"Tag/attributes:property\"}}attributes{{/crossLink}}\nif `url` corresponds to an image with non zero width and height. In this case, `height` and\n`width` properties are set in {{#crossLink \"Tag/styles:property\"}}styles{{/crossLink}} and\n{{#crossLink \"Tag/attributes:property\"}}attributes{{/crossLink}}.",
            "itemtype": "method",
            "name": "setOrigin",
            "params": [
                {
                    "name": "url",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Image",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Image.js",
            "line": 67,
            "description": "Drops protocol name from `url`. Everything until the first occurence of '://' will be removed (inclusively).",
            "itemtype": "method",
            "name": "dropProtocol",
            "params": [
                {
                    "name": "url",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Image",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Image.js",
            "line": 80,
            "description": "Returns protocol corresponding to `url`: everything starting from the beginning of line until\nfirst occurence of '://' (exclusively).",
            "itemtype": "method",
            "name": "getProtocol",
            "params": [
                {
                    "name": "url",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Image",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Image.js",
            "line": 99,
            "description": "Gets \"src\" property of image {{#crossLink \"Attributes\"}}attribute{{/crossLink}} inherited from\n{{#crossLink \"Tag\"}}Tag{{/crossLink}} class.",
            "itemtype": "method",
            "name": "getOrigin",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Image",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Image.js",
            "line": 110,
            "description": "Gets image height. It is read from {{#crossLink \"Tag/attributes:property\"}}attributes{{/crossLink}}.\nIt is set along with `src` attribute in {{#crossLink \"Image/setOrigin:method\"}}setOrigin{{/crossLink}}\nmethod.",
            "itemtype": "method",
            "name": "getHeight",
            "return": {
                "description": "",
                "type": "Integer"
            },
            "class": "Image",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Image.js",
            "line": 121,
            "description": "Returns html representation of the instance if\n{{#crossLink \"Image/getOrigin:method\"}}getOrigin(){{/crossLink}} returns non-empty string.\nOtherwise, returns empty string.\n\nHtml representation consists of opening and closing tags that are output of methods\n{{#crossLink \"Tag/openingTag:method\"}}openingTag{{/crossLink}} and\n{{#crossLink \"Tag/closingTag:method\"}}closingTag{{/crossLink}} correspondingly.\n\nThis method overrides the parent one {{#crossLink \"Tag/toHtml:method\"}}toHtml{{/crossLink}}\n(since I could not consistently call a parent class method from a child one when the child\nclass overrides the corresponding parent method.)",
            "itemtype": "method",
            "name": "toHtml",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Image",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Link.js",
            "line": 18,
            "description": "Re-set private properties defined in parent class {{#crossLink \"Tag\"}}Tag{{/crossLink}}:\n<ol><li>\n{{#crossLink \"Tag/tag:property\"}}tag{{/crossLink}} to be \"a\"\n</li><li>\n{{#crossLink \"Tag/className:property\"}}className{{/crossLink}} to be \"Link\"\n</li><li>\n{{#crossLink \"Tag/_properties:property\"}}_properties{{/crossLink}} to be\n{{#crossLink \"LinkProperties\"}}LinkProperties{{/crossLink}}\n</li></ol>",
            "itemtype": "method",
            "name": "constructor",
            "class": "Link",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Link.js",
            "line": 35,
            "description": "Returns value of \"href\" key inside {{#crossLink \"Tag/_properties:property\"}}_properties{{/crossLink}}.",
            "itemtype": "method",
            "name": "getHref",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Link",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Link.js",
            "line": 44,
            "description": "Href setter. Calles parent method  {{#crossLink \"Tag/setProperty:method\"}}setProperty{{/crossLink}}('href', ...).",
            "itemtype": "method",
            "name": "setHref",
            "params": [
                {
                    "name": "url",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Link",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Link.js",
            "line": 60,
            "description": "Sets `text-attribute` of the {{#crossLink \"Link/style:property\"}}`style`{{/crossLink}} property.\nIf the argument is missing or equal to `true`, \"underline\" is imposed.\nIf the argument is false, then \"none\" is imposed.\nIf the argument is a string,  `text-property` will be assigned to be equal to that string.\nIf nothing of the above holds, `text-property` remains unchanged.",
            "itemtype": "method",
            "name": "underline",
            "params": [
                {
                    "name": "val",
                    "description": "",
                    "type": "String|Null|Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Link",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Link.js",
            "line": 80,
            "description": "Sets `text-attribute` of the {{#crossLink \"Link/style:property\"}}`style`{{/crossLink}} property to be `none`.",
            "itemtype": "method",
            "name": "dropUnderline",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Link",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Link.js",
            "line": 89,
            "description": "Apply target properties on the argument `obj`. The following cases are distinguished:\n<ul><li>\nthe argument is an instance of {{#crossLink \"Link\"}}Link{{/crossLink}}. In this case, returns output of\n{{#crossLink \"Link/updateLink:method\"}}updateLink{{/crossLink}} method.\n</li><li>\nthe argument is an instance of {{#crossLink \"Content\"}}Content{{/crossLink}}. In this case, returns output of\n{{#crossLink \"Link/applyContent:method\"}}applyContent{{/crossLink}} method.\n</li><li>\nthe argument is an instance of {{#crossLink \"Tag\"}}Tag{{/crossLink}}. In this case, returns output of\n{{#crossLink \"Link/applyTag:method\"}}applyTag{{/crossLink}} method.\n</li></ul>\nIf non of the above holds, result of {{#crossLink \"Link/wrap:method\"}}wrap{{/crossLink}} method is returned.",
            "itemtype": "method",
            "name": "apply",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "type of output depends on input argument",
                "type": "Any"
            },
            "class": "Link",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Link.js",
            "line": 123,
            "description": "Returns a copy of the target in which {{#crossLink \"Tag/content:property\"}}content{{/crossLink}}\ncontains the only element which is `obj`.",
            "itemtype": "method",
            "name": "wrap",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "",
                "type": "Link"
            },
            "class": "Link",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Link.js",
            "line": 144,
            "description": "Converts the argument in link. Argument `tagObj` must be a {{#crossLink \"Tag\"}}Tag{{/crossLink}} instance.\nIf its {{#crossLink \"Tag/content\"}}content{{/crossLink}} is\n<ol><li>\nnon empty, then it is returned a copy of the argument in which {{#crossLink \"Tag/content:property\"}}content{{/crossLink}}\nis replaced by output of {{#crossLink \"Link/applyContent:method\"}}applyContent{{/crossLink}} method.\n</li><li>\nempty, then a {{#crossLink \"Link\"}}Link{{/crossLink}} instance is returned. This instance has\n{{#crossLink \"Tag/attributes:property\"}}attributes{{/crossLink}} and\n{{#crossLink \"Tag/styles:property\"}}styles{{/crossLink}} of the target and its\n{{#crossLink \"Tag/content:property\"}}content{{/crossLink}} contains `tagObj` as the only element.\n</li><li>\n</li></ol>",
            "itemtype": "method",
            "name": "applyTag",
            "params": [
                {
                    "name": "tagObj",
                    "description": "",
                    "type": "Tag"
                }
            ],
            "return": {
                "description": "",
                "type": "Tag|Link"
            },
            "class": "Link",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Link.js",
            "line": 176,
            "description": "Modifies a Content instance in such a way that {{#crossLink \"Link/apply:method\"}}apply{{/crossLink}}\nis applied on all elements of the argumet.",
            "itemtype": "method",
            "name": "applyContent",
            "params": [
                {
                    "name": "cntn",
                    "description": "",
                    "type": "Content"
                }
            ],
            "return": {
                "description": "",
                "type": "Content"
            },
            "class": "Link",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Link.js",
            "line": 200,
            "description": "Returns a new Link instance with `href` as in the target, {{#crossLink \"Tag/content:property\"}}content{{/crossLink}}\nas in the argument, {{#crossLink \"Tag/attributes:property\"}}attributes{{/crossLink}} and\n{{#crossLink \"Tag/styles:property\"}}styles{{/crossLink}} are as in the argument but augmented by corresponding values\nfrom the target",
            "itemtype": "method",
            "name": "updateLink",
            "params": [
                {
                    "name": "link",
                    "description": "",
                    "type": "Link"
                }
            ],
            "return": {
                "description": "",
                "type": "Link"
            },
            "class": "Link",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\List.js",
            "line": 21,
            "description": "Array of allowed values for the tag names: ['ol', 'ul'].",
            "itemtype": "property",
            "name": "allowedTags",
            "type": "{Array}",
            "access": "protected",
            "tagname": "",
            "class": "List",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\List.js",
            "line": 29,
            "description": "Re-set private properties defined in parent class {{#crossLink \"Tag\"}}Tag{{/crossLink}}:\n<ol><li>\n{{#crossLink \"Tag/tag:property\"}}tag{{/crossLink}} to be \"td\"\n</li><li>\n{{#crossLink \"Tag/className:property\"}}className{{/crossLink}} to be \"Cell\"\n</li><li>\n{{#crossLink \"Tag/styles:property\"}}styles{{/crossLink}} to be\n{{#crossLink \"TableCellStyles\"}}TableCellStyles{{/crossLink}}\n</li><li>\n{{#crossLink \"Tag/content:property\"}}content{{/crossLink}} accepts current class argument.\n</li></ol>",
            "itemtype": "method",
            "name": "constructor",
            "class": "List",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\List.js",
            "line": 47,
            "description": "Change the {{#crossLink \"Tag/tag:property\"}}tag{{/crossLink}} of the list. If the argument is not in\nthe array of allowed names {{#crossLink \"List/allowedTags:property\"}}allowedTags{{/crossLink}}, then no\nchange occurs.",
            "itemtype": "method",
            "name": "switchName",
            "params": [
                {
                    "name": "name",
                    "description": "the value to be imposed as a list type.",
                    "type": "String"
                }
            ],
            "class": "List",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\List.js",
            "line": 60,
            "description": "Gets the number of the list items",
            "itemtype": "method",
            "name": "itemNum",
            "return": {
                "description": "an integer number",
                "type": "Number"
            },
            "class": "List",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\List.js",
            "line": 69,
            "description": "Appends an object to the list items. The object must be a ListItem instance.\nIf not, an error is thrown.",
            "itemtype": "method",
            "name": "appendItem",
            "params": [
                {
                    "name": "item",
                    "description": "an instance of ListItem",
                    "type": "ListItem"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "List",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\List.js",
            "line": 83,
            "description": "Inserts the item at the given position. If the item to insert is a ListItem instance, then\n{{#crossLink \"Content/insertElemAt:method\"}}Content::insertElemAt(){{/crossLink}}\nContent::insertElemAt() is called. Otherwise, an error is thrown.",
            "itemtype": "method",
            "name": "insertItemAt",
            "params": [
                {
                    "name": "pos",
                    "description": "index of the position of there to insert the item",
                    "type": "Number"
                },
                {
                    "name": "item",
                    "description": "item to insert",
                    "type": "ListItem"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "List",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\List.js",
            "line": 100,
            "description": "Appends list: takes list items of the argument and appends it one by one to the target list.\nThe argument must be an instance of List. If not, an error is thrown.",
            "itemtype": "method",
            "name": "appendList",
            "params": [
                {
                    "name": "list",
                    "description": "",
                    "type": "List"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "List",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\List.js",
            "line": 118,
            "description": "Wraps elements of the input array into a {{#crossLink \"ListItem\"}}list item{{/crossLink}} object\nand appends it to its {{#crossLink \"Tag/content:property\"}}content{{/crossLink}} property defined in\nparent class {{#crossLink \"Tag\"}}Tag{{/crossLink}}.\nIf the argument is not of array type, creates a single-element array and apply the above procedure.",
            "itemtype": "method",
            "name": "appendAsItems",
            "params": [
                {
                    "name": "itemArr",
                    "description": "",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "List",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\ListItem.js",
            "line": 20,
            "description": "Re-set private properties defined in parent class {{#crossLink \"Tag\"}}Tag{{/crossLink}}:\n<ol><li>\n{{#crossLink \"Tag/tag:property\"}}tag{{/crossLink}} to be \"td\"\n</li><li>\n{{#crossLink \"Tag/className:property\"}}className{{/crossLink}} to be \"Cell\"\n</li><li>\n{{#crossLink \"Tag/_properties:property\"}}_properties{{/crossLink}} to be\n{{#crossLink \"ListItemProperties\"}}ListItemProperties{{/crossLink}}\n</li><li>\n{{#crossLink \"Tag/content:property\"}}content{{/crossLink}} accepts current class argument.\n</li></ol>",
            "itemtype": "method",
            "name": "constructor",
            "class": "ListItem",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\OList.js",
            "line": 21,
            "description": "Re-set private properties defined in parent class {{#crossLink \"Tag\"}}Tag{{/crossLink}}:\n<ol><li>\n{{#crossLink \"Tag/tag:property\"}}tag{{/crossLink}} to be \"ol\"\n</li><li>\n{{#crossLink \"Tag/className:property\"}}className{{/crossLink}} to be \"OList\"\n</li></ol>",
            "itemtype": "method",
            "name": "constructor",
            "class": "OList",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Row.js",
            "line": 20,
            "description": "Re-set private properties defined in parent class {{#crossLink \"Tag\"}}Tag{{/crossLink}}:\n<ol><li>\n{{#crossLink \"Tag/tag:property\"}}tag{{/crossLink}} to be \"tr\"\n</li><li>\n{{#crossLink \"Tag/className:property\"}}className{{/crossLink}} to be \"Row\"\n</li><li>\n{{#crossLink \"Tag/styles:property\"}}styles{{/crossLink}} to be\n{{#crossLink \"TableRowStyles\"}}TableRowStyles{{/crossLink}}\n</li></ol>",
            "itemtype": "method",
            "name": "constructor",
            "class": "Row",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Row.js",
            "line": 36,
            "description": "Returns an array of absolute cell widths (widths without unit of measurement).",
            "itemtype": "method",
            "name": "getCellWidths",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "Row",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Row.js",
            "line": 51,
            "description": "Alias for length() method of the parent class.",
            "itemtype": "method",
            "name": "cellNum",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Row",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Row.js",
            "line": 60,
            "description": "Sets widths of the cells inside the row.",
            "itemtype": "method",
            "name": "setCellWidths",
            "params": [
                {
                    "name": "profile",
                    "description": "each elements if this array is a width of the corresp. cell in the row.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Row",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Row.js",
            "line": 77,
            "description": "Inserts a cell into a given position. If the object to insert is a Cell instance,\nthen parent method insertElemAt is called. Otherwise, an error is thrown.",
            "itemtype": "method",
            "name": "insertCellAt",
            "params": [
                {
                    "name": "cell",
                    "description": "a cell to insert. If not a Cell instance, an error will be thrown.",
                    "type": "Cell"
                },
                {
                    "name": "pos",
                    "description": "position at which the cell is to be inserted.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Row",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Row.js",
            "line": 92,
            "description": "Appends a cell to the row cells. If one tries to append a non-Cell object, an exception is thrown.\nOtherwise, a method appendElem of the parent class is called.",
            "itemtype": "method",
            "name": "appendCell",
            "params": [
                {
                    "name": "cell",
                    "description": "a cell to be appended. If not a Cell instance, an error is thrown.",
                    "type": "Cell"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Row",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Row.js",
            "line": 106,
            "description": "Returns `true` if the row contains only one cell and this cell contains only one element\nthat is a {{#crossLink \"Table\"}}Table{{/crossLink}} instance. Otherwise, `false` is returned.",
            "itemtype": "method",
            "name": "onlyTableInside",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Row",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Row.js",
            "line": 120,
            "description": "Alias for {{#crossLink \"Tag/dropElemAt:method\"}}dropElemAt{{/crossLink}} method.",
            "itemtype": "method",
            "name": "dropCellAt",
            "params": [
                {
                    "name": "pos",
                    "description": "index of the cell to de dropped out.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Row",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Row.js",
            "line": 130,
            "description": "Drops the cell at the given position and resizes the remaining cells. If the cell to drop has a nieghbour to its\nright, then the freed space isassigned to that neighbour, otherwise it is assigned to the left neighbour:\n<pre>\n|xxx| a | b   | c |   ->   |     a | b   | c |\n| a |xxx| b   | c |   ->   | a |     b   | c |\n| a | b | c | xxx |   ->   | a | b | c       |\n</pre>\nIf the cell to drop does not exist, the row remains unchanged.",
            "itemtype": "method",
            "name": "knockOutCell",
            "params": [
                {
                    "name": "cellNum",
                    "description": "cell number to delete. Numeration starts with 0.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Row",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Row.js",
            "line": 166,
            "description": "Appends style to a given cell of the row. Alias for Tag::appendStyleToElemAt().",
            "itemtype": "method",
            "name": "appendStyleToCellAt",
            "params": [
                {
                    "name": "cellNum",
                    "description": "index of the target cell",
                    "type": "Number"
                },
                {
                    "name": "stl",
                    "description": "style to be appended",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Row",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Row.js",
            "line": 177,
            "description": "Populates the attributes from a string that is an html repersentation of some row.\nIt takes a string that is an html representation of a row and update current object\nparameters such that it will correspond to the html representation.\nIn other words, (new Row()).loadFromHtml(htmlString).toHtml() should be similar to htmlString\n(eventually up to presence/absence of some parameters and attributes).",
            "itemtype": "method",
            "name": "loadFromHtml",
            "params": [
                {
                    "name": "htmlStr",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "deprecated": true,
            "deprecationMessage": "in favour of String::createRowFromHtml()",
            "class": "Row",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Row.js",
            "line": 209,
            "description": "This is an alias for {{#crossLink \"Row/getPhantomCellProp:method\"}}getPhantomCellProp('style'){{/crossLink}}.",
            "itemtype": "method",
            "name": "phantomCellStyles",
            "return": {
                "description": "",
                "type": "Style"
            },
            "class": "Row",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Row.js",
            "line": 218,
            "description": "This is an alias for {{#crossLink \"Row/getPhantomCellProp:method\"}}getPhantomCellProp('attr'){{/crossLink}}.",
            "itemtype": "method",
            "name": "phantomCellAttr",
            "return": {
                "description": "",
                "type": "Attributes"
            },
            "class": "Row",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Row.js",
            "line": 227,
            "description": "If the row corresponds to a framed row (a row for which method\n{{#crossLink \"Row/onlyTableInside:method\"}}onlyTableInside{{/crossLink}} returns `true`), then\n{{#crossLink \"Tag/styles:property\"}}styles{{/crossLink}} or\n{{#crossLink \"Tag/attributes:property\"}}attributes{{/crossLink}} is returned.",
            "itemtype": "method",
            "name": "getPhantomCellProp",
            "params": [
                {
                    "name": "prop",
                    "description": "\"style\" or \"attr\"",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Styles|Attributes"
            },
            "class": "Row",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Row.js",
            "line": 247,
            "description": "If the row corresponds to a framed row (a row for which method\n{{#crossLink \"Row/onlyTableInside:method\"}}onlyTableInside{{/crossLink}} returns true),\nthen {{#crossLink \"Tag/styles:property\"}}styles{{/crossLink}} or\n{{#crossLink \"Tag/attributes:property\"}}attributes{{/crossLink}} of the table inside first cell of current row is returned.",
            "itemtype": "method",
            "name": "getPhantomTableProp",
            "params": [
                {
                    "name": "prop",
                    "description": "\"style\" or \"attr\"",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Styles|Attributes"
            },
            "class": "Row",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Row.js",
            "line": 269,
            "description": "If the row corresponds to a framed row (a row for which method\n{{#crossLink \"Row/onlyTableInside:method\"}}onlyTableInside{{/crossLink}}\nreturns `true`), then style of the table inside the cell is returned.\nThis is an alias for {{#crossLink \"Row/getPhantomTableProp:method\"}}getPhantomTableProp('style'){{/crossLink}}\nmethod.",
            "itemtype": "method",
            "name": "phantomTableStyles",
            "return": {
                "description": "",
                "type": "Style"
            },
            "class": "Row",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Row.js",
            "line": 282,
            "description": "If the row corresponds to a framed row (a row for which method\n{{#crossLink \"Row/onlyTableInside:method\"}}onlyTableInside{{/crossLink}}\nreturns `true`), then attribute of the table inside the cell is returned.\nThis is an alias for {{#crossLink \"Row/getPhantomTableProp:method\"}}getPhantomTableProp('attr'){{/crossLink}}.",
            "itemtype": "method",
            "name": "phantomTableAttr",
            "return": {
                "description": "",
                "type": "Attributes"
            },
            "class": "Row",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "line": 96,
            "description": "Re-set private properties defined in parent class {{#crossLink \"Tag\"}}Tag{{/crossLink}}:\n<ol><li>\n{{#crossLink \"Tag/tag:property\"}}tag{{/crossLink}} to be \"table\"\n</li><li>\n{{#crossLink \"Tag/className:property\"}}className{{/crossLink}} to be \"Table\"\n</li><li>\n{{#crossLink \"Tag/styles:property\"}}styles{{/crossLink}} to be\n{{#crossLink \"TableStyles\"}}TableStyles{{/crossLink}}\n</li><li>\n{{#crossLink \"Tag/attributes:property\"}}styles{{/crossLink}} to be\n{{#crossLink \"TableAttributes\"}}TableAttributes{{/crossLink}}\n</li></ol>",
            "itemtype": "method",
            "name": "constructor",
            "class": "Table",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "line": 116,
            "description": "Phantom cell.",
            "itemtype": "property",
            "name": "phantomCell",
            "type": "{Cell}",
            "access": "private",
            "tagname": "",
            "default": "undefined",
            "class": "Table",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "line": 125,
            "description": "Phantom row.",
            "itemtype": "property",
            "name": "phantomRow",
            "type": "{Row}",
            "access": "private",
            "tagname": "",
            "default": "undefined",
            "class": "Table",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "line": 135,
            "description": "Phantom table {{#crossLink \"Styles\"}}styles{{/crossLink}}.",
            "itemtype": "property",
            "name": "phantomTable",
            "type": "{Table}",
            "access": "private",
            "tagname": "",
            "default": "undefined",
            "class": "Table",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "line": 144,
            "description": "Initializes {{#crossLink \"Table/phantomRow:property\"}}phantomRow{{/crossLink}},\n{{#crossLink \"Table/phantomCell:property\"}}phantomCell{{/crossLink}},\n{{#crossLink \"Table/phantomTable:property\"}}phantomTable{{/crossLink}} if not initialized.\nIf they are initialized, no re-initialization happens.",
            "itemtype": "method",
            "name": "initPhantoms",
            "return": {
                "description": "void"
            },
            "class": "Table",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "line": 165,
            "description": "{{#crossLink \"Table/phantomCellStyles:property\"}}phantomCellStyles{{/crossLink}} getter.",
            "itemtype": "method",
            "name": "getPhantomCellStyles",
            "return": {
                "description": "",
                "type": "Styles"
            },
            "class": "Table",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "line": 177,
            "description": "{{#crossLink \"Table/phantomCellStyles:property\"}}phantomCellStyles{{/crossLink}} setter.",
            "itemtype": "method",
            "name": "setPhantomCellStyles",
            "params": [
                {
                    "name": "stl",
                    "description": "",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Table",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "line": 195,
            "description": "{{#crossLink \"Table/phantomCellStyles:property\"}}phantomRowStyles{{/crossLink}} getter.",
            "itemtype": "method",
            "name": "getPhantomRowStyles",
            "return": {
                "description": "",
                "type": "Styles"
            },
            "class": "Table",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "line": 206,
            "description": "{{#crossLink \"Table/phantomRowStyles:property\"}}setPhantomRowStyles{{/crossLink}} setter.",
            "itemtype": "method",
            "name": "setPhantomRowStyles",
            "params": [
                {
                    "name": "stl",
                    "description": "",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Table",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "line": 224,
            "description": "{{#crossLink \"Table/phantomTableStyles:property\"}}phantomTableStyles{{/crossLink}} getter.",
            "itemtype": "method",
            "name": "getPhantomTableStyles",
            "return": {
                "description": "",
                "type": "Styles"
            },
            "class": "Table",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "line": 235,
            "description": "{{#crossLink \"Table/phantomTableStyles:property\"}}phantomTableStyles{{/crossLink}} setter.",
            "itemtype": "method",
            "name": "setPhantomTableStyles",
            "params": [
                {
                    "name": "stl",
                    "description": "",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Table",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "line": 253,
            "description": "{{#crossLink \"FramedTable/phantomCellAttributes:property\"}}phantomCellAttributes{{/crossLink}} getter.",
            "itemtype": "method",
            "name": "getPhantomCellAttributes",
            "return": {
                "description": "",
                "type": "Attributes"
            },
            "class": "Table",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "line": 265,
            "description": "{{#crossLink \"FramedTable/phantomCellAttributes:property\"}}phantomCellAttributes{{/crossLink}} setter.",
            "itemtype": "method",
            "name": "setPhantomCellAttributes",
            "params": [
                {
                    "name": "prop",
                    "description": "",
                    "type": "Properties"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Table",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "line": 276,
            "description": "Returns `true` if the content of the instance contains the only element\nwhich is a \"tbody\" tag instance.",
            "itemtype": "method",
            "name": "hasTBody",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Table",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "line": 287,
            "description": "{{#crossLink \"FramedTable/phantomRowAttributes:property\"}}phantomRowAttributes{{/crossLink}} getter.",
            "itemtype": "method",
            "name": "getPhantomRowAttributes",
            "return": {
                "description": "",
                "type": "Attributes"
            },
            "class": "Table",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "line": 299,
            "description": "{{#crossLink \"FramedTable/phantomRowAttributes:property\"}}phantomRowAttributes{{/crossLink}} setter.",
            "itemtype": "method",
            "name": "setPhantomRowAttributes",
            "params": [
                {
                    "name": "attr",
                    "description": "",
                    "type": "Properties"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "deprecated": true,
            "deprecationMessage": "Use setPhantomRowProperties instead",
            "class": "Table",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "line": 318,
            "description": "Sets {{#crossLink \"Tag/_properties:property\"}}_properties{{/crossLink}} of\n{{#crossLink \"Table/phantomRow:property\"}}phantomRow{{/crossLink}}.",
            "itemtype": "method",
            "name": "setPhantomRowProperties",
            "params": [
                {
                    "name": "prop",
                    "description": "",
                    "type": "Properties"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "since": "0.0.5",
            "class": "Table",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "line": 331,
            "description": "Sets {{#crossLink \"Tag/_properties:property\"}}_properties{{/crossLink}} of\n{{#crossLink \"Table/phantomCell:property\"}}phantomCell{{/crossLink}}.",
            "itemtype": "method",
            "name": "setPhantomCellProperties",
            "params": [
                {
                    "name": "prop",
                    "description": "",
                    "type": "Properties"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "since": "0.0.5",
            "class": "Table",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "line": 345,
            "description": "{{#crossLink \"FramedTable/phantomTableAttributes:property\"}}phantomTableAttributes{{/crossLink}} getter.",
            "itemtype": "method",
            "name": "getPhantomTableAttributes",
            "return": {
                "description": "",
                "type": "Attributes"
            },
            "class": "Table",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "line": 357,
            "description": "{{#crossLink \"FramedTable/phantomTableAttributes:property\"}}phantomTableAttributes{{/crossLink}} setter.",
            "itemtype": "method",
            "name": "setPhantomTableAttributes",
            "params": [
                {
                    "name": "prop",
                    "description": "",
                    "type": "Properties"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "deprecated": true,
            "deprecationMessage": "Use setPhantomTableProperties instead",
            "class": "Table",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "line": 378,
            "description": "Sets private variable {{#crossLink \"Tag/_property:property\"}}_property{{/crossLink}} of\n{{#crossLink \"Table/phantomTable:property\"}}phantomTable{{/crossLink}}.",
            "itemtype": "method",
            "name": "setPhantomTableProperties",
            "params": [
                {
                    "name": "prop",
                    "description": "",
                    "type": "Any"
                }
            ],
            "since": "0.0.5",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Table",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "line": 392,
            "description": "{{#crossLink \"Table/phantomTable:property\"}}phantomTable{{/crossLink}}\n{{#crossLink \"Tag/_properties:property\"}}_properties{{/crossLink}} getter.\nAlias for {{#crossLink \"Tag/getProperties:property\"}}getProperties{{/crossLink}}\nmethod.",
            "itemtype": "method",
            "name": "getPhantomTableProperties",
            "since": "0.0.5",
            "return": {
                "description": "",
                "type": "Properties|Null"
            },
            "class": "Table",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "line": 406,
            "description": "{{#crossLink \"Table/phantomCell:property\"}}phantomCell{{/crossLink}}\n{{#crossLink \"Tag/_properties:property\"}}_properties{{/crossLink}} getter.\nAlias for {{#crossLink \"Tag/getProperties:property\"}}getProperties{{/crossLink}}\nmethod.",
            "itemtype": "method",
            "name": "getPhantomCellProperties",
            "since": "0.0.5",
            "return": {
                "description": "",
                "type": "Properties|Null"
            },
            "class": "Table",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "line": 420,
            "description": "{{#crossLink \"Table/phantomRow:property\"}}phantomRow{{/crossLink}}\n{{#crossLink \"Tag/_properties:property\"}}_properties{{/crossLink}} getter.\nAlias for {{#crossLink \"Tag/getProperties:property\"}}getProperties{{/crossLink}}\nmethod.",
            "itemtype": "method",
            "name": "getPhantomRowProperties",
            "since": "0.0.5",
            "return": {
                "description": "",
                "type": "Properties|Null"
            },
            "class": "Table",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "line": 433,
            "description": "Returns {{#crossLink \"Tag/openingTag:method\"}}opening{{/crossLink}} or\n{{#crossLink \"Tag/closingTag:method\"}}closing{{/crossLink}} tag for one of the\nphantom elements: {{#crossLink \"Table/phantomCell:property\"}}cell{{/crossLink}},\n{{#crossLink \"Table/phantomRow:property\"}}row{{/crossLink}},\n{{#crossLink \"Table/phantomTable:property\"}}table{{/crossLink}}.",
            "itemtype": "method",
            "name": "getPhantomTag",
            "params": [
                {
                    "name": "phantomElem",
                    "description": "\"cell\", \"row\", \"table\" (case insensitive)",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "\"open\" or \"close\" (case insensitive).\n                                                       If missing, supposed to be equal to \"open\".",
                    "type": "String|Null"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Table",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "line": 462,
            "description": "The number of the rows in the table. It scans {{#crossLink \"Table/content:property\"}}content{{/crossLink}}\nof the instance until the first occurrence of `tbody` tag. Once found, its length is returned. If not found,\nzero is returned.",
            "itemtype": "method",
            "name": "rowNum",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Table",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "line": 474,
            "description": "Sets `tbody` part of the table. The argument must be either a {{#crossLink \"Row\"}}Row{{/crossLink}}\ninstance or an array of {{#crossLink \"Row\"}}Row{{/crossLink}} instances.\nOtherwise, an error is thrown.\n\nEven though not more than one instance of `tbody` must be present among\n{{#crossLink \"Tag/content:property\"}}content{{/crossLink}}\n{{#crossLink \"Content/elements:property\"}}elements{{/crossLink}}, all `tbody` tags are first dropped\nfrom {{#crossLink \"Tag/content:property\"}}content{{/crossLink}} and then the requested one is inserted.",
            "itemtype": "method",
            "name": "setBody",
            "params": [
                {
                    "name": "body",
                    "description": "array of {{#crossLink \"Row\"}}Row{{/crossLink}} instances or\n                                     {{#crossLink \"Row\"}}Row{{/crossLink}} instance",
                    "type": "Array|Row"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "since": "0.0.5",
            "class": "Table",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "line": 514,
            "description": "Alias for {{#crossLink \"Table/setBody:method\"}}setBody{{/crossLink}} method.\n\nOverrides parent method {{#crossLink \"Tag/setElements:method\"}}setElements{{/crossLink}}.",
            "itemtype": "method",
            "name": "setElements",
            "params": [
                {
                    "name": "elems",
                    "description": "array of {{#crossLink \"Row\"}}Row{{/crossLink}} instances or\n                                     {{#crossLink \"Row\"}}Row{{/crossLink}} instance",
                    "type": "Array|Row"
                }
            ],
            "class": "Table",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "line": 526,
            "description": "Returns array of {{#crossLink \"Row\"}}Row{{/crossLink}} instances in `tbody` part of the table.",
            "itemtype": "method",
            "name": "getBody",
            "return": {
                "description": "one dimensional array of\n                                     {{#crossLink \"Row\"}}Row{{/crossLink}} instances\n                                     or empty array",
                "type": "Array"
            },
            "since": "0.0.5",
            "class": "Table",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "line": 540,
            "description": "Returns footer of the table.",
            "itemtype": "method",
            "name": "getFooter",
            "return": {
                "description": "",
                "type": "Tag|Null"
            },
            "class": "Table",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "line": 552,
            "description": "Returns header of the table.",
            "itemtype": "method",
            "name": "getHeader",
            "return": {
                "description": "",
                "type": "Tag|Null"
            },
            "class": "Table",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "line": 564,
            "description": "Returns header of the table.",
            "itemtype": "method",
            "name": "getCaption",
            "return": {
                "description": "",
                "type": "Tag|Null"
            },
            "class": "Table",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "line": 576,
            "description": "Appends a row to the content property. If the argument is not a Row instance, an error is thrown.",
            "itemtype": "method",
            "name": "appendRow",
            "params": [
                {
                    "name": "row",
                    "description": "a row to append. If not a Row instance, an error is thrown.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Table",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "line": 600,
            "description": "Gives a two-dimensional array [[w_11, w_12, ..., w_1n], ..., [w_m1, w_m2, ..., w_m3]]\nwhere w_ij is width of the cell located in the row i and column j.",
            "itemtype": "method",
            "name": "getMatrix",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "Table",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "line": 617,
            "description": "Returns array of widths of the cells in the table rows if all rows\nhave the same cell widths. Otherwise null is returned.",
            "itemtype": "method",
            "name": "getProfile",
            "return": {
                "description": "",
                "type": "Array|Null"
            },
            "class": "Table",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "line": 629,
            "description": "Imposes the widths of all cell in all rows of the table body. If the argument is not array, an error is thrown.\nIf the array length is different from the number of columns, an error is thrown. Otherwise, it is called\nmethod {{#crossLink \"Row/setCellWidths:method\"}}setCellWidths{{/crossLink}} on each row of table body.",
            "itemtype": "method",
            "name": "setProfile",
            "params": [
                {
                    "name": "profile",
                    "description": "an array of cell widths that will be applied to each row.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Table",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "line": 654,
            "description": "Inserts a cell \"cell\" into a given position \"pos\" of each row of the table.\nIf the table has 5 columns, then after insertion it will have 5+1=6 columns.\nPosition \"pos\" will correspond to the index of the inserted cell in the row after insertion.\n\"pos\" must be a valid cell number into the table after insertion. So, for the example above,\nthe valid values for \"pos\" are 0, 1, 2, 3, 4 and 5.",
            "itemtype": "method",
            "name": "insertColAt",
            "params": [
                {
                    "name": "cell",
                    "description": "",
                    "type": "Cell"
                },
                {
                    "name": "pos",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Table",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "line": 689,
            "description": "insertColumnAt was renamed into Table::insertColAt(). So, this method is added for back-compatibility .",
            "itemtype": "method",
            "name": "insertColumnAt",
            "params": [
                {
                    "name": "pos",
                    "description": "",
                    "type": "Pos"
                },
                {
                    "name": "cell",
                    "description": "",
                    "type": "Cell"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "deprecated": true,
            "deprecationMessage": "Use Table::insertColAt() directly.",
            "class": "Table",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "line": 702,
            "description": "Knocks out given column from the table. The operation is delegated to the `Row::knockOutCell()`",
            "itemtype": "method",
            "name": "knockOutCol",
            "params": [
                {
                    "name": "colNum",
                    "description": "the number of the column to be knocked out. Numeration starts with 0.",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Table",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "line": 718,
            "description": "dropColumn was renamed into Table::knockOutCol(). So, this method is added for back-compatibility .",
            "itemtype": "method",
            "name": "dropColumn",
            "params": [
                {
                    "name": "pos",
                    "description": "",
                    "type": "Pos"
                },
                {
                    "name": "cell",
                    "description": "",
                    "type": "Cell"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "deprecated": true,
            "deprecationMessage": "Use Table::knockOutCol() directly.",
            "class": "Table",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "line": 732,
            "description": "Drops specified column from the table. The operation is delegated to the `Row::dropCellAt()`",
            "itemtype": "method",
            "name": "dropColAt",
            "params": [
                {
                    "name": "colNum",
                    "description": "the number of the column to delete. Numeration starts with 0.",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Table",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "line": 748,
            "description": "Gives the number of columns in the table or null if not all rows have the same number of cells.\nThe operation is delegated to the `Row::cellNum()`.",
            "itemtype": "method",
            "name": "colNum",
            "return": {
                "description": "",
                "type": "Number|null"
            },
            "class": "Table",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "line": 776,
            "description": "Whether all rows in the table have the same cell widths.",
            "itemtype": "method",
            "name": "isSameWidth",
            "return": {
                "description": "true, if all rows have the same cells' widths, false otherwise.",
                "type": "Boolean"
            },
            "class": "Table",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "line": 813,
            "description": "Set the border of the table. It sets key `border` of {{#crossLink \"Tag/_properties:property\"}}_properties{{/crossLink}}\n as well as keys `border-width`, `border-color` and `border-style` of `style` key of\n {{#crossLink \"Tag/_properties:property\"}}_properties{{/crossLink}}.",
            "itemtype": "method",
            "name": "setBorder",
            "params": [
                {
                    "name": "borderInfo",
                    "description": "Object containing 'width', 'color' and 'style' for the border to set.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Table",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "line": 839,
            "description": "Removes the border of the table. It updates the properties 'attr' and 'style' of the instance:\n1. in 'style' property, deletes the properties: 'border-width', 'border-color' and sets up 'border-style' to 'none'\n2. in 'attr' property, deletes 'border' property.",
            "itemtype": "method",
            "name": "removeBorder",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Table",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "line": 863,
            "description": "Returns true if the table is fragmented, and false otherwise. It takes table rows and calls method\n{{#crossLink \"Row/onlyTableInside:method\"}}onlyTableInside{{/crossLink}} on each of them until\nfirst \"false\" is encountered.\n\nA table is a __framed table__ if all table rows have only one cell and this cell contains\nonly one element that is a Table instance.",
            "itemtype": "method",
            "name": "isFragmented",
            "return": {
                "description": "true if the table is framed, and false otherwise",
                "type": "Boolean"
            },
            "class": "Table",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "line": 883,
            "description": "Returns `true` if at least one of the following variables  {{#crossLink \"Table/phantomRow:property\"}}phantomRow{{/crossLink}},\n{{#crossLink \"Table/phantomCell:property\"}}phantomCell{{/crossLink}},\n{{#crossLink \"Table/phantomTable:property\"}}phantomTable{{/crossLink}} is set. `False` otherwise.",
            "itemtype": "method",
            "name": "isFramed",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Table",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "line": 894,
            "description": "Unsets phantom properties. After resetting those properties, the table becomes a table without frame.",
            "itemtype": "method",
            "name": "unsetPhantom",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Table",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "line": 905,
            "description": "Appends the style to the column. If the column exists, the method call `Row::appendStyleToCell()`\non each of the table rows.",
            "itemtype": "method",
            "name": "appendStyleToCol",
            "params": [
                {
                    "name": "colNum",
                    "description": "column number to which the style is to be appended.",
                    "type": "Number"
                },
                {
                    "name": "style",
                    "description": "Style or Object to be appended",
                    "type": "Style|Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Table",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "line": 929,
            "description": "Generates html representation of the table body. If table is framed, wraps each element of\n{{#crossLink \"Tag/content:property\"}}content{{/crossLink}} with strings corresponding to phantom\nelements. Generation of html string of each {{#crossLink \"Tag/content:property\"}}content element{{/crossLink}}\nis delegated to its `toHtml` method (if an element has no `toHtml` method, this element gets ignored).",
            "itemtype": "method",
            "name": "bodyToHtml",
            "params": [
                {
                    "name": "withFrame",
                    "description": "whether the table is framed or not.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "since": "0.0.5",
            "class": "Table",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "line": 955,
            "description": "Generates html code corresponding to this instance. Makes use of\n{{#crossLink \"Table/bodyToHtml:method\"}}bodyToHtml{{/crossLink}} method.\n\nThis method overrides parent one {{#crossLink \"Tag/toHtml:method\"}}toHtml{{/crossLink}} because one has to manage\npresence of properties {{#crossLink \"Table/phantomTable:property\"}}phantomTable{{/crossLink}},\n{{#crossLink \"Table/phantomCell:property\"}}phantomCell{{/crossLink}} and\n{{#crossLink \"Table/phantomRow:property\"}}phantomRow{{/crossLink}}.",
            "itemtype": "method",
            "name": "toHtml",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Table",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "line": 985,
            "description": "Generates instance of [DOM.Element](https://developer.mozilla.org/en-US/docs/Web/API/element)\ncorresponding to this instance.\n\nThis method overrides parent one  {{#crossLink \"Tag/toNode:method\"}}toNode{{/crossLink}} because\none has to manage presence of properties {{#crossLink \"Table/phantomTable:property\"}}phantomTable{{/crossLink}},\n{{#crossLink \"Table/phantomCell:property\"}}phantomCell{{/crossLink}} and\n{{#crossLink \"Table/phantomRow:property\"}}phantomRow{{/crossLink}}.",
            "itemtype": "method",
            "name": "toNode",
            "return": {
                "description": "",
                "type": "DOM.Element"
            },
            "class": "Table",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "line": 1018,
            "description": "If the table is fragmented and all rows have the same requested property, then\nthis property of the first row is returned. In any other case, null is returned.\nNB: to compare requested property for all rows, this property must be an object\nwith boolean-valued method isTheSameAs().",
            "itemtype": "method",
            "name": "getPhantomRowProp",
            "params": [
                {
                    "name": "prop",
                    "description": "a tag of the property to return. All rows should have this property.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the value of the property specified by the argument, if it is the same\n                                     for all rows, null otherwise.",
                "type": "Object|null"
            },
            "class": "Table",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "line": 1061,
            "description": "Gets copy of n-th row stored in table body. If that row does not exist, nothing is returned.",
            "itemtype": "method",
            "name": "getRow",
            "params": [
                {
                    "name": "n",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Row|Null"
            },
            "since": "0.0.5",
            "class": "Table",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "line": 1077,
            "description": "Returns copy of the first row stored in table body. If that row does not exist, nothing is returned.",
            "itemtype": "method",
            "name": "getFirstRow",
            "return": {
                "description": "",
                "type": "Row"
            },
            "since": "0.0.5",
            "class": "Table",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "line": 1089,
            "description": "Returns copy of last row stored in table body. If that row does not exist, nothing is returned.",
            "itemtype": "method",
            "name": "getLastRow",
            "return": {
                "description": "",
                "type": "Row"
            },
            "since": "0.0.5",
            "class": "Table",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "line": 1102,
            "description": "If the table is fragmented, gives the requested property of the phantom cell if that property is\nthe same for all rows. Otherwise, null is returned.",
            "itemtype": "method",
            "name": "getPhantomCellProp",
            "params": [
                {
                    "name": "propName",
                    "description": "requested property (supposed to be \"style\" or \"attr\")",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Object|null"
            },
            "class": "Table",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "line": 1130,
            "description": "If the table is fragmented, gives the requested property of the phantom cell if that property is\nthe same for all rows. Otherwise, null is returned.",
            "itemtype": "method",
            "name": "getPhantomTableProp",
            "params": [
                {
                    "name": "propName",
                    "description": "requested property (supposed to be \"style\" or \"attr\")",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Object|null"
            },
            "class": "Table",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\Table.js",
            "line": 1159,
            "description": "If the table is fragmented, then sets up the phantom properties and rearrange content property.\nIf not, the table remains as it is.\n\nNB: refactor it!!!!\n\nNB: note that disentanglement only of table body occurs. If table header contains fragmented table,\nit remains untouched.",
            "itemtype": "method",
            "name": "desintangle",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Table",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag\\UList.js",
            "line": 21,
            "description": "Re-set private properties defined in parent class {{#crossLink \"Tag\"}}Tag{{/crossLink}}:\n<ol><li>\n{{#crossLink \"Tag/tag:property\"}}tag{{/crossLink}} to be \"ul\"\n</li><li>\n{{#crossLink \"Tag/className:property\"}}className{{/crossLink}} to be \"UList\"\n</li></ol>",
            "itemtype": "method",
            "name": "constructor",
            "class": "UList",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Content.js",
            "line": 19,
            "description": "The  name of the class.",
            "itemtype": "property",
            "name": "className",
            "type": "{String}",
            "access": "private",
            "tagname": "",
            "class": "Content",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Content.js",
            "line": 28,
            "description": "Array in which Content items are stored.",
            "itemtype": "property",
            "name": "elements",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "default": "[str]",
            "class": "Content",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Content.js",
            "line": 36,
            "description": "{{#crossLink \"Content/className:property\"}}Class name{{/crossLink}} getter.",
            "itemtype": "method",
            "name": "getName",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Content",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Content.js",
            "line": 46,
            "description": "{{#crossLink \"Content/elements:property\"}}elements{{/crossLink}} getter. <br/>\n*NB*: the method tries to return a copy of {{#crossLink \"Content/elements:property\"}}elements{{/crossLink}}\ncontent.",
            "itemtype": "method",
            "name": "getElements",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "Content",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Content.js",
            "line": 62,
            "description": "{{#crossLink \"Content/elements:property\"}}elements{{/crossLink}} setter.",
            "itemtype": "method",
            "name": "setElements",
            "params": [
                {
                    "name": "items",
                    "description": "array of items",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Content",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Content.js",
            "line": 74,
            "description": "The number of items in the \"elements\" property",
            "itemtype": "method",
            "name": "length",
            "return": {
                "description": "",
                "type": "Integer"
            },
            "class": "Content",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Content.js",
            "line": 83,
            "description": "Gets a copy of element correspoinding to index `pos`. If it does not exist, null is returned.",
            "itemtype": "method",
            "name": "getElem",
            "params": [
                {
                    "name": "pos",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Mixed"
            },
            "class": "Content",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Content.js",
            "line": 97,
            "description": "Gets the first element. Alias for {{#crossLink \"Content/getElem:method\"}}getElem(0){{/crossLink}}.",
            "itemtype": "method",
            "name": "getFirst",
            "return": {
                "description": "",
                "type": "Mixed"
            },
            "class": "Content",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Content.js",
            "line": 106,
            "description": "Gets the last element. Alias for {{#crossLink \"Content/getElem:method\"}}getElem(...){{/crossLink}}.",
            "itemtype": "method",
            "name": "getLast",
            "return": {
                "description": "",
                "type": "Mixed"
            },
            "class": "Content",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Content.js",
            "line": 116,
            "description": "Inserts element at position pos inside the array of elements. If the lenght of array \"elements\"\nis equal to N, than the allowed position index is inside the range [0, 1, ..., N]. If the given\nposition index is outside that range, an error is thrown. If the position index is equal to N\n(that corresponds to appending the element), then Content::appendElem is called.",
            "itemtype": "method",
            "name": "insertElemAt",
            "params": [
                {
                    "name": "pos",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "elem",
                    "description": "",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Content",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Content.js",
            "line": 140,
            "description": "Reset {{#crossLink \"Content/elements:property\"}}elements{{/crossLink}} array.",
            "itemtype": "method",
            "name": "flush",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Content",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Content.js",
            "line": 149,
            "description": "Appends argument to the array of {{#crossLink \"Content/elements:property\"}}elements{{/crossLink}}.\nIf the argument is a {{#crossLink \"Content\"}}Content{{/crossLink}} instance, then its\n{{#crossLink \"Content/elements:property\"}}elements{{/crossLink}} are appended one by one to the\ntarget instance {{#crossLink \"Content/elements:property\"}}elements{{/crossLink}} array.",
            "itemtype": "method",
            "name": "appendElem",
            "params": [
                {
                    "name": "elem",
                    "description": "",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Content",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Content.js",
            "line": 172,
            "description": "If the argument is an instance of Content, then its {{#crossLink \"Content/elements:property\"}}elements{{/crossLink}}\nare copied (if possible) and inserted into target {{#crossLink \"Content/elements:property\"}}elements{{/crossLink}}\narray.",
            "itemtype": "method",
            "name": "absorb",
            "params": [
                {
                    "name": "cntn",
                    "description": "",
                    "type": "Content"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Content",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Content.js",
            "line": 189,
            "description": "Drops the element at the given position and returns it. If element at the position does not exist,\nan error is thrown.",
            "itemtype": "method",
            "name": "dropElemAt",
            "params": [
                {
                    "name": "pos",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Mixed"
            },
            "class": "Content",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Content.js",
            "line": 206,
            "description": "Drops the first element. Alias for {{#crossLink \"Content/dropElemAt:method\"}}Content/dropElemAt(0){{/crossLink}}.",
            "itemtype": "method",
            "name": "dropFirst",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Content",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Content.js",
            "line": 215,
            "description": "Drops the last element. If the number of current elements is greater than zero, then it is called\n{{#crossLink \"Content/dropElemAt:method\"}}Content/dropElemAt(pos){{/crossLink}} with pos being\nthe index of the last element.",
            "itemtype": "method",
            "name": "dropLast",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Content",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Content.js",
            "line": 229,
            "description": "Transforms the object into html form. Object-type entries of the \"elements\" property,\nshould have `toHtml()` method in order the html string to be generated. If it has no\n`toHtml()`, then html comment `<!--- ... -->` will be generated.",
            "itemtype": "method",
            "name": "toHtml",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Content",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Content.js",
            "line": 257,
            "description": "Text representation of the content. Object-type entries of the \"elements\" property,\nshould have `toText()` method in order the html string to be generated. If it has no\n`toText()`, then this object will be ignored.",
            "itemtype": "method",
            "name": "toText",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Content",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Content.js",
            "line": 286,
            "description": "Scans recursively the content of \"element\" property and returns true, if each item of the content is empty.\nReturns false otherwise.\nWhat is supposed to be empty:\n<ul><li>objects having method `isEmpty()` and which returns `true`</li>\n<li> '' or '&nbsp;' </li>\n<li>objects without any attributes</li> <ul>",
            "todo": [
                "decide whether consider functions to be empty or not."
            ],
            "itemtype": "method",
            "name": "isEmpty",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Content",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Content.js",
            "line": 328,
            "description": "Apply recursively this function to all items in `elements` property. In the case, the last\nitem is empty, deletes it.",
            "itemtype": "method",
            "name": "trim",
            "return": {
                "description": "",
                "type": "Void"
            },
            "deprecated": true,
            "class": "Content",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Content.js",
            "line": 361,
            "description": "Returns true, if the argument is empty, and false otherwise.\nWhat is supposed to be empty:\n<ol>\n<li>object that has a method `isEmpty` that returns `true`</li>\n<li>object without methods</li>\n<li>string ''</li>\n<li>array [] </li>\n</ol>",
            "itemtype": "method",
            "name": "isElemEmpty",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Content",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Content.js",
            "line": 396,
            "description": "If the argument is not empty, calls {{#crossLink \"Content/appendElem:method\"}}Content::appendElem(){{/crossLink}}.\nIf the argument is empty, nothing is done. The argument is considered empty, if the method\n{{#crossLink \"Content/isElemEmpty:method\"}}Content::isElemEmpty(arg){{/crossLink}} returns `true`.",
            "itemtype": "method",
            "name": "appendElemIfNotEmpty",
            "params": [
                {
                    "name": "obj",
                    "description": "Object to be inserted if not empty",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Content",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Content.js",
            "line": 410,
            "description": "Loads elements into the {{#crossLink \"Content/elements:property\"}}element{{/crossLink}} property.\nEach element of the input array is to be mimicked using the means of the FACTORY. If it is not\ndefined, then no loading is performed and `false` is returned. Otherwise, the method tries to load\nand returns `true`.",
            "itemtype": "method",
            "name": "load",
            "params": [
                {
                    "name": "arr",
                    "description": "array of Elements or Text instances",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "true, if loaded successfully, false otherwise",
                "type": "Boolean"
            },
            "class": "Content",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Content.js",
            "line": 434,
            "description": "Converts each element of this instance into a node and appends it to the argument.\n\nTakes each element of the array {{#crossLink \"Content/elements:property\"}}Content::elements{{/crossLink}},\nconverts it into a node (if the element responds to `toNode()` method, the convertion will\nbe performed using this method, otherwise a text node will be constructed)\nand then appends this node to the argument which is supposed to be an instance of\n[DOM.Node](https://developer.mozilla.org/en-US/docs/Web/API/Node) (in fact, it is enough\nthat is has [appendChild()](https://developer.mozilla.org/en-US/docs/Web/API/Node.appendChild)\nmethod).",
            "itemtype": "method",
            "name": "stickTo",
            "params": [
                {
                    "name": "el",
                    "description": "[DOM.Node](https://developer.mozilla.org/en-US/docs/Web/API/Node)",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Content",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Content.js",
            "line": 460,
            "description": "Clones the target. Tries to create a clone of each {{#crossLink \"Content/elements:property\"}}elements{{/crossLink}}\nitem. In case the item is an object with no \"clone\" method, it is inserted into\n{{#crossLink \"Content/elements:property\"}}elements{{/crossLink}} by reference.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Content",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Content.js",
            "line": 476,
            "description": "Appends Style `stl` to element at position `pos`.",
            "itemtype": "method",
            "name": "appendStyleToElemAt",
            "params": [
                {
                    "name": "pos",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Content",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Content.js",
            "line": 491,
            "description": "Returns array of positions at which object with tag name `name` is situated.",
            "itemtype": "method",
            "name": "findTagPos",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "since": "0.0.5",
            "class": "Content",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Content.js",
            "line": 508,
            "description": "Returns first element from {{#crossLink \"Content/elements:property\"}}elements{{/crossLink}} whose getTag() returns `name`.\nIf nothing is found, nothing is returned.",
            "itemtype": "method",
            "name": "getFirstEntryOfTag",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "first element from\n                                        {{#crossLink \"Content/elements:property\"}}elements{{/crossLink}}\n                                        which \"getTag\" method returns `name`.",
                "type": "Tag|Null"
            },
            "since": "0.0.5",
            "class": "Content",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Content.js",
            "line": 531,
            "description": "Filters out array {{#crossLink \"Content/elements:property\"}}elements{{/crossLink}} in such a way\nthat only those elements for which `fun` returns `true` remain.",
            "itemtype": "method",
            "name": "filterOut",
            "params": [
                {
                    "name": "fun",
                    "description": "function to be applied to each element",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Content",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Dom.js",
            "line": 15,
            "description": "Returns value of style property `prop` of node `n`. It looks up the chain of parents until finds\nfirst occurence of key `prop`. If the key is not present in any of ancestors, nothing is returned.",
            "itemtype": "method",
            "name": "_lookUpInParents",
            "params": [
                {
                    "name": "n",
                    "description": "[Node](https://developer.mozilla.org/en-US/docs/Web/API/Node) instance",
                    "type": "DOM.Node"
                },
                {
                    "name": "prop",
                    "description": "name of the property to look for",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String|void"
            },
            "access": "private",
            "tagname": "",
            "deprecated": true,
            "deprecationMessage": "in favour of {{#crossLink \"Dom/getInheritedStyleProp:method\"}}getInheritedStyleProp{{/crossLink}}",
            "since": "0.0.4",
            "class": "Dom",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Dom.js",
            "line": 42,
            "description": "Toggles inline style property `prop` of node `n`. When it turns out that the property should\nbe set, it is set to value `val`.",
            "itemtype": "method",
            "name": "_toggleNodeStyle",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "n",
                    "description": "instance of [DOM.Node](https://developer.mozilla.org/en-US/docs/Web/API/Node)",
                    "type": "DOM.Node"
                },
                {
                    "name": "prop",
                    "description": "style property name to be toggled",
                    "type": "String"
                },
                {
                    "name": "val",
                    "description": "on-value of the the style property",
                    "type": "String"
                },
                {
                    "name": "altVal",
                    "description": "off-value of the style property",
                    "type": "String|Null"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "since": "0.0.4",
            "class": "Dom",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Dom.js",
            "line": 73,
            "description": "Returns **proxy** node of `n`:\n<ol><li>\nif `n` is a text element without siblings, then proxy of `n` is its parent node,\n</li><li>\nif `n` is a text element with siblings or is a node element, then proxy of `n` is `n` itself.\n</li></ol>",
            "itemtype": "method",
            "name": "_proxy",
            "params": [
                {
                    "name": "n",
                    "description": "[Node](https://developer.mozilla.org/en-US/docs/Web/API/Node) instance",
                    "type": "DOM.Node"
                }
            ],
            "return": {
                "description": "",
                "type": "DOM.Node|Null"
            },
            "class": "Dom",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Dom.js",
            "line": 94,
            "description": "Looks for a value of style property `key` of nearest ascendant of `node` in the scope of node `scope`.\nIf the property is found, its value is returned, otherwise,  `undefined` is returned.\n\nLimit node `scope` is supposed to contain `node`. Otherwise, the search for the property\nis performed up to the \"highest\" parent of `node`.\n\nNB: ** optimize algorithm in such a way that DOM is parsed only once even when `scope` is set wrong. **",
            "itemtype": "method",
            "name": "getInheritedStyleProp",
            "params": [
                {
                    "name": "node",
                    "description": "[Node](https://developer.mozilla.org/en-US/docs/Web/API/Node) instance",
                    "type": "DOM.Node"
                },
                {
                    "name": "scope",
                    "description": "[Node](https://developer.mozilla.org/en-US/docs/Web/API/Node) instance",
                    "type": "DOM.Node"
                },
                {
                    "name": "key",
                    "description": "name of property to find among inline style of ascendants",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String|Number|Null"
            },
            "since": "0.0.4",
            "class": "Dom",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Dom.js",
            "line": 138,
            "description": "Modifies inline style properties of a {{#crossLink \"Selection/_proxy:method\"}}proxy{{/crossLink}}\nnode of deepest children of node `n` in the following way:\n<ol><li>\nif style property `prop` of the deepest child is equal to `val`, then inline\nstyle property of its \"proxy\" node is set to be `altVal`.\n</li><li>\nif style property `prop` of the deepest child is not equal to `val`, then inline\nstyle property of its \"proxy\" node is set to be `val`.\n</li></ol>",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_deferToggleStyle",
            "params": [
                {
                    "name": "n",
                    "description": "[Node](https://developer.mozilla.org/en-US/docs/Web/API/Node) instance",
                    "type": "Node"
                },
                {
                    "name": "prop",
                    "description": "name of style property (i.e., \"width\" or \"text-decoration\")",
                    "type": "String"
                },
                {
                    "name": "val",
                    "description": "value of style property (i.e., \"10px\" or \"underline\")",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "since": "0.0.4",
            "todo": [
                "Try to make this method shorter"
            ],
            "class": "Dom",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Dom.js",
            "line": 202,
            "description": "Gives common ancestor of nodes n1 and n2. If it does not exist, `null` is returned.",
            "itemtype": "method",
            "name": "_commonAncestor",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "n1",
                    "description": "[Node](https://developer.mozilla.org/en-US/docs/Web/API/Node) instance",
                    "type": "DOM.Node"
                },
                {
                    "name": "n2",
                    "description": "[Node](https://developer.mozilla.org/en-US/docs/Web/API/Node) instance",
                    "type": "DOM.Node"
                }
            ],
            "return": {
                "description": "",
                "type": "DOM.Node|Null"
            },
            "since": "0.0.4",
            "class": "Dom",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Dom.js",
            "line": 234,
            "description": "Gives common ancestor of nodes n1 and n2. If it does not exist, `null` is returned.",
            "itemtype": "method",
            "name": "commonAncestor",
            "params": [
                {
                    "name": "n1",
                    "description": "[Node](https://developer.mozilla.org/en-US/docs/Web/API/Node) instance",
                    "type": "DOM.Node"
                },
                {
                    "name": "n2",
                    "description": "[Node](https://developer.mozilla.org/en-US/docs/Web/API/Node) instance",
                    "type": "DOM.Node"
                }
            ],
            "return": {
                "description": "",
                "type": "DOM.Node|Null"
            },
            "class": "Dom",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Dom.js",
            "line": 245,
            "description": "Returns common ancestor of all array elements. If an element is not a\n[Node](https://developer.mozilla.org/en-US/docs/Web/API/Node) instance, it is ignored.",
            "itemtype": "method",
            "name": "commonAncestorSoft",
            "return": {
                "description": "common ancestor of the arguments",
                "type": "DOM.Node|Null"
            },
            "class": "Dom",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Dom.js",
            "line": 284,
            "description": "Returns the nearest node from which `node` inherits inline style property `key`. If no such node exists, returns `undefined`.",
            "itemtype": "method",
            "name": "getMentor",
            "params": [
                {
                    "name": "key",
                    "description": "name of inline style property",
                    "type": "String"
                },
                {
                    "name": "node",
                    "description": "[Node](https://developer.mozilla.org/en-US/docs/Web/API/Node) instance",
                    "type": "DOM.Node"
                }
            ],
            "return": {
                "description": "[Node](https://developer.mozilla.org/en-US/docs/Web/API/Node) instance",
                "type": "DOM.Node|undefined"
            },
            "class": "Dom",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Dom.js",
            "line": 307,
            "description": "Nails inline style property `key` of `node`:  applies style property on \"innocent\" nodes\nand toggles node inline property `key` between `primary` and `secondary`.\n\nIf `node` has a mentor node, then:\n<ol><li>\nassign value of inline style property `key` of the mentor to each\n{{#crossLink \"Dom/complementNodes:method\"}}complement node{{/crossLink}} to the path `mentor - ... - node`,\n</li><li>\neliminate inline style property `key` from the mentor,\n</li><li>\ncall {{#crossLink \"Dom/setStyleProperty:method\"}}setStyleProperty{{/crossLink}} method that takes care of\nsetting inline style property of `node` to required value.\n</li></ol>\nIf `node` has no mentor node, then set its inline style property `key` to be equal to `secondary`",
            "itemtype": "method",
            "name": "nailStyleProperty",
            "params": [
                {
                    "name": "node",
                    "description": "[Node](https://developer.mozilla.org/en-US/docs/Web/API/Node) instance",
                    "type": "DOM.Node"
                },
                {
                    "name": "key",
                    "description": "name of inline style property",
                    "type": "String"
                },
                {
                    "name": "primary",
                    "description": "primary value of inline style property",
                    "type": "String|Number"
                },
                {
                    "name": "secondary",
                    "description": "secondary value of inline style property",
                    "type": "String|Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Dom",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Dom.js",
            "line": 353,
            "description": "Returns reference to a node with inline style property `key` being set to `value`.\nIf `node` is a [Node](https://developer.mozilla.org/en-US/docs/Web/API/Node) instance,\nthen reference it itself is returned. Otherwise, it is returned a new\n[Node](https://developer.mozilla.org/en-US/docs/Web/API/Node) instance, which contains\na clone of `node` and which replaces `node`.",
            "itemtype": "method",
            "name": "setStyleProperty",
            "params": [
                {
                    "name": "node",
                    "description": "[Node](https://developer.mozilla.org/en-US/docs/Web/API/Node) instance",
                    "type": "DOM.Node"
                },
                {
                    "name": "key",
                    "description": "name of inline style property to set",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "value of the inline style property",
                    "type": "String|Number"
                }
            ],
            "return": {
                "description": "[Node](https://developer.mozilla.org/en-US/docs/Web/API/Node)",
                "type": "DOM.Node"
            },
            "class": "Dom",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Dom.js",
            "line": 383,
            "description": "Gets inline style property with name `key` of `node`. Returns `undefined` if `node`\ndoes not have inline style property `key`.",
            "itemtype": "method",
            "name": "getStyleProperty",
            "params": [
                {
                    "name": "node",
                    "description": "[Node](https://developer.mozilla.org/en-US/docs/Web/API/Node) instance",
                    "type": "DOM.Node"
                },
                {
                    "name": "key",
                    "description": "name of inline style property of `node`",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String|Number"
            },
            "class": "Dom",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Dom.js",
            "line": 401,
            "description": "Drops inline style property `key` from `node` and removes inline style attribute if\nit becomes empty.\nReturns `true` if the initially contains inline style property `key` and `false` otherwise.",
            "itemtype": "method",
            "name": "dropStyleProperty",
            "params": [
                {
                    "name": "node",
                    "description": "[Node](https://developer.mozilla.org/en-US/docs/Web/API/Node) instance",
                    "type": "DOM.Node"
                },
                {
                    "name": "key",
                    "description": "name of inline style attribute to drop",
                    "type": "String"
                }
            ],
            "return": {
                "description": "`true` if successefully deleted the requested property\n                                                and `false` otherwise",
                "type": "Boolean"
            },
            "class": "Dom",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Dom.js",
            "line": 431,
            "description": "Toggles style property `key` of element `elem` from `primary` to `secondary`.\nIf the element has style property `key` equal to `primary`, then it is imposed to `secondary`.\nOtherwise, it is imposed to `primary`.\n\nAn element is considered to have style property imposed if either the element itself, or any of\nits parents has that value imposed.\n\nIf not [Element](https://developer.mozilla.org/en-US/docs/Web/API/Element) instance is given as the first\nargument, then the method performs nothing. Note, that for text nodes this method is not applicable,\nsince text nodes have no attributes.",
            "itemtype": "method",
            "name": "toggleElementStyle",
            "params": [
                {
                    "name": "elem",
                    "description": "[Element](https://developer.mozilla.org/en-US/docs/Web/API/Element) instance",
                    "type": "DOM.Element"
                },
                {
                    "name": "key",
                    "description": "name of style property to change",
                    "type": "String"
                },
                {
                    "name": "primary",
                    "description": "primary value of the above style property",
                    "type": "String|Number"
                },
                {
                    "name": "secondary",
                    "description": "secondary value of the style property",
                    "type": "String|Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "since": "0.0.4",
            "class": "Dom",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Dom.js",
            "line": 460,
            "description": "Returns an [Element](https://developer.mozilla.org/en-US/docs/Web/API/Element) instance with the style\nproperty `key` equal to `secondary` if value of `key` attribute in \"style\" property  is equal to `primary`. Otherwise,\n`key` value will be imposed to `primary`.\n\nCreated instance is a \"span\" html tag.",
            "itemtype": "method",
            "name": "createToggledElemFromText",
            "params": [
                {
                    "name": "textNode",
                    "description": "[Text](https://developer.mozilla.org/en-US/docs/Web/API/Text)\n                                                     instance whose \"toggle\" copy is to be created",
                    "type": "DOM.Text"
                },
                {
                    "name": "key",
                    "description": "name of style property (i.e., \"text-decoration\", \"font-style\")",
                    "type": "String"
                },
                {
                    "name": "primary",
                    "description": "primary value of the style property",
                    "type": "String|Number"
                },
                {
                    "name": "secondary",
                    "description": "secondary value",
                    "type": "String|Number"
                }
            ],
            "return": {
                "description": "",
                "type": "DOM.Node"
            },
            "since": "0.0.4",
            "class": "Dom",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Dom.js",
            "line": 488,
            "description": "Returns a one-dimensional array of [Node](https://developer.mozilla.org/en-US/docs/Web/API/Node) instances\nthat are descendants of `startNode-...-endNode` path but do not belong to that path.\nIf path from `startNode` to `endNode` does not exist, an error is thrown.\n<dl>\n<dt> Path A - ... - B</dt>\n<dd> An ordered collection of nodes n<sub>i</sub> from which one needs to pass through in order\nto arrive to node B starting from node A passing always from a node to its child.\n</dd>\n<dt> Descendant of a path A - ... - B</dt>\n<dd>\n\tA node C is a descendant of A - ... - B path if parent of node C belongs to A - ... - B path.\n</dd>\n</dl>",
            "itemtype": "method",
            "name": "complementNodes",
            "params": [
                {
                    "name": "startNode",
                    "description": "a [Node](https://developer.mozilla.org/en-US/docs/Web/API/Node)\n                                                        instance from which to start the path",
                    "type": "DOM.Node"
                },
                {
                    "name": "endNode",
                    "description": "a [Node](https://developer.mozilla.org/en-US/docs/Web/API/Node)\n                                                        instance at which to finish the path",
                    "type": "DOM.Node"
                }
            ],
            "return": {
                "description": "one-dimensional array of\n                                                        [Node](https://developer.mozilla.org/en-US/docs/Web/API/Node)\n                                                        instances or empty array",
                "type": "Array"
            },
            "class": "Dom",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Factory.js",
            "line": 24,
            "description": "An instance of {{#crossLink \"Mapping\"}}Mapping{{/crossLink}} class.",
            "itemtype": "property",
            "name": "mapping",
            "access": "private",
            "tagname": "",
            "type": "{Mapping}",
            "class": "Factory",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Factory.js",
            "line": 32,
            "description": "{{#crossLink \"Factory/mapping:property\"}}Mapping{{/crossLink}} getter.",
            "itemtype": "method",
            "name": "getMapping",
            "return": {
                "description": "",
                "type": "Mapping"
            },
            "class": "Factory",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Factory.js",
            "line": 41,
            "description": "{{#crossLink \"Factory/mapping:property\"}}Mapping{{/crossLink}} setter. Returns `true`\nif the argument is an instance of {{#crossLink \"Mapping\"}}Mapping{{/crossLink}} class and\n`false` otherwise.",
            "itemtype": "method",
            "name": "setMapping",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Factory",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Factory.js",
            "line": 56,
            "description": "Creates a class instance corresponding to the argument. The decision is to be taken\nbased on the {{#crossLink \"Mapping/findTargetFor:method\"}}findTargetFor(){{/crossLink}}\nof {{#crossLink \"Factory/mapping:method\"}}mapping{{/crossLink}} property.",
            "itemtype": "method",
            "name": "stub",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "",
                "type": "Object|Null"
            },
            "class": "Factory",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Factory.js",
            "line": 75,
            "description": "Creates a copy of the argument. It first calls {{#crossLink \"Factory/stub:method\"}}stub{{/crossLink}} and if its\nresult responds to method \"load\", calls it.",
            "itemtype": "method",
            "name": "mimic",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Factory",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Mapping.js",
            "line": 23,
            "description": "Array of mappings. Each array element is an object with two keys: `criterion` and `target`.\nValue of `criterion` must be a boolean-valued function, while `target` must be a class.",
            "itemtype": "property",
            "name": "mappings",
            "type": "{Array}",
            "access": "private",
            "tagname": "",
            "default": "[]",
            "class": "Mapping",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Mapping.js",
            "line": 33,
            "description": "Default target.",
            "itemtype": "property",
            "name": "defaultTarget",
            "type": "Function|Null",
            "access": "private",
            "tagname": "",
            "default": "null",
            "class": "Mapping",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Mapping.js",
            "line": 41,
            "description": "{{#crossLink \"Mapping/defaultTarget:property\"}}Default target{{/crossLink}} setter. Assigns only\nif the argument is a function.",
            "itemtype": "method",
            "name": "setDefaultTarget",
            "params": [
                {
                    "name": "fun",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Mapping",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Mapping.js",
            "line": 54,
            "description": "{{#crossLink \"Mapping/defaultTarget:property\"}}Default target{{/crossLink}} getter.",
            "itemtype": "method",
            "name": "getDefaultTarget",
            "return": {
                "description": "",
                "type": "Function|Null"
            },
            "class": "Mapping",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Mapping.js",
            "line": 64,
            "description": "Forms an object {'criterion': crit, 'target': target} from the input and it it\nturns out to be a valid mapping, then this mapping is\nappended to {{#crossLink \"Mapping/mappings:property\"}}mappings{{/crossLink}}\nand the `true` is returned. Otherwise, `false` is returned.<br>\nA mapping is a valid one if method\n{{#crossLink \"Mapping/isValidMapping:method\"}}isValidMapping(){{/crossLink}} returns `true`.",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "criterion",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "target",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Mapping",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Mapping.js",
            "line": 91,
            "description": "Returns a copy of the {{#crossLink \"Mapping/mappings:property\"}}mappings{{/crossLink}}.",
            "itemtype": "method",
            "name": "getMappings",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "Mapping",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Mapping.js",
            "line": 102,
            "description": "Returns `true` if the argument is an object with function-valued keys `criterion` and `target`.\nReturns `false` otherwise.",
            "itemtype": "method",
            "name": "isValidMapping",
            "params": [
                {
                    "name": "map",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Mapping",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Mapping.js",
            "line": 113,
            "description": "Reset {{#crossLink \"Mapping/mappings:property\"}}mappings{{/crossLink}} to an empty array.",
            "itemtype": "method",
            "name": "flush",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Mapping",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Mapping.js",
            "line": 122,
            "description": "Finds target for the argument. It parses array {{#crossLink \"Mapping/mappings:property\"}}mappings{{/crossLink}}\nand calls `criterion` function of the array element. Value of `target` key of first `criterion` that returns\n`true`, is returned. If not found,\n{{#crossLink \"Mapping/getDefaultTarget:method\"}}getDefaultTarget(){{/crossLink}} is returned.",
            "itemtype": "method",
            "name": "findTargetFor",
            "params": [
                {
                    "name": "needle",
                    "description": "this variable is to be given as input for `criterion` function\n                                                of each array of mappings.",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "",
                "type": "Function|Null"
            },
            "class": "Mapping",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\PlainText.js",
            "line": 19,
            "description": "Returns the class name.  This property is introduced for compatibility with IE: i.e.\nin FF, `this.constructor` has `name` property that returns \"PlainText\", while in IE, there\nis no `name` property.",
            "itemtype": "property",
            "name": "className",
            "type": "{String}",
            "default": "\"PlainText\"",
            "access": "private",
            "tagname": "",
            "since": "0.0.2",
            "class": "PlainText",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\PlainText.js",
            "line": 31,
            "description": "Marker for instances of this class.",
            "itemtype": "property",
            "name": "tag",
            "type": "{String}",
            "access": "private",
            "tagname": "",
            "default": "\"text\"",
            "class": "PlainText",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\PlainText.js",
            "line": 41,
            "description": "{{#crossLink \"Text/tag:property\"}}tag{{/crossLink}} getter.",
            "itemtype": "method",
            "name": "getTag",
            "return": {
                "description": "",
                "type": "String"
            },
            "since": "0.0.4",
            "class": "PlainText",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\PlainText.js",
            "line": 51,
            "description": "{{#crossLink \"Text/className:property\"}}Class name{{/crossLink}} getter.",
            "itemtype": "method",
            "name": "getName",
            "return": {
                "description": "",
                "type": "String"
            },
            "since": "0.0.4",
            "class": "PlainText",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\PlainText.js",
            "line": 62,
            "description": "Content of the Text() instance.",
            "itemtype": "property",
            "name": "content",
            "type": "{String}",
            "access": "private",
            "tagname": "",
            "class": "PlainText",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\PlainText.js",
            "line": 70,
            "description": "Sets the `content` of the Text() instance. If the argument is neither string nor number, the `content` is set to empty string.",
            "itemtype": "method",
            "name": "setContent",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "String|Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "PlainText",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\PlainText.js",
            "line": 83,
            "description": "Returns content of the Text() instance.",
            "itemtype": "method",
            "name": "getContent",
            "return": {
                "description": "",
                "type": "String"
            },
            "type": "{String}",
            "class": "PlainText",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\PlainText.js",
            "line": 93,
            "description": "Returns html representation of the string which is nothing but `content` property itself.",
            "itemtype": "method",
            "name": "toHtml",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "PlainText",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\PlainText.js",
            "line": 103,
            "description": "Loads the instance of this class with info from the argument and returns `true` if the argument is\na [text node](https://developer.mozilla.org/en-US/docs/Web/API/Text) or a string. In this case\n{{#crossLink \"Text/content:property\"}}content{{/crossLink}} is set to the string content of the argument.\nOtherwise, `false` is returned.",
            "itemtype": "method",
            "name": "load",
            "params": [
                {
                    "name": "elem",
                    "description": "",
                    "type": "DOM.TEXT|String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "PlainText",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\PlainText.js",
            "line": 126,
            "description": "Returns `true` if the result of {{#crossLink \"PlainText/getContent:method\"}}getContent(){{/crossLink}}\nis an empty string, null or undefined (even if it should never happen).",
            "itemtype": "method",
            "name": "isEmpty",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "PlainText",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\PlainText.js",
            "line": 137,
            "description": "Returns an instance of  [DOM.Text](https://developer.mozilla.org/en-US/docs/Web/API/Text)\ncorresponding to the instance of this class.",
            "itemtype": "method",
            "name": "toNode",
            "return": {
                "description": "",
                "type": "DOM.Text"
            },
            "class": "PlainText",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\PlainText.js",
            "line": 149,
            "description": "Clones the target. Parses all attributes of the target. If the attribute responds to \"clone\"\nmethod, then assign the result of this method to the corresponding clone attribute. Otherwise,\nassign the attribute value to the clone attribute (potentially problematic for what is passed\nby reference and not by value, like arrays).\n{{#crossLink \"PlainText/content:property\"}}content{{/crossLink}} is a private variable, so in the\nclone it is fed by means of {{#crossLink \"PlainText/getContent:method\"}}getContent(){{/crossLink}}\nand {{#crossLink \"PlainText/setContent:method\"}}setContent(){{/crossLink}} methods.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "PlainText",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag.js",
            "line": 21,
            "description": "Html tag corresponding to this class.",
            "itemtype": "property",
            "name": "tag",
            "type": "String",
            "default": "null",
            "access": "private",
            "tagname": "",
            "since": "0.0.1",
            "class": "Tag",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag.js",
            "line": 30,
            "description": "Name of the current class.  This property is introduced for compatibility with IE: i.e.\nin FF, `this.constructor` has `tag` property that returns \"Tag\", while in IE, there\nis no `tag` property.\nEvery class that inherits from this one, should override this property.",
            "itemtype": "property",
            "name": "className",
            "type": "{String}",
            "default": "\"Tag\"",
            "access": "private",
            "tagname": "",
            "readonly": "",
            "since": "0.0.2",
            "class": "Tag",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag.js",
            "line": 44,
            "description": "{{#crossLink \"Tag/tag:property\"}}tag{{/crossLink}} getter.",
            "itemtype": "method",
            "name": "getTag",
            "return": {
                "description": "",
                "type": "String"
            },
            "since": "0.0.1",
            "class": "Tag",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag.js",
            "line": 55,
            "description": "{{#crossLink \"Tag/tag:property\"}}tag{{/crossLink}} setter. If the argument is\na string or a number, then if necessary, converts it into a string and performs\nassignment. If the argument is of any other type, no assignment occures.",
            "itemtype": "method",
            "name": "setTag",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String|Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "since": "0.0.1",
            "class": "Tag",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag.js",
            "line": 77,
            "description": "Attributes of the tag.",
            "itemtype": "property",
            "name": "attributes",
            "type": "{Attributes}",
            "default": "Attributes()",
            "access": "private",
            "tagname": "",
            "since": "0.0.4",
            "deprecated": true,
            "deprecationMessage": "Use _properties instead",
            "class": "Tag",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag.js",
            "line": 88,
            "description": "Represents all properties of the tag. Previously, it was split into Attributes and Styles.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_properties",
            "type": "{Properties}",
            "default": "Properties()",
            "since": "0.0.5",
            "class": "Tag",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag.js",
            "line": 98,
            "description": "Tag styles",
            "itemtype": "property",
            "name": "styles",
            "type": "{Styles}",
            "default": "Styles()",
            "access": "private",
            "tagname": "",
            "since": "0.0.4",
            "deprecated": true,
            "deprecationMessage": "Use _properties instead",
            "class": "Tag",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag.js",
            "line": 110,
            "description": "Content of the tag.",
            "itemtype": "property",
            "name": "content",
            "type": "{Content}",
            "default": "Content()",
            "access": "private",
            "tagname": "",
            "since": "0.0.4",
            "class": "Tag",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag.js",
            "line": 121,
            "description": "{{#crossLink \"Tag/attributes:property\"}}Attributes{{/crossLink}} setter.",
            "itemtype": "method",
            "name": "setAttributes",
            "params": [
                {
                    "name": "attr",
                    "description": "",
                    "type": "String|Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "since": "0.0.1",
            "deprecated": true,
            "deprecationMessage": "Use setProperties",
            "class": "Tag",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag.js",
            "line": 142,
            "description": "Sets {{#crossLink \"Tag/_properties:property\"}}properties{{/crossLink}} of the tag. If the argument is an instance\nof {{#crossLink \"Properties\"}}Properties{{/crossLink}}, its clone is assigned to private variable\n{{#crossLink \"Tag/_properties:property\"}}_properties{{/crossLink}}, otherwise the argument is passed to the\n{{#crossLink \"Properties\"}}Properties{{/crossLink}} constructor and newly created instance is assigned to\n{{#crossLink \"Tag/_properties:property\"}}_properties{{/crossLink}}.",
            "itemtype": "method",
            "name": "setProperties",
            "since": "0.0.5",
            "params": [
                {
                    "name": "prop",
                    "description": "",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Tag",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag.js",
            "line": 161,
            "description": "Returns clone of {{#crossLink \"Tag/_properties:property\"}}_properties{{/crossLink}}.",
            "itemtype": "method",
            "name": "getProperties",
            "since": "0.0.5",
            "return": {
                "description": "",
                "type": "Properties"
            },
            "class": "Tag",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag.js",
            "line": 172,
            "description": "Returns copy of {{#crossLink \"Tag/attributes:property\"}}Attributes{{/crossLink}}.",
            "itemtype": "method",
            "name": "getAttributes",
            "return": {
                "description": "",
                "type": "Attributes"
            },
            "since": "0.0.4",
            "deprecated": true,
            "deprecationMessage": "Use getProperties instead",
            "class": "Tag",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag.js",
            "line": 190,
            "description": "Sets `style` property inside {{#crossLink \"Tag/_properties:property\"}}_properties{{/crossLink}}. It is an alias\nfor {{#crossLink \"Properties/setStyles:method\"}}setStyles(){{/crossLink}} method.",
            "itemtype": "method",
            "name": "setStyles",
            "params": [
                {
                    "name": "stl",
                    "description": "",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "since": "0.0.4",
            "class": "Tag",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag.js",
            "line": 204,
            "description": "Gets `style` key of private variable {{#crossLink \"Tag/_properties:property\"}}_properties{{/crossLink}}.\nIt is an alias for {{#crossLink \"Properties/getStyles:method\"}}getStyles{{/crossLink}} method.",
            "itemtype": "method",
            "name": "getStyles",
            "return": {
                "description": "",
                "type": "Styles"
            },
            "since": "0.0.4",
            "class": "Tag",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag.js",
            "line": 217,
            "description": "Smart {{#crossLink \"Tag/content:property\"}}content{{/crossLink}} setter. If the argument is a\n{{#crossLink \"Content\"}}Content{{/crossLink}} instance, then\n{{#crossLink \"Tag/content:property\"}}content{{/crossLink}}\nis set to this value. Otherwise, the argument is passed to the constructor of new instance of\n{{#crossLink \"Content\"}}Content{{/crossLink}} and the result is assigned to\n{{#crossLink \"Tag/content:property\"}}content{{/crossLink}}\nwith provided and the ar",
            "itemtype": "method",
            "name": "setContent",
            "params": [
                {
                    "name": "cntn",
                    "description": "",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "since": "0.0.1",
            "class": "Tag",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag.js",
            "line": 239,
            "description": "Returns copy of {{#crossLink \"Tag/content:property\"}}Content{{/crossLink}}.",
            "itemtype": "method",
            "name": "getContent",
            "return": {
                "description": "",
                "type": "Content"
            },
            "since": "0.0.4",
            "class": "Tag",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag.js",
            "line": 249,
            "description": "{{#crossLink \"Tag/className:property\"}}Class name{{/crossLink}} getter.",
            "itemtype": "method",
            "name": "getName",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Tag",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag.js",
            "line": 258,
            "description": "{{#crossLink \"Tag/className:property\"}}Class name{{/crossLink}} setter. Use it with caution. This\nmethod is intended to be used in classes that inherite from this one in order to set the name attribute.\n(If only were there a late binding ...)",
            "itemtype": "method",
            "name": "setName",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Tag",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag.js",
            "line": 274,
            "description": "Appends style to the instance. Alias for {{#crossLink \"Styles/appendStyle:method\"}}Styles::appendStyle{{/crossLink}}.",
            "itemtype": "method",
            "name": "appendStyle",
            "params": [
                {
                    "name": "newStyle",
                    "description": "style to be appended",
                    "type": "Styles|Obj"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "since": "0.0.1",
            "class": "Tag",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag.js",
            "line": 287,
            "description": "Appends style to the instance. Alias for\n{{#crossLink \"Attributes/appendAttributes:method\"}}Attributes::appendAttributes{{/crossLink}}.",
            "itemtype": "method",
            "name": "appendAttributes",
            "params": [
                {
                    "name": "attr",
                    "description": "attributes to be appended",
                    "type": "Obj"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "since": "0.0.1",
            "deprecated": true,
            "deprecationMessage": "Use appendProperties instead",
            "class": "Tag",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag.js",
            "line": 303,
            "description": "Appends properties to {{#crossLink \"Tag/_properties:property\"}}_properties{{/crossLink}}\nof the instance. Alias for\n{{#crossLink \"Properties/appendProperty:method\"}}appendProperty(){{/crossLink}} method.",
            "itemtype": "method",
            "name": "appendProperties",
            "params": [
                {
                    "name": "prop",
                    "description": "properties to be appended",
                    "type": "Obj"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "since": "0.0.5",
            "class": "Tag",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag.js",
            "line": 317,
            "description": "Appends style `stl` to element at position `pos.` It is an alias for the method\n{{#crossLink \"Content/appendStyleToElemAt:method\"}}appendStyleToElemAt{{/crossLink}}.",
            "itemtype": "method",
            "name": "appendStyleToElemAt",
            "params": [
                {
                    "name": "pos",
                    "description": "",
                    "type": "Any"
                },
                {
                    "name": "stl",
                    "description": "",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "since": "0.0.1",
            "class": "Tag",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag.js",
            "line": 331,
            "description": "Retrieves requested property from {{#crossLink \"Tag/styles:property\"}}styles{{/crossLink}}\nproperty of the current object.",
            "itemtype": "method",
            "name": "getStyleProperty",
            "params": [
                {
                    "name": "prop",
                    "description": "property name to be retrieved from the styles",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Any"
            },
            "since": "0.0.4",
            "class": "Tag",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag.js",
            "line": 347,
            "description": "Imposes requested property value in {{#crossLink \"Tag/styles:property\"}}styles{{/crossLink}}\nproperty of the current object.",
            "itemtype": "method",
            "name": "setStyleProperty",
            "params": [
                {
                    "name": "key",
                    "description": "property name to be set",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "property value",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Any"
            },
            "since": "0.0.4",
            "class": "Tag",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag.js",
            "line": 361,
            "description": "Retrieves value of `prop` from {{#crossLink \"Tag/_properties:property\"}}_properties{{/crossLink}}\nof the current object.",
            "itemtype": "method",
            "name": "getProperty",
            "params": [
                {
                    "name": "prop",
                    "description": "property name to be retrieved from the attributes",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Any"
            },
            "since": "0.0.5",
            "class": "Tag",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag.js",
            "line": 375,
            "description": "Sets the value of `key` of {{#crossLink \"Tag/_properties:property\"}}_properties{{/crossLink}}\nto `value`. Alias for {{#crossLink \"Properties/setProperty:property\"}}setProperty{{/crossLink}}",
            "itemtype": "method",
            "name": "setProperty",
            "params": [
                {
                    "name": "key",
                    "description": "property name to be set",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "property value",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "since": "0.0.5",
            "class": "Tag",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag.js",
            "line": 389,
            "description": "Returns `true` if {{#crossLink \"Tag/_properties:property\"}}_properties{{/crossLink}}\ncontains `key` and `false` otherwise. Alias for\n{{#crossLink \"Properties/hasProperty:method\"}}hasProperty{{/crossLink}}",
            "itemtype": "method",
            "name": "hasProperty",
            "params": [
                {
                    "name": "key",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Tag",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag.js",
            "line": 402,
            "description": "Returns `true` if {{#crossLink \"Tag/styles:property\"}}styles{{/crossLink}}\ncontains attribute `key` and `false` otherwise.",
            "itemtype": "method",
            "name": "hasStyleProperty",
            "params": [
                {
                    "name": "key",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Tag",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag.js",
            "line": 414,
            "description": "Drops `key` from {{#crossLink \"Tag/_properties:property\"}}_properties{{/crossLink}}\nof the current object and returns a value of the key.",
            "itemtype": "method",
            "name": "dropProperty",
            "params": [
                {
                    "name": "key",
                    "description": "property name to be retrieved from the attributes",
                    "type": "String"
                }
            ],
            "return": {
                "description": "value of the key in the attributes",
                "type": "Any"
            },
            "since": "0.0.5",
            "class": "Tag",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag.js",
            "line": 428,
            "description": "Drops requested property from {{#crossLink \"Tag/styles:property\"}}styles{{/crossLink}}\nproperty of the current object.",
            "itemtype": "method",
            "name": "dropStyleProperty",
            "params": [
                {
                    "name": "key",
                    "description": "property name to be retrieved from the styles",
                    "type": "String"
                }
            ],
            "return": {
                "description": "value of the key in the styles",
                "type": "Any"
            },
            "since": "0.0.4",
            "class": "Tag",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag.js",
            "line": 442,
            "description": "Calls {{#crossLink \"Properties/setWidth:method\"}}setWidth(){{/crossLink}} methods to set the widths.",
            "itemtype": "method",
            "name": "setWidth",
            "params": [
                {
                    "name": "w",
                    "description": "",
                    "type": "String|Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "since": "0.0.1",
            "class": "Tag",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag.js",
            "line": 455,
            "description": "Retrieves `width` attribute of {{#crossLink \"Tag/styles:property\"}}styles{{/crossLink}} property.",
            "itemtype": "method",
            "name": "getWidth",
            "return": {
                "description": "",
                "type": "Mixed"
            },
            "since": "0.0.4",
            "class": "Tag",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag.js",
            "line": 467,
            "description": "Returns absolute value of `width` attribute of {{#crossLink \"Tag/styles:property\"}}styles{{/crossLink}}\nproperty without unit of measurement. If `width` is not defined or defined but its absolute value\ncan not be found, then `undefined` is returned.",
            "itemtype": "method",
            "name": "getWidthValue",
            "return": {
                "description": "width without unit of measurement",
                "type": "Number|Null"
            },
            "class": "Tag",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag.js",
            "line": 485,
            "description": "Returns copy of {{#crossLink \"Content/elements\"}}elements{{/crossLink}} of\n{{#crossLink \"Tag/content\"}}content{{/crossLink}}.",
            "itemtype": "method",
            "name": "getElements",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "Tag",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag.js",
            "line": 499,
            "description": "Imposes {{#crossLink \"Content/elements:property\"}}elements{{/crossLink}} of\n{{#crossLink \"Tag/content:property\"}}content{{/crossLink}}. If the argument\nis not array, not assignment occures.",
            "itemtype": "method",
            "name": "setElements",
            "params": [
                {
                    "name": "arr",
                    "description": "",
                    "type": "Array"
                }
            ],
            "class": "Tag",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag.js",
            "line": 512,
            "description": "Gets the element stored in {{#crossLink \"Tag/content:property\"}}content{{/crossLink}}. Delegates its\nfunctionality to class {{#crossLink \"Content\"}}Content{{/crossLink}}.",
            "itemtype": "method",
            "name": "getElem",
            "params": [
                {
                    "name": "pos",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Any"
            },
            "since": "0.0.1",
            "class": "Tag",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag.js",
            "line": 524,
            "description": "Returns copy of the first element of {{#crossLink \"Tag/content:property\"}}content{{/crossLink}}.\nAlias for {{#crossLink \"Content/getFirst:method\"}}Content::getFirst{{/crossLink}}.",
            "itemtype": "method",
            "name": "getFirst",
            "return": {
                "description": "",
                "type": "Any"
            },
            "since": "0.0.1",
            "class": "Tag",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag.js",
            "line": 535,
            "description": "Returns copy of the first element of {{#crossLink \"Tag/content:property\"}}content{{/crossLink}}.\nAlias for {{#crossLink \"Content/getLast:method\"}}Content::getlast{{/crossLink}}.",
            "itemtype": "method",
            "name": "getLast",
            "return": {
                "description": "",
                "type": "Any"
            },
            "since": "0.0.1",
            "class": "Tag",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag.js",
            "line": 546,
            "description": "Inserts an element into given position. Delegates its functionality to the class\n{{#crossLink \"Content\"}}Content{{/crossLink}}.",
            "itemtype": "method",
            "name": "insertElemAt",
            "params": [
                {
                    "name": "pos",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "elem",
                    "description": "",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "since": "0.0.1",
            "class": "Tag",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag.js",
            "line": 559,
            "description": "Appends the element to the content of the list item. Delegates to Content::appendElem().",
            "itemtype": "method",
            "name": "appendElem",
            "params": [
                {
                    "name": "elem",
                    "description": "",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "since": "0.0.1",
            "class": "Tag",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag.js",
            "line": 570,
            "description": "Returns the number of elements inside its content. Delegates to Content::length().",
            "itemtype": "method",
            "name": "length",
            "return": {
                "description": "",
                "type": "Number"
            },
            "since": "0.0.1",
            "class": "Tag",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag.js",
            "line": 580,
            "description": "Deletes element from \"content\" property. Delegates its functionalality to\n{{#crossLink \"Content/dropElemAt:method}}dropElemAt{{/crossLink}}.",
            "itemtype": "method",
            "name": "dropElemAt",
            "params": [
                {
                    "name": "pos",
                    "description": "intented to be an integer, but no check is performed",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "",
                "type": "Any"
            },
            "since": "0.0.1",
            "class": "Tag",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag.js",
            "line": 592,
            "description": "Deletes first element from \"content\" property. Delegates its functionalality to\n{{#crossLink \"Content/dropFirst:method\"}}Content::dropFirst(){{/crossLink}}.",
            "itemtype": "method",
            "name": "dropFirst",
            "return": {
                "description": "",
                "type": "Void"
            },
            "since": "0.0.1",
            "class": "Tag",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag.js",
            "line": 603,
            "description": "Deletes last element from \"content\" property. Delegates its functionalality to\n{{#crossLink \"Content/dropLast:method\"}}Content::dropLast(){{/crossLink}}.",
            "itemtype": "method",
            "name": "dropLast",
            "return": {
                "description": "",
                "type": "Void"
            },
            "since": "0.0.1",
            "class": "Tag",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag.js",
            "line": 615,
            "description": "If {{#crossLink \"Tag/tag:property\"}}tag{{/crossLink}} is a non-empty string, then it is\nreturned a string with which html representaion of current instance starts,\ni.e.: `<div class=\"media\" style=\"color: red; width: 73%\">`.",
            "itemtype": "method",
            "name": "openingTag",
            "return": {
                "description": "",
                "type": "String|Null"
            },
            "class": "Tag",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag.js",
            "line": 635,
            "description": "Returns html closing tag, i.e. `</span>`.",
            "itemtype": "method",
            "name": "closingTag",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Tag",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag.js",
            "line": 647,
            "description": "Gives html representation of the instance.\nIf {{#crossLink \"Tag/tag:property\"}}tag{{/crossLink}} is not a non-empty string, just html comment is generated.",
            "itemtype": "method",
            "name": "toHtml",
            "return": {
                "description": "",
                "type": "String"
            },
            "since": "0.0.1",
            "class": "Tag",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag.js",
            "line": 668,
            "description": "Generates plain text representation of the tag content. Calls {{#crossLink \"Content/toText:method\"}}Content::toText(){{/crossLink}}.",
            "itemtype": "method",
            "name": "toText",
            "return": {
                "description": "",
                "type": "String"
            },
            "since": "0.0.1",
            "class": "Tag",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag.js",
            "line": 678,
            "description": "Returns true, if the tag is empty. Returns false otherwise.<br />\nThe tag is considered empty if `isEmpty()` method for its {{#crossLink \"Tag/attributes:property\"}}attributes{{/crossLink}}\nand {{#crossLink \"Tag/styles:property\"}}styles{{/crossLink}} and {{#crossLink \"Content\"}}content{{/crossLink}} returns true.",
            "itemtype": "method",
            "name": "isEmpty",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "since": "0.0.1",
            "class": "Tag",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag.js",
            "line": 690,
            "description": "Empties {{#crossLink \"Tag/content:property\"}}content{{/crossLink}}.",
            "itemtype": "method",
            "name": "flushContent",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Tag",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag.js",
            "line": 699,
            "description": "Trims the content. Calls method {{#crossLink \"Content/trim:method\"}}Content::trim(){{/crossLink}} on the\n{{#crossLink \"Tag/content:property\"}}content{{/crossLink}} property.",
            "itemtype": "method",
            "name": "trim",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Tag",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag.js",
            "line": 710,
            "description": "Appends element to the content. It is alias for the\n{{#crossLink \"Content/appendElemIfNotEmpty:method\"}}Content::appendElemIfNotEmpty(arg){{/crossLink}}",
            "itemtype": "method",
            "name": "appendElemIfNotEmpty",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Tag",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag.js",
            "line": 722,
            "description": "Creates a clone of the target. If the target has a `className` attribute corresponding to\nexisiting class, then that class instance is to be returned. Otherwise a {{#crossLink \"Tag\"}}Tag{{/crossLink}}\ninstance is returned. The method parses all attributes of the target and if the attribute\nresponds to a \"clone\" method, then calls this method and assigns its result to the corresponding\nclone attribute. Otherwise, assign target attribute value to the clone attribute (there might be\na potential problem with what is passed by reference and not by values, i.e. array). But among\n{{#crossLink \"Tag\"}}Tag{{/crossLink}} properties there are no array-valued ones.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Tag",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag.js",
            "line": 750,
            "description": "Populates the following properties of the target object\n<ol><li>\n{{#crossLink \"Tag/tag:property\"}}tag{{/crossLink}}\n</li><li>\n{{#crossLink \"Tag/_properties:property\"}}_properties{{/crossLink}} by calling\n{{#crossLink \"Properties/load:method\"}}load(){{/crossLink}} method.\n</li><li>\n{{#crossLink \"Tag/content:property\"}}content{{/crossLink}} by calling\n{{#crossLink \"Content/load:method\"}}Content::load(){{/crossLink}} method.\n</li></ol>\nfrom the argument which must be an instance of\n[Element](https://developer.mozilla.org/en-US/docs/Web/API/Element) class. Returns `true` if\nthe argument is of required type and the above mentioned  `load` methods return `true`. Otherwise,\n`false` is returned.<br />\nNB: DOM.Element.attributes has the form `{1: {tag: \"width\", value:\"100\", ...}, 2: {tag: \"color\", value:\"black\", ...}, ...}`",
            "itemtype": "method",
            "name": "load",
            "params": [
                {
                    "name": "elem",
                    "description": "origin from which the element properties are to be loaded",
                    "type": "Element"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Tag",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag.js",
            "line": 795,
            "description": "Returns [DOM.Element](https://developer.mozilla.org/en-US/docs/Web/API/Element)  object corresponding to the current object.\nCalls methods {{#crossLink \"Attributes/decorateElement:method\"}}Attributes::decorateElement(){{/crossLink}} to apply attributes,\n{{#crossLink \"Style/decorateElement:method\"}}Style::decorateElement(){{/crossLink}} to apply styles and\n{{#crossLink \"Content/stickTo:method\"}}Content::stickTo(){{/crossLink}} to append elements from the\n{{#crossLink \"Tag/content:property\"}}Tag::content{{/crossLink}}.",
            "itemtype": "method",
            "name": "toNode",
            "return": {
                "description": "",
                "type": "DOM.Element"
            },
            "class": "Tag",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\HtmlElements\\Tag.js",
            "line": 812,
            "description": "Erases current value of atttribute \"title\" and sets it to `str` if `str` is a non-empty string.",
            "itemtype": "method",
            "name": "setTitle",
            "params": [
                {
                    "name": "str",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "since": "0.0.4",
            "class": "Tag",
            "module": "HtmlElements"
        },
        {
            "file": "js\\classes\\Properties\\to_delete_Attributes\\to_delete_LinkAttributes.js",
            "line": 19,
            "description": "Re-set private properties defined in parent class {{#crossLink \"Properties\"}}Properties{{/crossLink}}:\n<ol><li>\n{{#crossLink \"Properties/className:property\"}}className{{/crossLink}} to be \"LinkAttributes\"\n</li></ol>",
            "itemtype": "method",
            "name": "constructor",
            "class": "LinkAttributes",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\Properties\\to_delete_Attributes\\to_delete_LinkAttributes.js",
            "line": 28,
            "description": "Object with key-values for link attributes. They should be set if they were not set before.",
            "itemtype": "property",
            "name": "linkAttrCore",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "LinkAttributes",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\Properties\\to_delete_Attributes\\to_delete_LinkAttributes.js",
            "line": 36,
            "description": "Href getter.",
            "itemtype": "method",
            "name": "getHref",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "LinkAttributes",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\Properties\\to_delete_Attributes\\to_delete_LinkAttributes.js",
            "line": 45,
            "description": "Href setter. Native javascript function `encodeURI()` will be applied to the argument.",
            "itemtype": "method",
            "name": "setHref",
            "params": [
                {
                    "name": "url",
                    "description": "`encodeURI()` is to be applied when assigning to this.url",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "LinkAttributes",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\Properties\\to_delete_Attributes\\to_delete_TableAttributes.js",
            "line": 17,
            "description": "Re-set private properties defined in parent class {{#crossLink \"Properties\"}}Properties{{/crossLink}}:\n<ol><li>\n{{#crossLink \"Properties/className:property\"}}className{{/crossLink}} to be \"TableAttributes\"\n</li></ol>",
            "itemtype": "method",
            "name": "constructor",
            "class": "TableAttributes",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\Properties\\to_delete_Attributes\\to_delete_TableAttributes.js",
            "line": 27,
            "description": "Object with key-values for table attributes. They should be set if they were not set before.",
            "itemtype": "property",
            "name": "tableAttrCore",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "TableAttributes",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\Properties\\to_delete_Styles\\to_delete_ImageStyles.js",
            "line": 17,
            "description": "Re-set private properties defined in parent class {{#crossLink \"Styles\"}}Styles{{/crossLink}}:\n<ol><li>\n{{#crossLink \"Properties/className:property\"}}className{{/crossLink}} to be \"ImageStyles\"\n</li></ol>",
            "itemtype": "method",
            "name": "constructor",
            "class": "ImageStyle",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\Properties\\to_delete_Styles\\to_delete_ImageStyles.js",
            "line": 27,
            "description": "Object with key-values for images. They should be set if they were not set before. <br/>",
            "itemtype": "property",
            "name": "imageStyleCore",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "ImageStyle",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\Properties\\to_delete_Styles\\to_delete_LinkStyles.js",
            "line": 19,
            "description": "Re-set private properties defined in parent class {{#crossLink \"Styles\"}}Styles{{/crossLink}}:\n<ol><li>\n{{#crossLink \"Properties/className:property\"}}className{{/crossLink}} to be \"LinkStyles\"\n</li></ol>",
            "itemtype": "method",
            "name": "constructor",
            "class": "LinkStyles",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\Properties\\to_delete_Styles\\to_delete_LinkStyles.js",
            "line": 28,
            "description": "Object with key-values for hyperlinks. They should be set if they were not set before.",
            "itemtype": "property",
            "name": "linkStyleCore",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "LinkStyles",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\Properties\\to_delete_Styles\\to_delete_ListItemStyles.js",
            "line": 17,
            "description": "Re-set private properties defined in parent class {{#crossLink \"Styles\"}}Styles{{/crossLink}}:\n<ol><li>\n{{#crossLink \"Properties/className:property\"}}className{{/crossLink}} to be \"ListItemStyles\"\n</li></ol>",
            "itemtype": "method",
            "name": "constructor",
            "class": "ListItemStyles",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\Properties\\to_delete_Styles\\to_delete_ListItemStyles.js",
            "line": 27,
            "description": "Object with key-values for lists. They should be set if they were not set before. <br/>",
            "itemtype": "property",
            "name": "listItemStyleCore",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "ListItemStyles",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\Properties\\to_delete_Styles\\to_delete_ListStyles.js",
            "line": 18,
            "description": "Re-set private properties defined in parent class {{#crossLink \"Styles\"}}Styles{{/crossLink}}:\n<ol><li>\n{{#crossLink \"Properties/className:property\"}}className{{/crossLink}} to be \"ListStyles\"\n</li></ol>",
            "itemtype": "method",
            "name": "constructor",
            "class": "ListStyles",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\Properties\\to_delete_Styles\\to_delete_ListStyles.js",
            "line": 29,
            "description": "Object with key-values for lists. They should be set if they were not set before. <br/>",
            "itemtype": "property",
            "name": "listStyleCore",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "ListStyles",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\Properties\\to_delete_Styles\\to_delete_TableCellStyles.js",
            "line": 18,
            "description": "Re-set private properties defined in parent class {{#crossLink \"Styles\"}}Styles{{/crossLink}}:\n<ol><li>\n{{#crossLink \"Properties/className:property\"}}className{{/crossLink}} to be \"TableCellStyles\"\n</li></ol>",
            "itemtype": "method",
            "name": "constructor",
            "class": "TableCellStyles",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\Properties\\to_delete_Styles\\to_delete_TableCellStyles.js",
            "line": 28,
            "description": "Object with key-values for table cells. They should be set if they were not set before. <br/>\nNB: Gmail removes color tags corresponding to black color, so use `#000001` instead of `#000000`.",
            "itemtype": "property",
            "name": "tableCellStyleCore",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "TableCellStyles",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\Properties\\to_delete_Styles\\to_delete_TableRowStyles.js",
            "line": 17,
            "description": "Re-set private properties defined in parent class {{#crossLink \"Styles\"}}Styles{{/crossLink}}:\n<ol><li>\n{{#crossLink \"Properties/className:property\"}}className{{/crossLink}} to be \"TableRowStyles\"\n</li></ol>",
            "itemtype": "method",
            "name": "constructor",
            "class": "TableRowStyles",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\Properties\\to_delete_Styles\\to_delete_TableRowStyles.js",
            "line": 26,
            "description": "Object with key-values for table rows. They should be set if they were not set before.",
            "itemtype": "property",
            "name": "tableRowStyleCore",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "TableRowStyles",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\Properties\\to_delete_Styles\\to_delete_TableStyles.js",
            "line": 18,
            "description": "Re-set private properties defined in parent class {{#crossLink \"Styles\"}}Styles{{/crossLink}}:\n<ol><li>\n{{#crossLink \"Properties/className:property\"}}className{{/crossLink}} to be \"TableStyles\"\n</li></ol>",
            "itemtype": "method",
            "name": "constructor",
            "class": "TableStyles",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\Properties\\to_delete_Styles\\to_delete_TableStyles.js",
            "line": 29,
            "description": "Object with key-values for tables. They should be set if they were not set before.",
            "itemtype": "property",
            "name": "tableStyleCore",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "TableStyles",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\Properties\\Attributes.js",
            "line": 18,
            "description": "Re-set private properties defined in parent class {{#crossLink \"Properties\"}}Properties{{/crossLink}}:\n<ol><li>\n{{#crossLink \"Properties/className:property\"}}className{{/crossLink}} to be \"Attributes\"\n</li></ol>",
            "itemtype": "method",
            "name": "constructor",
            "class": "Attributes",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\Properties\\Attributes.js",
            "line": 29,
            "description": "Generates string representation of this object (as html attributes).\nIt takes into consideration only key-valued pairs of\n{{#crossLink \"Properties/core:property\"}}core{{/crossLink}} defined in\n{{#crossLink \"Properties\"}}Property{{/crossLink}} class.\n{{#crossLink \"Attributes/className:property\"}}className{{/crossLink}}.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a union of substrings; each substring is of this format: 'attribute=\"value\"',\n                        between the substrings there is a separator ' ' (space).",
                "type": "String"
            },
            "example": [
                "    class=\"example\" id=\"tag\""
            ],
            "class": "Attributes",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\Properties\\Attributes.js",
            "line": 50,
            "description": "Loads attributes from the argument that is supposed to be of a type\n[NamedNodeMap](http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#ID-1780488922).\nNevertheless, it is sufficient that `attr` be a collection of objects with `name` and `value` properties.\nIf among the attributes there is node with name \"style\", it gets ignored. If it is attempted to override\na method and not a property,  then `false` is returned.",
            "itemtype": "method",
            "name": "load",
            "params": [
                {
                    "name": "attr",
                    "description": "instance of NamedNodeMap",
                    "type": "NamedNodeMap"
                }
            ],
            "return": {
                "description": "true, if the properties are loaded, false otherwise",
                "type": "Boolean"
            },
            "deprecated": true,
            "deprecationMessage": "Use Property::load method",
            "class": "Attributes",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\Properties\\Attributes.js",
            "line": 88,
            "description": "Applies the attributes on the argument. The argument is supposed to be an instance of\n[DOM.Element](https://developer.mozilla.org/en-US/docs/Web/API/element). In fact,\nit is used only [setAttribute()](https://developer.mozilla.org/en-US/docs/Web/API/Element.setAttribute)\nmethod of that instance.",
            "itemtype": "method",
            "name": "decorateElement",
            "params": [
                {
                    "name": "elem",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Attributes",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\Properties\\CellProperties.js",
            "line": 18,
            "description": "Re-set private properties defined in parent class {{#crossLink \"Properties\"}}Properties{{/crossLink}}:\n<ol><li>\n{{#crossLink \"Properties/className:property\"}}className{{/crossLink}} to be \"CellProperties\"\n</li></ol>",
            "itemtype": "method",
            "name": "constructor",
            "class": "CellProperties",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\Properties\\CellProperties.js",
            "line": 27,
            "description": "Object with key-value pairs for image style. To be set, if corresponding key is not set.\n<pre>{'border-style': 'none', 'width': 0, 'max-width': 0, 'min-width': 0, 'padding': 0,\n'margin': 0, 'vertical-align': 'top', 'color': '#000001', 'text-align': 'justify'};</pre>",
            "itemtype": "property",
            "name": "imageStyleCore",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "CellProperties",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\Properties\\ImageProperties.js",
            "line": 18,
            "description": "Re-set private properties defined in parent class {{#crossLink \"Properties\"}}Properties{{/crossLink}}:\n<ol><li>\n{{#crossLink \"Properties/className:property\"}}className{{/crossLink}} to be \"ImageProperties\"\n</li></ol>",
            "itemtype": "method",
            "name": "constructor",
            "class": "ImageProperties",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\Properties\\ImageProperties.js",
            "line": 28,
            "description": "Default key-value pairs for image attributes.\n<pre>{'src': null, 'width': 0, 'height': 0, 'title': ''}</pre>",
            "itemtype": "property",
            "name": "imageCore",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "ImageProperties",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\Properties\\ImageProperties.js",
            "line": 42,
            "description": "Object with key-value pairs for image style. To be set, if corresponding key is not set.\n<pre>{'border-style': 'none', 'width': 0, 'padding': 0, 'margin': 0, 'height': 0}</pre>",
            "itemtype": "property",
            "name": "imageStyleCore",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "ImageProperties",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\Properties\\LinkProperties.js",
            "line": 18,
            "description": "Re-set private properties defined in parent class {{#crossLink \"Properties\"}}Properties{{/crossLink}}:\n<ol><li>\n{{#crossLink \"Properties/className:property\"}}className{{/crossLink}} to be \"LinkProperties\"\n</li></ol>",
            "itemtype": "method",
            "name": "constructor",
            "class": "LinkProperties",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\Properties\\LinkProperties.js",
            "line": 28,
            "description": "Default key-value pairs for link attributes.\n<pre>{'href': '', 'target': '_blank', 'title': ''}</pre>",
            "itemtype": "property",
            "name": "linkCore",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "LinkProperties",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\Properties\\LinkProperties.js",
            "line": 42,
            "description": "Object with key-value pairs for link style. To be set, if corresponding key is not set.\n<pre>{'text-decoration': 'underline', 'font-weight': 'normal', 'padding': 0, 'margin': 0}</pre>",
            "itemtype": "property",
            "name": "linkStyleCore",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "LinkProperties",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\Properties\\ListItemProperties.js",
            "line": 18,
            "description": "Re-set private properties defined in parent class {{#crossLink \"Styles\"}}Styles{{/crossLink}}:\n<ol><li>\n{{#crossLink \"Properties/className:property\"}}className{{/crossLink}} to be \"ListItemProperties\"\n</li></ol>",
            "itemtype": "method",
            "name": "constructor",
            "class": "ListItemProperties",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\Properties\\ListItemProperties.js",
            "line": 28,
            "description": "Object with key-value pairs for styles of list items. To be set, if corresponding key is not set.\n<pre>{'padding': 0, 'margin': 0, 'font-size': 12, 'font-weight': 'normal', 'color': '#000001'}</pre>",
            "itemtype": "property",
            "name": "listItemStyleCore",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "ListItemProperties",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\Properties\\ListProperties.js",
            "line": 18,
            "description": "Re-set private properties defined in parent class {{#crossLink \"Styles\"}}Styles{{/crossLink}}:\n<ol><li>\n{{#crossLink \"Properties/className:property\"}}className{{/crossLink}} to be \"ListProperties\"\n</li></ol>",
            "itemtype": "method",
            "name": "constructor",
            "class": "ListProperties",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\Properties\\ListProperties.js",
            "line": 27,
            "description": "Object with key-value pairs for link style. To be set, if corresponding key is not set.\n<pre>{'padding': 0, 'margin-left': 40, 'margin-right': 0, 'margin-top': 0, 'margin-bottom': 0}</pre>",
            "itemtype": "property",
            "name": "linkStyleCore",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "ListProperties",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\Properties\\RowProperties.js",
            "line": 18,
            "description": "Re-set private properties defined in parent class {{#crossLink \"Properties\"}}Properties{{/crossLink}}:\n<ol><li>\n{{#crossLink \"Properties/className:property\"}}className{{/crossLink}} to be \"RowProperties\"\n</li></ol>",
            "itemtype": "method",
            "name": "constructor",
            "class": "RowProperties",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\Properties\\RowProperties.js",
            "line": 28,
            "description": "Object with key-value pairs for link style. To be set, if corresponding key is not set.\n<pre>{'border-style': 'none', 'width': 0, 'max-width': 0, 'min-width': 0, 'padding': 0, 'margin': 0}</pre>",
            "itemtype": "property",
            "name": "rowStyleCore",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "RowProperties",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\Properties\\Styles.js",
            "line": 18,
            "description": "Re-set private properties defined in parent class {{#crossLink \"Properties\"}}Properties{{/crossLink}}:\n<ol><li>\n{{#crossLink \"Properties/className:property\"}}className{{/crossLink}} to be \"Styles\"\n</li></ol>",
            "itemtype": "method",
            "name": "constructor",
            "class": "Styles",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\Properties\\Styles.js",
            "line": 27,
            "description": "It is just an alias for {{#crossLink \"Styles/toBareString:method\"}}toBareString(){{/crossLink}} method.",
            "itemtype": "method",
            "name": "toString",
            "params": [
                {
                    "name": "unit",
                    "description": "measurement unit to be added to the numerical attribute values.",
                    "type": "String|null"
                }
            ],
            "return": {
                "description": "String        empty string or string of this format: `style=\"attribute: value; ...\"`,",
                "type": "String"
            },
            "class": "Styles",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\Properties\\Styles.js",
            "line": 40,
            "description": "Returns \"bare\" string of key-values pairs of style properties, i.e. `\"width: 10px; color: #010101\"`.\nIt takes into consideration {{#crossLink \"Properties/core:property\"}}core{{/crossLink}} keys only.\nIf value corresponding to the key is a number,  then the measurement unit will be appended.\nIf {{#crossLink \"Properties/core:property\"}}core{{/crossLink}} is empty, then empty string is returned.",
            "itemtype": "method",
            "name": "toBareString",
            "params": [
                {
                    "name": "unit",
                    "description": "measurement unit to be added to the numerical attribute values.\n                                                   By default, it is set to 'px'.",
                    "type": "String|null"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Styles",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\Properties\\Styles.js",
            "line": 74,
            "description": "Appends style. Alias for the parent method\n{{#crossLink \"Properties/appendProperty:method\"}}Properties::appendProperty(){{/crossLink}}",
            "itemtype": "method",
            "name": "appendStyle",
            "params": [
                {
                    "name": "stl",
                    "description": "it will be passed to the parent method",
                    "type": "Object|null"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Styles",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\Properties\\Styles.js",
            "line": 86,
            "description": "Imposes the width, min-width and max-width.",
            "itemtype": "method",
            "name": "setWidth",
            "params": [
                {
                    "name": "w",
                    "description": "value of width.",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Styles",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\Properties\\Styles.js",
            "line": 98,
            "description": "Returns object {width: ..., color: ..., style: ...} describing border. If the Style has no Properties\n'border-style', then 'none' will be used. If the Style has no 'border-width', then zero will be used.\nIf the Style has no Properties 'border-color', then it will not be set.",
            "itemtype": "method",
            "name": "getBorderInfo",
            "return": {
                "description": "object of the form {'width': ..., 'color': ..., 'style': ...}",
                "type": "Object"
            },
            "deprecated": true,
            "deprecationMessage": "Definition of the method is moved to the parent class",
            "class": "Styles",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\Properties\\Styles.js",
            "line": 116,
            "description": "Loads style Properties from the argument that is supposed to be either of type\n[NamedNodeMap](http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#ID-1780488922)\n(or, at least, respond to a `getNamedItem()` method) or a string. If not of these types, `false` is returned.\nIn case the argument is a [NamedNodeMap](http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#ID-1780488922)\ninstance, its `style` item is picked up and transformed into a string.",
            "itemtype": "method",
            "name": "load",
            "params": [
                {
                    "name": "attr",
                    "description": "instance of NamedNodeMap or a",
                    "type": "String|NamedNodeMap"
                }
            ],
            "return": {
                "description": "true, if the properties are loaded, false otherwise",
                "type": "Boolean"
            },
            "default": "Use Properties::load method",
            "class": "Styles",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\Properties\\Styles.js",
            "line": 149,
            "description": "Applies the attributes on the argument. The argument is supposed to be an instance of\n[DOM.Element](https://developer.mozilla.org/en-US/docs/Web/API/element). In fact,\nit is used only [setAttribute()](https://developer.mozilla.org/en-US/docs/Web/API/Element.setAttribute)\nmethod of that instance.",
            "itemtype": "method",
            "name": "decorateElement",
            "params": [
                {
                    "name": "elem",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Styles",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\Properties\\TableProperties.js",
            "line": 18,
            "description": "Re-set private properties defined in parent class {{#crossLink \"Properties\"}}Properties{{/crossLink}}:\n<ol><li>\n{{#crossLink \"Properties/className:property\"}}className{{/crossLink}} to be \"TableProperties\"\n</li></ol>",
            "itemtype": "method",
            "name": "constructor",
            "class": "TableProperties",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\Properties\\TableProperties.js",
            "line": 28,
            "description": "Default key-value pairs for image attributes.\n<pre>{'cellpadding': 0, 'cellspacing': 0}</pre>",
            "itemtype": "property",
            "name": "tableCore",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "TableProperties",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\Properties\\TableProperties.js",
            "line": 42,
            "description": "Object with key-value pairs for image style. To be set, if corresponding key is not set.\n<pre>{'border-style': 'none', 'padding': 0, 'margin': 0, 'width': 0, 'max-width': 0,  'min-width': 0,\n'border-spacing': '0px 0px', 'font-size': 13, 'text-align': 'justify', 'font-family': 'Arial, sans-serif'}</pre>",
            "itemtype": "property",
            "name": "tableStyleCore",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "TableProperties",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\CKHelper.js",
            "line": 14,
            "description": "Finds the nearest ascendant of the \"elem\" for which \"filter\" returns true",
            "itemtype": "method",
            "name": "findAscendant",
            "params": [
                {
                    "name": "elem",
                    "description": "",
                    "type": "CKEDITOR.dom.element"
                },
                {
                    "name": "filter",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "CKEDITOR.dom.element|null"
            },
            "class": "CKHelper",
            "module": "Helper"
        },
        {
            "file": "js\\classes\\CKHelper.js",
            "line": 34,
            "description": "Drops inline property named `propName` from DOM element",
            "itemtype": "method",
            "name": "dropInlineStyleAttr",
            "params": [
                {
                    "name": "element",
                    "description": "an inline attribute of  this element will be dropped.\n                                                   The element should respond to jQuery \"attr\" method.",
                    "type": "Object"
                },
                {
                    "name": "attrName",
                    "description": "attribute name to be dropped.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "CKHelper",
            "module": "Helper"
        },
        {
            "file": "js\\classes\\CKHelper.js",
            "line": 54,
            "description": "Removes link-related stuff from `link`  and then replaces it in the editor.",
            "itemtype": "method",
            "name": "unlink",
            "params": [
                {
                    "name": "ed",
                    "description": "Represents an editor instance.",
                    "type": "CKEditor.editor"
                },
                {
                    "name": "link",
                    "description": "",
                    "type": "CKEDITOR.dom.element"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "CKHelper",
            "module": "Helper"
        },
        {
            "file": "js\\classes\\CKHelper.js",
            "line": 78,
            "description": "Drops the table row. If after removing the table becomes empty, then removes it as well.",
            "itemtype": "method",
            "name": "dropRow",
            "params": [
                {
                    "name": "ed",
                    "description": "Represents an editor instance.",
                    "type": "CKEditor.editor"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "class": "CKHelper",
            "module": "Helper"
        },
        {
            "file": "js\\classes\\CKHelper.js",
            "line": 102,
            "description": "Whether the argument is a CKEDITOR.editor instance.",
            "itemtype": "method",
            "name": "isEditor",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Any"
                }
            ],
            "class": "CKHelper",
            "module": "Helper"
        },
        {
            "file": "js\\classes\\CKHelper.js",
            "line": 111,
            "description": "Whether the argument is a CKEDITOR.dom.selection instance.",
            "itemtype": "method",
            "name": "isSelection",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Any"
                }
            ],
            "class": "CKHelper",
            "module": "Helper"
        },
        {
            "file": "js\\classes\\CKHelper.js",
            "line": 121,
            "description": "Inserts a row at a specified position with respect to the selected element.\nThe command to insert the row is obtained by capitalizing the second argument\nand appending it to the string 'insert'. Example: if pos is 'after', the command\nto be executed is 'insertAfter'.",
            "itemtype": "method",
            "name": "insertRow",
            "params": [
                {
                    "name": "ed",
                    "description": "Represents an editor instance.",
                    "type": "CKEDITOR.editor"
                },
                {
                    "name": "pos",
                    "description": "where to insert the element with respect to the current one.",
                    "type": "String"
                }
            ],
            "class": "CKHelper",
            "module": "Helper"
        },
        {
            "file": "js\\classes\\CKHelper.js",
            "line": 165,
            "description": "Inserts a column in the table. The localtion of the column to insert is given by the second\nargument that admits two values \"before\" and \"after\" and is inserted before or after the column\nof the selected cell, respectively.",
            "itemtype": "method",
            "name": "insertColumn",
            "params": [
                {
                    "name": "ed",
                    "description": "Represents an editor instance.",
                    "type": "CKEDITOR.editor"
                },
                {
                    "name": "pos",
                    "description": "\"before\" or \"after\": location of the column to insert w.r.t. the current cell",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "CKHelper",
            "module": "Helper"
        },
        {
            "file": "js\\classes\\CKHelper.js",
            "line": 242,
            "description": "Gets the node string representation: if it is of CKEDITOR.NODE_ELEMENT type, then getOuterHtml() is returned,\nif it is of CKEDITOR.NODE_TEXT type, then getText() is returned. If none of the above types, '' (empty string is returned)",
            "itemtype": "method",
            "name": "nodeString",
            "params": [
                {
                    "name": "node",
                    "description": "",
                    "type": "CKEDITOR.dom.element"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "CKHelper",
            "module": "Helper"
        },
        {
            "file": "js\\classes\\CKHelper.js",
            "line": 259,
            "description": "Gets the string representation of the node subelement: if the argument is of CKEDITOR.NODE_ELEMENT type, then\nthe string representation of its child \"offset\" is returned. If the argument is of CKEDITOR.NODE_TEXT type,\nthen: 1. if dir is \"start\" or null, then its substring starting from position 0 to \"offset\" (excluded) is returned;\n2. if dir=\"end\"; then its substring starting from position \"offset\" is returned.",
            "itemtype": "method",
            "name": "nodeOffsetString",
            "params": [
                {
                    "name": "offset",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "node",
                    "description": "",
                    "type": "CKEDITOR.dom.element"
                },
                {
                    "name": "dir",
                    "description": "\"start\" - for the beginning of the string, \"end\" for the end. Default - \"start\"",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "CKHelper",
            "module": "Helper"
        },
        {
            "file": "js\\classes\\CKHelper.js",
            "line": 285,
            "description": "If `elem` is of CKEDITOR.NODE_ELEMENT type, pushes it into array `container` . Otherwise, it is ignored.",
            "itemtype": "method",
            "name": "insertNode",
            "params": [
                {
                    "name": "container",
                    "description": "array in which an element is to be inserted.",
                    "type": "Array"
                },
                {
                    "name": "elem",
                    "description": "if of CKEDITOR.NODE_ELEMENT type, it is to be inserted into container.",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "CKHelper",
            "module": "Helper"
        },
        {
            "file": "js\\classes\\CKHelper.js",
            "line": 298,
            "description": "Transforms each element of the array into a string and concatenates them. String representation\nof the element is supposed to be a text version (without tags).",
            "itemtype": "method",
            "name": "arrayToText",
            "params": [
                {
                    "name": "arr",
                    "description": "array of elements (of mixed types)",
                    "type": "Array"
                },
                {
                    "name": "sep",
                    "description": "a string which will separate the text representation of each element.\n                                                Default is \"\" (empty string).",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "CKHelper",
            "module": "Helper"
        },
        {
            "file": "js\\classes\\CKHelper.js",
            "line": 325,
            "description": "Check whether two different CKEDITOR.dom.node's \"overlaps\". Returns true, if:\n<ol><li>both `elem1` and `elem2` are of `CKEDITOR.dom.element` type and either `elem1` contains `elem2` or viceverse,</li>\n<li>only one of `elem1`, `elem2` is of `CKEDITOR.dom.element` and it contains other,</li>\n<li>both `elem1` and `elem2` are of `CKEDITOR.dom.text` and they are equal.</li></ol>\nOtherwise, false is returned.",
            "params": [
                {
                    "name": "elem1",
                    "description": "",
                    "type": "CKEDITOR.dom.element|CKEDITOR.dom.text"
                },
                {
                    "name": "elem2",
                    "description": "",
                    "type": "CKEDITOR.dom.element|CKEDITOR.dom.text"
                }
            ],
            "itemtype": "method",
            "name": "doesOverlap",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "CKHelper",
            "module": "Helper"
        },
        {
            "file": "js\\classes\\CKHelper.js",
            "line": 354,
            "description": "Inserts a list which items are populated from the selection. If the selection is empty,\na list item with empty content is generated.",
            "itemtype": "method",
            "name": "insertList",
            "params": [
                {
                    "name": "editor",
                    "description": "Represents an editor instance.",
                    "type": "CKEDITOR.editor"
                },
                {
                    "name": "listType",
                    "description": "Type of the list to insert (ol, ul)",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "CKHelper",
            "module": "Helper"
        },
        {
            "file": "js\\classes\\CKHelper.js",
            "line": 406,
            "description": "Change the type of `list` to be `newListType` and replace the old list with newer one.",
            "itemtype": "method",
            "name": "changeListType",
            "params": [
                {
                    "name": "editor",
                    "description": "",
                    "type": "CKEDITOR"
                },
                {
                    "name": "list",
                    "description": "",
                    "type": "CKEDITOR.dom.element"
                },
                {
                    "name": "newListType",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "CKHelper",
            "module": "Helper"
        },
        {
            "file": "js\\classes\\CKHelper.js",
            "line": 429,
            "description": "Returns an array of elements that are next siblings of the given one. The first next sibling becomes the first element\nof the array, the second next sibling becomes the second one and so on.",
            "itemtype": "method",
            "name": "next-siblings",
            "params": [
                {
                    "name": "elem",
                    "description": "",
                    "type": "CKEDITOR.dom.element|CKEDITOR.dom.node"
                }
            ],
            "return": {
                "description": "array of CKEDITOR.dom.node",
                "type": "Array"
            },
            "class": "CKHelper",
            "module": "Helper"
        },
        {
            "file": "js\\classes\\CKHelper.js",
            "line": 446,
            "description": "Returns an array of elements that are siblings of the given one and that come before it. The first prevoius\nsibling becomes the first element of the array, the second previous sibling becomes the second one and so on.",
            "itemtype": "method",
            "name": "prev-siblings",
            "params": [
                {
                    "name": "elem",
                    "description": "",
                    "type": "CKEDITOR.dom.element|CKEDITOR.dom.node"
                }
            ],
            "return": {
                "description": "array of CKEDITOR.dom.node",
                "type": "Array"
            },
            "class": "CKHelper",
            "module": "Helper"
        },
        {
            "file": "js\\classes\\CKHelper.js",
            "line": 463,
            "description": "Returns an array containing `node` and elements that come after it\nthe in DOM in the context of `root`. Therefore, all array elements\nbelong to `root`. `root` itself is not included in the output except\nthe case when it is equal to `node`. If `root` does not contain `node`,\nthe output must be an empty array.\nUses {{#crossLink \"CKHelper/next-siblings:method\"}}CKHelper['next-siblings']{{/crossLink}}\nto fill in array with the next siblings.",
            "itemtype": "method",
            "name": "bunch-next-siblings",
            "params": [
                {
                    "name": "node",
                    "description": "a node that must be inside of root node",
                    "type": "CKEDITOR.dom.element|CKEDITOR.dom.node"
                },
                {
                    "name": "root",
                    "description": "the returned array elements will be inside this node.",
                    "type": "CKEDITOR.dom.element|CKEDITOR.dom.node"
                }
            ],
            "return": {
                "description": "nodes between `node` and `root` last child (inclusively)",
                "type": "Array"
            },
            "class": "CKHelper",
            "module": "Helper"
        },
        {
            "file": "js\\classes\\CKHelper.js",
            "line": 496,
            "description": "Returns an array containing `node` and elements that come before it\nthe in DOM in the context of `root`. Therefore, all array elements\nbelong to `root`. `root` itself is not included in the output except\nthe case when it is equal to `node`. If `root` does not contain `node`,\nthe output must be an empty array.\nUses {{#crossLink \"CKHelper/prev-siblings:method\"}}CKHelper['prev-siblings']{{/crossLink}}\nto fill in array with the next siblings.",
            "itemtype": "method",
            "name": "bunch-prev-siblings",
            "params": [
                {
                    "name": "node",
                    "description": "a node that must be inside of root node",
                    "type": "CKEDITOR.dom.element|CKEDITOR.dom.node"
                },
                {
                    "name": "root",
                    "description": "the returned array elements will be inside this node.",
                    "type": "CKEDITOR.dom.element|CKEDITOR.dom.node"
                }
            ],
            "return": {
                "description": "nodes between `node` and `root` first child (inclusively)",
                "type": "Array"
            },
            "class": "CKHelper",
            "module": "Helper"
        },
        {
            "file": "js\\classes\\CKHelper.js",
            "line": 529,
            "description": "Returns the first child of the `root` containing `node`.\nIf `root` does not contain `node`, `null` is returned.\nUses {{#crossLink \"CKHelper/containsOrEqual:method\"}}CKHelper::containsOrEqual(){{/crossLink}}.",
            "itemtype": "method",
            "name": "childWithNode",
            "params": [
                {
                    "name": "root",
                    "description": "haystack to be searched in",
                    "type": "CKEDITOR.dom.node"
                },
                {
                    "name": "node",
                    "description": "needle to be present in the haystack",
                    "type": "CKEDITOR.dom.node"
                }
            ],
            "return": {
                "description": "the first child of the haystack that contians needle, or `null`\n                                              if there is no nedlee in the haystack.",
                "type": "CKEDITOR.dom.node|null"
            },
            "class": "CKHelper",
            "module": "Helper"
        },
        {
            "file": "js\\classes\\CKHelper.js",
            "line": 554,
            "description": "Returns true if `elem1` contains `elem2` or if they are equal. False otherwise.",
            "itemtype": "method",
            "name": "containsOrEqual",
            "params": [
                {
                    "name": "elem1",
                    "description": "",
                    "type": "CKEDITOR.dom.node"
                },
                {
                    "name": "elem2",
                    "description": "",
                    "type": "CKEDITOR.dom.node"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "CKHelper",
            "module": "Helper"
        },
        {
            "file": "js\\classes\\Helper.js",
            "line": 11,
            "description": "Converts the first letter of the string into the upper case\nIf the string is empty, the output is empty string as well.",
            "itemtype": "method",
            "name": "firstLetterUpperCase",
            "params": [
                {
                    "name": "str",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Helper",
            "module": "Helper"
        },
        {
            "file": "js\\classes\\Helper.js",
            "line": 22,
            "description": "Converts the first letter of the string into the upper case\nIf the string is empty, the output is empty string as well.",
            "itemtype": "method",
            "name": "onlyFirstLetterUpperCase",
            "params": [
                {
                    "name": "str",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Helper",
            "module": "Helper"
        },
        {
            "file": "js\\classes\\Helper.js",
            "line": 34,
            "description": "transforms each element of the input array into a non-negative number.\nIf an element is negative, its absolute value is used.\nIf an element fails to be converted to a number, it is substituted by zero.",
            "itemtype": "method",
            "name": "sanitize",
            "example": [
                "   [1.1, 2.4, 2] -> [1.1, 2.4, 2],\n           [\"4\", -3, 3.2, \"a\"] -> [4, 3, 3.2, 0]"
            ],
            "params": [
                {
                    "name": "arr",
                    "description": "array of numbers",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "array of numbers",
                "type": "Array"
            },
            "class": "Helper",
            "module": "Helper"
        },
        {
            "file": "js\\classes\\Helper.js",
            "line": 54,
            "description": "calculates the sum the array elements. The elements are supposed to be numbers. Otherwise nothing is guaranteed.",
            "itemtype": "method",
            "name": "trace",
            "example": [
                "     [1, 2, 2] -> 1 + 2 + 2 = 5"
            ],
            "params": [
                {
                    "name": "arr",
                    "description": "array of numbers",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Helper",
            "module": "Helper"
        },
        {
            "file": "js\\classes\\Helper.js",
            "line": 72,
            "description": "normalizes the array. If all elements are equal to zero, then the elements are to be normallized uniformally.\nIf not all the elements are equal to zero, but the trace is equal to zero, then the input array is returned.",
            "itemtype": "method",
            "name": "normalize",
            "example": [
                "     [1, 3, 4]       -> [ 0.125, 0.375, 0.5 ]",
                "     [2, 0, -1, -1]  -> [ 2, 0, -1, -1 ]",
                "     [0, 0]          -> [ 0.5, 0.5]"
            ],
            "params": [
                {
                    "name": "Array",
                    "description": "of numbers",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "array of numbers",
                "type": "Array"
            },
            "class": "Helper",
            "module": "Helper"
        },
        {
            "file": "js\\classes\\Helper.js",
            "line": 106,
            "description": "Slices the first argument according to the weights given by the second argument.\nThe elements of the second array are supposed to be non-negative numbers.",
            "itemtype": "method",
            "name": "splitWeighted",
            "example": [
                "   (10, [1, 2, 2])    -> [2, 4, 4],\n           (30, [4, 2, 3, 1]) -> [12, 6, 9, 3]"
            ],
            "params": [
                {
                    "name": "overall",
                    "description": "a number to be splitted",
                    "type": "Number"
                },
                {
                    "name": "pieces",
                    "description": "array of weigths",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "array of numbers",
                "type": "Array"
            },
            "class": "Helper",
            "module": "Helper"
        },
        {
            "file": "js\\classes\\Helper.js",
            "line": 128,
            "description": "rounds each elements of the array",
            "itemtype": "method",
            "name": "roundUp",
            "example": [
                " [1, 2.2, 5.6, 0, 4.5] -> [1, 2, 6, 0, 5]"
            ],
            "params": [
                {
                    "name": "arr",
                    "description": "array of numbers",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "array of integers",
                "type": "Array"
            },
            "class": "Helper",
            "module": "Helper"
        },
        {
            "file": "js\\classes\\Helper.js",
            "line": 142,
            "description": "composition of roundUp and splitWeighted",
            "itemtype": "method",
            "name": "columnWidths",
            "params": [
                {
                    "name": "overall",
                    "description": "table width",
                    "type": "Number"
                },
                {
                    "name": "pieces",
                    "description": "array of nambers",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "array of integers",
                "type": "Array"
            },
            "class": "Helper",
            "module": "Helper"
        },
        {
            "file": "js\\classes\\Helper.js",
            "line": 154,
            "description": "Deletes the protocol name from the url.\nEverything until the first occurence of '://' will be removed (inclusively).",
            "itemtype": "method",
            "name": "dropProtocol",
            "params": [
                {
                    "name": "url",
                    "description": "",
                    "type": "String"
                }
            ],
            "example": [
                "  'http://www.test.com'      -> 'www.test.com'",
                "  'www.test.com'             -> 'www.test.com'"
            ],
            "return": {
                "description": "url without protocol name",
                "type": "String"
            },
            "class": "Helper",
            "module": "Helper"
        },
        {
            "file": "js\\classes\\Helper.js",
            "line": 170,
            "description": "Gives file extension.",
            "itemtype": "method",
            "name": "fileExt",
            "params": [
                {
                    "name": "fileName",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Helper",
            "module": "Helper"
        },
        {
            "file": "js\\classes\\Helper.js",
            "line": 181,
            "description": "Gives the validated width. If the width is given in \"px\" or \"pt\", the integer part is given.\nIf the length is given in \"em\" or \"%\", it is left as it is.",
            "itemtype": "method",
            "name": "validateWidth",
            "params": [
                {
                    "name": "str",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Helper",
            "module": "Helper"
        },
        {
            "file": "js\\classes\\Helper.js",
            "line": 209,
            "description": "Replaces special characters present in the input string by their unicodes. It is supposed to replace symbols like à, ò, è, é\nand not a, b, c etc. For the moment it replaces any characters which unicode is outside the range [32, 125].",
            "itemtype": "method",
            "name": "specialChar",
            "params": [
                {
                    "name": "str",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Helper",
            "module": "Helper"
        },
        {
            "file": "js\\classes\\Helper.js",
            "line": 237,
            "description": "Splits array element at position \"pos\" in two parts in such a way that the trace of the original array\nis equal to the trace of the output array. If it is the first element of the array to be splitted, then\nit is splitted in 1/2 and 1/2 (up to the truncation). If the element has a left neighbour, then the neighbour\nand the element are taken off 1/3 and these two parts are given to the newly created element that is inserted\nbetween the neighbour and the element: [a, b, ...] -> [2/3 a, 1/3 (a + b), 2/3 b, ...]",
            "itemtype": "method",
            "name": "crack",
            "params": [
                {
                    "name": "arr",
                    "description": "array of integers",
                    "type": "Array"
                },
                {
                    "name": "pos",
                    "description": "index of the element, before which an element will be inserted",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "array of integers",
                "type": "Array"
            },
            "class": "Helper",
            "module": "Helper"
        },
        {
            "file": "js\\classes\\Helper.js",
            "line": 277,
            "description": "Flatten the object. This function was written because Node::attributes returns attributes in format\n{'1': {name: \"width\", value:\"100\", ...}, '2': {name: \"color\", value:\"black\", ...}, ...} -> {\"width\":\"100\", \"color\":\"black\", ...}",
            "itemtype": "method",
            "name": "flatten",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "deprecated": true,
            "deprecationMessage": "This method is incorporated in \"load\" methods of Attributes and Style classes.",
            "class": "Helper",
            "module": "Helper"
        },
        {
            "file": "js\\classes\\Helper.js",
            "line": 298,
            "description": "Sandwiches the midlle string with the left and the right ones. If the middle one is empty, empty string is returned.\nIf the right arguments is not given, the left one is used.",
            "itemtype": "method",
            "name": "sandwichWith",
            "params": [
                {
                    "name": "left",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "middle",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "right",
                    "description": "",
                    "type": "String"
                }
            ],
            "type": "String|Null",
            "return": {
                "description": "",
                "type": "String|Null"
            },
            "class": "Helper",
            "module": "Helper"
        },
        {
            "file": "js\\classes\\Helper.js",
            "line": 317,
            "description": "Glues all elements of the array, replace trailing spaces and repaces multiple spaces with a single one.",
            "itemtype": "method",
            "name": "concatDropSpaces",
            "params": [
                {
                    "name": "arr",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "glue",
                    "description": "glue string",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Helper",
            "module": "Helper"
        },
        {
            "file": "js\\classes\\Helper.js",
            "line": 331,
            "description": "Generates a string that can be used as id for the elements of the string `str`. This means that\nthe generated string must be not present among id's of the elements of the string `str`, while it might\nbe present as a content of the elements. The second argument `seed` serves as a hint to create the id:\nif the hint string is available as id, it will be returned. Otherwise, a random symbol from 0-9, a-z\nwill be appended to the hint string until it becomes a valid id.",
            "itemtype": "method",
            "name": "str",
            "params": [
                {
                    "name": "seed",
                    "description": "",
                    "type": "String|Null"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Helper",
            "module": "Helper"
        },
        {
            "file": "js\\classes\\Helper.js",
            "line": 357,
            "description": "Inserts element into array `arr` just before the last element. If the array is empty,\nthe element is inserted into array (so that the element becomes the first and the last\nelement of the array).",
            "itemtype": "method",
            "name": "pushBeforeLast",
            "params": [
                {
                    "name": "arr",
                    "description": "array into which an element is to be inserted",
                    "type": "Array"
                },
                {
                    "name": "elem",
                    "description": "the element to be inserted",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Helper",
            "module": "Helper"
        },
        {
            "file": "js\\classes\\Helper.js",
            "line": 378,
            "description": "Returns true if the string is a semantically valid html string.",
            "itemtype": "method",
            "name": "isSemanticallyValid",
            "params": [
                {
                    "name": "str",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Helper",
            "module": "Helper"
        },
        {
            "file": "js\\classes\\Helper.js",
            "line": 392,
            "description": "Picks up styles of `sel` from css string `str`. Value corresponding to each occurence\nof `sel` is passed to {{#crossLink \"Styles\"}}Styles{{/crossLink}} constructor and transformed\ninto a string representation. After all, these strings are concatenated using semicolon as separator.",
            "itemtype": "method",
            "name": "cssOfSelector",
            "params": [
                {
                    "name": "sel",
                    "description": "name of selector",
                    "type": "String"
                },
                {
                    "name": "str",
                    "description": "css string (i.e: \"div {width: 100px; color: red} img {float: left;}\")",
                    "type": "String"
                }
            ],
            "return": {
                "description": "all styles of the selector",
                "type": "String"
            },
            "class": "Helper",
            "module": "Helper"
        },
        {
            "file": "js\\classes\\properties.js",
            "line": 21,
            "description": "Object that contains all the properties. Its keys and values must be either strings or numbers.\nUse {{#crossLink \"Properties/getProperty:method\"}}getProperty(){{/crossLink}} and\n{{#crossLink \"Properties/setProperty:method\"}}setProperty(){{/crossLink}} methods to\naccess the content of this object.",
            "itemtype": "property",
            "name": "core",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "Properties",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\properties.js",
            "line": 32,
            "description": "Array of allowed types for core keys. Set to 'string', 'number'.",
            "itemtype": "property",
            "name": "allowedCoreKeyTypes",
            "type": "{Array}",
            "access": "private",
            "tagname": "since           0.0.5",
            "class": "Properties",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\properties.js",
            "line": 41,
            "description": "Array of allowed types for core values. For the moment, it is allowed to have string-valued, number-valued\nand object-valued values of the keys.",
            "itemtype": "property",
            "name": "allowedCoreValueTypes",
            "type": "{Array}",
            "access": "private",
            "tagname": "since           0.0.5",
            "class": "Properties",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\properties.js",
            "line": 52,
            "description": "The  name of the class.",
            "itemtype": "property",
            "name": "className",
            "type": "{String}",
            "access": "private",
            "tagname": "",
            "class": "Properties",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\properties.js",
            "line": 60,
            "description": "Mode to be used when representing this instance as a string by means of\n{{#crossLink \"Properties/toString:method\"}}toString{{/crossLink}} method.\nIf it is set to 0, then string representation has the following form\n`width=\"20\" title=\"read me!\"`\nIf it is set to 1, then string representation has the following form\n`width: 50px; color: red`.",
            "itemtype": "property",
            "name": "_mode",
            "type": "{Integer}",
            "access": "private",
            "tagname": "",
            "default": "0",
            "class": "Properties",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\properties.js",
            "line": 74,
            "description": "{{#crossLink \"Property/_mode:property\"}}_mode{{/crossLink}} setter. If argument\nis different from 0 and 1, it is ignored.",
            "itemtype": "method",
            "name": "setMode",
            "params": [
                {
                    "name": "m",
                    "description": "",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Properties",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\properties.js",
            "line": 90,
            "description": "{{#crossLink \"Property/_mode:property\"}}_mode{{/crossLink}} getter.",
            "itemtype": "method",
            "name": "getMode",
            "return": {
                "description": "",
                "type": "Integer"
            },
            "since": "0.0.5",
            "class": "Properties",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\properties.js",
            "line": 100,
            "description": "{{#crossLink \"Properties/className:property\"}}Class name{{/crossLink}} getter.",
            "itemtype": "method",
            "name": "getName",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Properties",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\properties.js",
            "line": 109,
            "description": "{{#crossLink \"Properties/className:property\"}}Class name{{/crossLink}} setter.",
            "itemtype": "method",
            "name": "setName",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Properties",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\properties.js",
            "line": 122,
            "description": "Sets value of `style` key. Converts argument into {{#crossLink \"Properties\"}}Properties{{/crossLink}} instance\nand then performs assignment.",
            "itemtype": "method",
            "name": "setStyles",
            "params": [
                {
                    "name": "stl",
                    "description": "",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "since": "0.0.5",
            "class": "Properties",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\properties.js",
            "line": 135,
            "description": "If both `key` and `value` are of allowed types (given by\n{{#crossLink \"Properties/allowedCoreKeyTypes:property\"}}allowedCoreKeyTypes{{/crossLink}} and\n{{#crossLink \"Properties/allowedCoreValueTypes:property\"}}allowedCoreValueTypes{{/crossLink}}), then property `key` of\n{{#crossLink \"Properties/core:property\"}}core{{/crossLink}} is set to `value`\nand `true` is returned. Otherwise, `false` is returned. If `key` is a string `style`, then method\n{{#crossLink \"Properties/setStyles:method\"}}setStyles(){{/crossLink}} is envoked.",
            "itemtype": "method",
            "name": "setProperty",
            "params": [
                {
                    "name": "key",
                    "description": "",
                    "type": "Any"
                },
                {
                    "name": "value",
                    "description": "",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "true in case of success, false otherwise.",
                "type": "Boolean"
            },
            "class": "Properties",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\properties.js",
            "line": 161,
            "description": "allowed key types getter",
            "itemtype": "method",
            "name": "getAllowedKeyTypes",
            "since": "0.0.5",
            "return": {
                "description": "array of strings",
                "type": "Array"
            },
            "class": "Properties",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\properties.js",
            "line": 171,
            "description": "allowed value types getter",
            "itemtype": "method",
            "name": "getAllowedValueTypes",
            "since": "0.0.5",
            "return": {
                "description": "array of strings",
                "type": "Array"
            },
            "class": "Properties",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\properties.js",
            "line": 183,
            "description": "Retrieves the value of the requested property from\n{{#crossLink \"Properties/core:property\"}}core{{/crossLink}}\nIf it does not exist, `undefined` is returned.",
            "itemtype": "method",
            "name": "getProperty",
            "return": {
                "description": "",
                "type": "Any"
            },
            "class": "Properties",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\properties.js",
            "line": 196,
            "description": "If the key is present in {{#crossLink \"Properties/core:property\"}}core{{/crossLink}}, drops it and\nreturns the key value.",
            "itemtype": "method",
            "name": "dropProperty",
            "params": [
                {
                    "name": "key",
                    "description": "",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "",
                "type": "Any"
            },
            "class": "Properties",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\properties.js",
            "line": 211,
            "description": "Replaces {{#crossLink \"Properties/core:property\"}}core{{/crossLink}} with empty object {}.",
            "itemtype": "method",
            "name": "dropAllProperties",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Properties",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\properties.js",
            "line": 222,
            "description": "Fills in the core with key-value pairs from the argument if any. If the argument\nis a string, splits it according to the pattern \"key: value;\". If the argument is\nan object, then it gets its key-value pairs. Obtained blocks are then sent one\nby one to {{#crossLink \"Properties/setProperty:method\"}}setProperty(){{/crossLink}}\nmethod.",
            "itemtype": "method",
            "name": "appendPropertyAsStringOrObj",
            "params": [
                {
                    "name": "input",
                    "description": "",
                    "type": "Any"
                }
            ],
            "access": "private",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Properties",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\properties.js",
            "line": 267,
            "description": "Adds properties into {{#crossLink \"Properties/core:property\"}}core{{/crossLink}}. It passes its argument to a\nprivate method\n{{#crossLink \"Properties/appendPropertyAsStringOrObj:method\"}}appendPropertyAsStringOrObj(){{/crossLink}}.",
            "itemtype": "method",
            "name": "appendProperty",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Properties",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\properties.js",
            "line": 279,
            "description": "Appends properties to `style` key. If the key does not exist, creates it.",
            "itemtype": "method",
            "name": "appendStyle",
            "params": [
                {
                    "name": "prop",
                    "description": "",
                    "type": "Properties"
                }
            ],
            "since": "0.0.5",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Properties",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\properties.js",
            "line": 291,
            "description": "Initializes `style` key: if it does not exist, set it to\na new instance of {{#crossLink \"Properties\"}}Properties{{/crossLink}} with\n{{#crossLink \"Properties/_mode:property\"}}_mode{{/crossLink}} set to 1.",
            "itemtype": "method",
            "name": "initializeStyle",
            "since": "0.0.5",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Properties",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\properties.js",
            "line": 309,
            "description": "Switches property `propName` between `val` and `altVal` in the following way:\n<ol><li>\nif the instance has property `propName` equal to `val`, then the method imposes\nits value to be `altVal` (if `altVal` is not defined, then the key `propName` gets dropped).\n</li><li>\nif the instance contains property `propName` equal to `altVal`, then the method sets\nits value to be `val`.\n</li><li>\nif the instance does not have property `propName`, then the method imposes it to be `val`.\n</li></ol>",
            "itemtype": "method",
            "name": "toggleProperty",
            "params": [
                {
                    "name": "propName",
                    "description": "property key to toggle (i.e., \"width\", \"position\")",
                    "type": "String"
                },
                {
                    "name": "val",
                    "description": "value of property key (i.e., \"25em\", \"fixed\")",
                    "type": "String"
                },
                {
                    "name": "altVal",
                    "description": "alternative value of property key (i.e. null, \"0em\").\n                                               This parameter is optional.",
                    "type": "String|null"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Properties",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\properties.js",
            "line": 340,
            "description": "Returns `true` if the instance has property `key` set and the value of this property is not\nin `ignoreValues` array. Otherwise, `false` is returned.",
            "itemtype": "method",
            "name": "hasSet",
            "params": [
                {
                    "name": "key",
                    "description": "property name which value is to be checked",
                    "type": "String"
                },
                {
                    "name": "ignoreValues",
                    "description": "Optional. Array of \"ignore-values\": if key value belongs to\n                                                         this array, then the key is considered as not set.\n                                                         If this parameter is not an array, then it is ignored.",
                    "type": "Array|Null"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Properties",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\properties.js",
            "line": 361,
            "description": "Splits the argument in key-value pieces as it is performed in\n{{#crossLink \"Properties/appendPropertyAsStringOrObj:method\"}}appendPropertyAsStringOrObj(){{/crossLink}}.\nIf the `key` is not present in the {{#crossLink \"Properties/core:property\"}}core{{/crossLink}}, it is initialized\nwith `value`. Otherwise, it is ignored.",
            "itemtype": "method",
            "name": "suggestProperty",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "String|Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Properties",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\properties.js",
            "line": 398,
            "description": "Returns `true` if requested property is the {{#crossLink \"Properties/core:property\"}}core{{/crossLink}} key,\n`false` otherwise.",
            "itemtype": "method",
            "name": "hasProperty",
            "params": [
                {
                    "name": "key",
                    "description": "",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Properties",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\properties.js",
            "line": 409,
            "description": "Gets the number of records in {{#crossLink \"Properties/core:property\"}}core{{/crossLink}}.",
            "itemtype": "method",
            "name": "propNum",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Properties",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\properties.js",
            "line": 418,
            "description": "Returns a copy of the {{#crossLink \"Properties/core:property\"}}core{{/crossLink}}.",
            "itemtype": "method",
            "name": "getCore",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Properties",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\properties.js",
            "line": 434,
            "description": "Compares {{#crossLink \"Properties/core:property\"}}core{{/crossLink}} of the target and the argument.\nReturns `true` if they are equal, `false` otherwise.",
            "itemtype": "method",
            "name": "isTheSameAs",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Properties",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\properties.js",
            "line": 458,
            "description": "Clones the target. Parses all attributes of the target. If the attribute responds to \"clone\"\nmethod, then assign the result of this method to the corresponding clone attribute. Otherwise,\nassign the attribute value to the clone attribute (potentially problematic for what is passed\nby reference and not by value, like arrays).\n{{#crossLink \"Properties/core:property\"}}Core{{/crossLink}} is a private variable, so in the\nclone it is populated by means of {{#crossLink \"Properties/getProperty:method\"}}getProperty(){{/crossLink}}\nand {{#crossLink \"Properties/setProperty:method\"}}setProperty(){{/crossLink}} method.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Properties",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\properties.js",
            "line": 492,
            "description": "Returns `true` if {{#crossLink \"Properties/core:property\"}}core{{/crossLink}} has no keys,\notherwise - `false`.",
            "itemtype": "method",
            "name": "isEmpty",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Properties",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\properties.js",
            "line": 503,
            "description": "String representation of the instance. If {{#crossLink \"Properties/_mode:property\"}}_mode{{/crossLink}} is set to 0,\nthe representation of the following type is produced:\n<div style=\"font-family: Courier; font-weight: bold;padding: 1em;\">width=\"20\" title=\"read me!\"</div>\nIf {{#crossLink \"Properties/_mode:property\"}}_mode{{/crossLink}} is set to 1, the representation of the following\ntype is produced:\n<div style=\"font-family: Courier; font-weight: bold;padding: 1em;\">width: 50px; color: red</div>\nIt parses all {{#crossLink \"Properties/core:property\"}}core{{/crossLink}} keys and if\n<ol><li>\ncorresponding value responds to a `toString()` method\n</li><li>\ncorresponding value is a number and {{#crossLink \"Properties/_mode:property\"}}_mode{{/crossLink}} is 1,\nthen 'px' is appended (**resolve this explicit dependency on unit of measurement!**)\n</li><li>\ncorresponding value is a string\n</li>\n</ol>\nthen uses it for further substitution. Otherwise, the value is ignored.\n\nFurther, if the corresponding string representation of the value turns out to be empty or undefined,\nthe whole key-value pair is ignored.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "",
                "type": "String"
            },
            "since": "0.0.5",
            "class": "Properties",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\properties.js",
            "line": 566,
            "description": "Loads attributes from the argument into {{#crossLink \"Properties/core:property\"}}core{{/crossLink}}.\nReturns `true` if loading succeeds and `false` otherwise.\n\nTo do: for the moment, thw method always returns `true`.\n\nThe argument is supposed to be of a type\n[NamedNodeMap](http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#ID-1780488922).\nNevertheless, it is sufficient that `attr` be a collection of objects with `name` and `value` properties.",
            "itemtype": "method",
            "name": "load",
            "params": [
                {
                    "name": "attr",
                    "description": "instance of NamedNodeMap",
                    "type": "NamedNodeMap"
                }
            ],
            "return": {
                "description": "true, if the properties are loaded, false otherwise",
                "type": "Boolean"
            },
            "class": "Properties",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\properties.js",
            "line": 601,
            "description": "Returns `true` if the instance has key `style`, `false` otherwise. Alias for\n{{#crossLink \"Properties/hasProperty:method\"}}hasProperty('style'){{/crossLink}} method.",
            "itemtype": "method",
            "name": "hasStyles",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Properties",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\properties.js",
            "line": 611,
            "description": "Returns value of `style` key. Alias for {{#crossLink \"Properties/getProperty:method\"}}getProperty('styles'){{/crossLink}}.",
            "itemtype": "method",
            "name": "getStyles",
            "return": {
                "description": "",
                "type": "Properties"
            },
            "since": "0.0.5",
            "class": "Properties",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\properties.js",
            "line": 622,
            "description": "Returns `true` if instance contains `style` key inside which there is a key `propName`.\nOtherwise, `false` is returned.",
            "itemtype": "method",
            "name": "hasStyleProperty",
            "params": [
                {
                    "name": "propName",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "since": "0.0.5",
            "class": "Properties",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\properties.js",
            "line": 635,
            "description": "Sets the `key` to be equal to `value` inside object {{#crossLink \"Properties\"}}Properties{{/crossLink}}\ninstance corresponding to `style` key of the current objects which is, naturally,\n{{#crossLink \"Properties\"}}Properties{{/crossLink}} instance as well.",
            "itemtype": "method",
            "name": "setStyleProperty",
            "since": "0.0.5",
            "params": [
                {
                    "name": "key",
                    "description": "",
                    "type": "Any"
                },
                {
                    "name": "value",
                    "description": "",
                    "type": "Any"
                }
            ],
            "class": "Properties",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\properties.js",
            "line": 652,
            "description": "Returns the value of key `propName` inside `style` key (if it exists) of the current object.\nIf it does not exist, nothing is returned.",
            "itemtype": "method",
            "name": "getStyleProperty",
            "since": "0.0.5",
            "params": [
                {
                    "name": "propName",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Any"
            },
            "class": "Properties",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\properties.js",
            "line": 668,
            "description": "Returns object {width: ..., color: ..., style: ...} describing border. If the Style has no Properties\n'border-style', then 'none' will be used. If the Style has no 'border-width', then zero will be used.\nIf the Style has no Properties 'border-color', then it will not be set.",
            "itemtype": "method",
            "name": "getBorderInfo",
            "return": {
                "description": "object of the form {'width': ..., 'color': ..., 'style': ...}",
                "type": "Object"
            },
            "since": "0.0.5",
            "class": "Properties",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\properties.js",
            "line": 687,
            "description": "Applies the attributes on the argument. The argument is supposed to be an instance of\n[DOM.Element](https://developer.mozilla.org/en-US/docs/Web/API/element). In fact,\nit is used only [setAttribute()](https://developer.mozilla.org/en-US/docs/Web/API/Element.setAttribute)\nmethod of that instance.",
            "itemtype": "method",
            "name": "decorateElement",
            "params": [
                {
                    "name": "elem",
                    "description": "",
                    "type": "DOM.Element"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Properties",
            "module": "Properties"
        },
        {
            "file": "js\\classes\\properties.js",
            "line": 707,
            "description": "Sets key `width` inside {{#crossLink \"Poroperties/_core:property\"}}_core{{/crossLink}}\nas well as keys `width`, `max-width` and `min-width` inside `style` of\n{{#crossLink \"Poroperties/_core:property\"}}_core{{/crossLink}}.",
            "itemtype": "method",
            "name": "setWidth",
            "params": [
                {
                    "name": "w",
                    "description": "",
                    "type": "Number|String"
                }
            ],
            "since": "0.0.5",
            "class": "Properties",
            "module": "Properties"
        },
        {
            "file": "js\\controllers\\CLink.js",
            "line": 14,
            "description": "Reads the content of the link insertion dialog, generates links and inserts them into the editor.",
            "itemtype": "method",
            "name": "convertToLinks",
            "params": [
                {
                    "name": "context",
                    "description": "context of the dialog menu",
                    "type": "Object"
                },
                {
                    "name": "editor",
                    "description": "editor instance",
                    "type": "Object"
                },
                {
                    "name": "selection",
                    "description": "instance of Selection class\n                                                       Contains objects that user selects in the editor window.",
                    "type": "Selection"
                }
            ],
            "return": {
                "description": "inserts link into the editor",
                "type": "Void"
            },
            "class": "CLink",
            "module": "Controllers"
        },
        {
            "file": "js\\controllers\\CLink.js",
            "line": 74,
            "description": "Populates the field of the link insertion dialog.",
            "itemtype": "method",
            "name": "fillInDialog",
            "params": [
                {
                    "name": "context",
                    "description": "context of the dialog menu",
                    "type": "Object"
                },
                {
                    "name": "editor",
                    "description": "editor instance",
                    "type": "Object"
                },
                {
                    "name": "selection",
                    "description": "instance of Selection class",
                    "type": "Selection"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "CLink",
            "module": "Controllers"
        },
        {
            "file": "js\\controllers\\CTable.js",
            "line": 13,
            "description": "Returns the width of the parent element available for its children.\n<pre>\navailable width = (element width) - (element left border width) -\n\t\t(element right border width) - (element left margin) - (element right margin)\n</pre>\nThe element width is supposed to be greater than zero and hence to have a unit of\nmeasurement (e.g. 'px'). If not set, widths of other attributes are equal to zero\nwithout unit of measurement.  In this case one has to set the unit of measurement\nequal to the element width.",
            "itemtype": "method",
            "name": "parentWidth",
            "return": {
                "description": "available width for the children as Unit object\n                                 (with properties \"value\" and \"measure\")",
                "type": "Number"
            },
            "class": "CTable",
            "module": "Controllers"
        },
        {
            "file": "js\\controllers\\CTable.js",
            "line": 54,
            "description": "Returns html string for the table with properties specified by the user\nin the dialog menu.",
            "itemtype": "method",
            "name": "template",
            "params": [
                {
                    "name": "context",
                    "description": "context by means the variables are passed from view to the controller",
                    "type": "Object"
                },
                {
                    "name": "editor",
                    "description": "editor instance",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "DOM.Element"
            },
            "class": "CTable",
            "module": "Controllers"
        }
    ],
    "warnings": []
}